<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岁染</title>
  <icon>https://www.gravatar.com/avatar/7228219e90ece9b38ea5921da1fcc500</icon>
  <subtitle>别来无恙，你在心上</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-07-23T12:45:24.281Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Kagura</name>
    <email>651421775@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【GEE】GEE中文食用说明书！</title>
    <link href="http://example.com/2023/07/23/%E3%80%90GEE%E3%80%91GEE%E4%B8%AD%E6%96%87%E9%A3%9F%E7%94%A8%E8%AF%B4%E6%98%8E%E4%B9%A6%EF%BC%81/"/>
    <id>http://example.com/2023/07/23/%E3%80%90GEE%E3%80%91GEE%E4%B8%AD%E6%96%87%E9%A3%9F%E7%94%A8%E8%AF%B4%E6%98%8E%E4%B9%A6%EF%BC%81/</id>
    <published>2023-07-23T12:43:08.603Z</published>
    <updated>2023-07-23T12:45:24.281Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>详见 <a href="https://chen-xiaolv.github.io/GeeDocumentC/">https://chen-xiaolv.github.io/GeeDocumentC/</a></p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">正在施工中！</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="GIS" scheme="http://example.com/tags/GIS/"/>
    
    <category term="RS" scheme="http://example.com/tags/RS/"/>
    
    <category term="GEE" scheme="http://example.com/tags/GEE/"/>
    
  </entry>
  
  <entry>
    <title>【GEE】GeeMap食用说明书</title>
    <link href="http://example.com/2023/07/17/%E3%80%90GEE%E3%80%91GeeMap/"/>
    <id>http://example.com/2023/07/17/%E3%80%90GEE%E3%80%91GeeMap/</id>
    <published>2023-07-17T12:28:33.343Z</published>
    <updated>2023-07-23T12:44:12.547Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>纪念一下我装了半个下午终于装上的环境</p></blockquote><p>GEE是吴秋生博士为GEE开发的一套可视化Python模块，这个模块集成了诸多可视化工具和算法，能够助力GEE Python API的开发。目前已经在Github上获得2.8k stars了。</p><img src="/2023/07/17/%E3%80%90GEE%E3%80%91GeeMap/image-20230717203655539.png" alt="image-20230717203655539" style="zoom:50%;"><blockquote><p>吴老师是美国田纳西大学地理系的助理教授</p></blockquote><hr><h3 id="Chapter-1-GeeMap安装">Chapter 1 GeeMap安装</h3><p>保证conda环境下，我们按照如下步骤安装：</p><blockquote><p>这个是否一定是3.8不好说，反正我3.9是出问题了</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">conda create -n gee python=<span class="number">3.8</span></span><br><span class="line"></span><br><span class="line">conda activate gee</span><br><span class="line"></span><br><span class="line">conda install geemap -c conda-forge</span><br><span class="line"></span><br><span class="line">conda install geopandas</span><br><span class="line"></span><br><span class="line">conda install mamba -c conda-forge</span><br><span class="line"></span><br><span class="line">mamba install geemap xarray_leaflet -c conda-forge</span><br></pre></td></tr></table></figure><p>然后我们打开Jupyter：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">activate gee</span><br><span class="line"></span><br><span class="line">jupyter lab</span><br></pre></td></tr></table></figure><p>输入以下代码进行测试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ee</span><br><span class="line"><span class="keyword">import</span> geemap</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">geemap.set_proxy(port=<span class="number">7890</span>)</span><br><span class="line"></span><br><span class="line">ee.Authenticate() <span class="comment"># 这一步是需要Google账号授权，按照步骤来填入tokens就行啦</span></span><br><span class="line"></span><br><span class="line">ee.Initialize() <span class="comment"># 初始化(实例化)</span></span><br><span class="line"></span><br><span class="line">Map=geemap.Map()</span><br><span class="line">Map</span><br></pre></td></tr></table></figure><p>当出现下图时，说明安装成功啦：</p><img src="/2023/07/17/%E3%80%90GEE%E3%80%91GeeMap/image-20230717204659590.png" alt="image-20230717204659590" style="zoom:50%;"><p>当然，这里指不定会爆出一些有的没的的问题，比如DLL找不到模块什么的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow --upgrade</span><br></pre></td></tr></table></figure><p>或者是SSL Error:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.environ[<span class="string">&#x27;HTTP_PROXY&#x27;</span>] = <span class="string">&#x27;http://127.0.0.1:7890&#x27;</span></span><br><span class="line">os.environ[<span class="string">&#x27;HTTPS_PROXY&#x27;</span>] = <span class="string">&#x27;https://127.0.0.1:7890&#x27;</span></span><br></pre></td></tr></table></figure><p>将其设置为全局代理就行。</p><img src="/2023/07/17/%E3%80%90GEE%E3%80%91GeeMap/image-20230717210225282.png" alt="image-20230717210225282" style="zoom:33%;"><p>代理可能要开TUN Model <a href="https://docs.cfw.lbyczf.com/contents/tun.html#windows">说明</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">~没有简介！</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="GIS" scheme="http://example.com/tags/GIS/"/>
    
    <category term="RS" scheme="http://example.com/tags/RS/"/>
    
    <category term="GEE" scheme="http://example.com/tags/GEE/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/07/16/JavaSCript/"/>
    <id>http://example.com/2023/07/16/JavaSCript/</id>
    <published>2023-07-16T14:18:42.163Z</published>
    <updated>2023-07-16T15:47:49.387Z</updated>
    
    <content type="html"><![CDATA[<p>模板字符串</p><script>let header="";let html=`<h2>${header}</h2><ul>`;let c=["RUNOOB","GOOGLE","TAOBAO"];for(const x of c){html+=`<li>${x}</li>`;};html+=`</ul>`;document.getElementById("demo").innerHTML=html;</script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;模板字符串&lt;/p&gt;
&lt;script&gt;
let header=&quot;&quot;;
let html=`&lt;h2&gt;${header}&lt;/h2&gt;&lt;ul&gt;`;
let c=[&quot;RUNOOB&quot;,&quot;GOOGLE&quot;,&quot;TAOBAO&quot;];
for(const x of c){
	html+=`&lt;li&gt;$</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【Typora】常用公式查询</title>
    <link href="http://example.com/2023/07/14/%E3%80%90Typora%E3%80%91%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F%E6%9F%A5%E8%AF%A2/"/>
    <id>http://example.com/2023/07/14/%E3%80%90Typora%E3%80%91%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F%E6%9F%A5%E8%AF%A2/</id>
    <published>2023-07-14T02:13:41.525Z</published>
    <updated>2023-07-14T02:23:21.790Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>其实之前整过这一类，但是好像在本地没有存档，这边就重新记录一下</p></blockquote><h4 id="绘制花括号函数">绘制花括号函数</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mo fence="true" lspace="0em" rspace="0em">{</mo></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation}\left\{\right.\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left right" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mi>p</mi><mi>i</mi></mrow><mn>2</mn></mfrac></mstyle><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mi>t</mi><mo stretchy="false">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mfrac><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mi>p</mi><mi>i</mi></mrow><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mi>s</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>≤</mo><mi>s</mi><mo>≤</mo><mi>L</mi><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>t</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>1.</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mfrac><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mi>p</mi><mi>i</mi></mrow><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mi>t</mi><mo stretchy="false">)</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mfrac><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mi>p</mi><mi>i</mi></mrow><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation}\left\{\begin{array}{lr}x=\dfrac{3/pi}{2}(1+2t)cos(\frac{3/pi}{2}(1+2t)),\\y=s, &amp; 0\le s \le L, |t|\le 1.\\z=\frac{3/pi}{2}(1+2t)sin(\frac{3/pi}{2}(1+2t)),\end{array}\right.\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5915em;"><span style="top:-4.5915em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3/</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3/</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mpunct">,</span></span></span><span style="top:-3.0655em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span></span></span><span style="top:-1.6955em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3/</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3/</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0915em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4785em;"><span style="top:-2.6385em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7215em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:4.65em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></p><h4 id="分段函数">分段函数</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">y=    \begin{equation}\left\{    \begin{array}{c}        x-1,&amp; x \le 0\\            x+1, &amp; x&gt;0            \end{array}    \right.    \end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mrow><mi>n</mi><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>∗</mo><msub><mi>F</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub><mtext> </mtext><mi>o</mi><mi>r</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>∗</mo><msub><mi>F</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub><mtext> </mtext><mi>o</mi><mi>r</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>∗</mo><msub><mi>F</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">F_{nij}=\begin{equation}\left\{\begin{array}{c}P_{ij}*F_{n1} \ or\\R_{ij}*F_{n2} \ or\\S_{ij}*F_{n2}\end{array}\right.\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">nij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.5em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.492em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-4.3em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:4.05em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">记录一些常用的数学公式</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>【数据分析实践】森林覆盖类型预测</title>
    <link href="http://example.com/2023/07/13/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E6%A3%AE%E6%9E%97%E8%A6%86%E7%9B%96%E7%B1%BB%E5%9E%8B%E9%A2%84%E6%B5%8B/"/>
    <id>http://example.com/2023/07/13/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E6%A3%AE%E6%9E%97%E8%A6%86%E7%9B%96%E7%B1%BB%E5%9E%8B%E9%A2%84%E6%B5%8B/</id>
    <published>2023-07-13T00:56:04.243Z</published>
    <updated>2023-07-13T00:57:10.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kaggle-竞赛-Forest-Cover-Type-Prediction-森林覆盖类型预测">Kaggle 竞赛 Forest Cover Type Prediction 森林覆盖类型预测</h2><p><img src="https://raw.githubusercontent.com/Chen-XiaoLv/ML-in-Geochemistry/master/READEME/image-20230701114337359.png" alt="image-20230701114337359"></p><hr><h3 id="Description">Description</h3><p>在这个比赛中，你被要求从严格的地图变量（相对于遥感数据）中预测森林覆盖类型（主要的树木覆盖种类）。一个给定的30×30米单元的实际森林覆盖类型是由美国森林服务局（USFS）第二区域资源信息系统数据确定的。然后从美国地质调查局和美国林业局获得的数据中得出独立变量。数据为原始形式（未按比例），包含定性自变量的二进制列数据，如荒野地区和土壤类型。</p><p>本研究区包括位于科罗拉多州北部罗斯福国家森林的四个荒野地区。这些地区代表了人为干扰最小的森林，因此，现有的森林覆盖类型更多的是生态过程的结果，而不是森林管理实践。</p><h3 id="Requirement">Requirement</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">numpy==1.23.3</span><br><span class="line">pandas==1.4.4</span><br><span class="line">pyecharts=2.0.1</span><br><span class="line">sklearn==1.1.3</span><br><span class="line">seaborn==0.11.2</span><br><span class="line">torch==1.12.0+cu116</span><br><span class="line">xgboost==1.7.1</span><br><span class="line">lightgbm==3.3.3</span><br></pre></td></tr></table></figure><hr><p>项目的流程图如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    id1(问题建模)--&gt;id2(数据探索)</span><br><span class="line">    id2--&gt;id3(特征工程)</span><br><span class="line">    id3--&gt;id4(模型训练)</span><br><span class="line">    id4--&gt;id5(模型融合)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><p>我们将从这五个部分介绍本赛题。</p><hr><h2 id="一-赛题理解">一 赛题理解</h2><h3 id="1-背景">1 背景</h3><p>本次竞赛使用了美国森林服务局(US Forest Service)提供的30x30m分辨率的森林覆盖类型区域，包括一个训练集和一个测试集。要求采用训练集的数据对测试集的森林覆盖类型进行预测。</p><h3 id="2-数据">2 数据</h3><p>该数据集一共有十三个属性，包括高程、坡度、坡向、到水文地物的垂直距离、水平距离、到道路的水平距离等，主要包括整形的定量数据和one-hot编码过的定名数据</p><h3 id="3-评价指标">3 评价指标</h3><p>赛题中并未给出，由于模型是一个多分类问题，我们选择采用多分类交叉熵和R2系数来进行评价。</p><p>交叉熵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>c</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>y</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Loss=-\sum^{c-1}_{i=0}y_i\log (p_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">oss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>R2系数</p><p>R2系数又称决定系数，反映因变量的全部变异能通过回归关系被自变量解释的比例</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>M</mi><mi>S</mi><mi>E</mi></mrow><mrow><mi>V</mi><mi>A</mi><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R^2=1-\frac{MSE}{VAR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">MSE</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">MSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">MSE</span></span></span></span>表示均方误差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">VAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>表示方差，值得注意的是，均方误差代表与真实值的偏差，而方差则是与平均值的偏差。</p><p>本项目的主要流程如下：</p><p><img src="https://raw.githubusercontent.com/Chen-XiaoLv/ML-in-Geochemistry/7f3240dd46093a5db3cd81fb7026384e9a27b6ac/READEME/%E6%9C%AA%E5%91%BD%E5%90%8D%E7%BB%98%E5%9B%BE.drawio.svg" alt="未命名绘图.drawio"></p><hr><h2 id="二-数据探索性分析">二 数据探索性分析</h2><p>在本阶段，主要工作是对数据有一个简单的认识，以及对数据进行一定的预处理。</p><h3 id="1-前期准备与数据读取">1 前期准备与数据读取</h3><h4 id="1-1-模块导入">1.1 模块导入</h4><p>本次使用的模块如下：</p><p><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703000609508.png" alt="image-20230703000609508"></p><p>直接先导进去吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> power_transform</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> CurrentConfig</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler,MinMaxScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">import</span> torch </span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> alive_progress</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader,Dataset</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> KFold</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb</span><br><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> plot_importance, plot_tree</span><br><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><h4 id="1-2-绘图模块">1.2 绘图模块</h4><p>由于需要不停地调用可视化模块接口，这里我搞了些函数方便调用，不装<code>pyecharts</code>的话也没关系，完全可以用<code>matplotlib</code>代替的，这里只是为了美观些🌟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">DrawBox</span>(<span class="params">x,y_data</span>):</span><br><span class="line">    box_plot = Boxplot()</span><br><span class="line">    box_plot = (</span><br><span class="line">        box_plot.add_xaxis(xaxis_data=[i <span class="keyword">for</span> i <span class="keyword">in</span> x])</span><br><span class="line">            .add_yaxis(series_name=<span class="string">&quot;箱线图&quot;</span>, y_axis=box_plot.prepare_data(y_data))</span><br><span class="line">            .set_global_opts(</span><br><span class="line">            title_opts=opts.TitleOpts(</span><br><span class="line">                pos_left=<span class="string">&quot;left&quot;</span>, title=<span class="string">&quot;数值数据分布情况&quot;</span></span><br><span class="line">            ),</span><br><span class="line">            xaxis_opts=opts.AxisOpts(</span><br><span class="line">                type_=<span class="string">&quot;category&quot;</span>,</span><br><span class="line">                boundary_gap=<span class="literal">True</span>,</span><br><span class="line">                splitline_opts=opts.SplitLineOpts(is_show=<span class="literal">True</span>),  <span class="comment"># 分割线显示与否</span></span><br><span class="line">            ),</span><br><span class="line">            yaxis_opts=opts.AxisOpts(  <span class="comment"># y轴</span></span><br><span class="line">                type_=<span class="string">&quot;value&quot;</span>,</span><br><span class="line">                splitarea_opts=opts.SplitAreaOpts(</span><br><span class="line">                    is_show=<span class="literal">True</span>, areastyle_opts=opts.AreaStyleOpts(opacity=<span class="number">1</span>)  <span class="comment"># 横向分割</span></span><br><span class="line">                ),</span><br><span class="line">            ),</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> box_plot</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Draw</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,x,y,ylabel,title,xname,yname</span>):</span><br><span class="line">        self.x=x</span><br><span class="line">        self.y=y</span><br><span class="line">        self.ylabel=ylabel</span><br><span class="line">        self.title=title</span><br><span class="line">        self.xname=xname</span><br><span class="line">        self.yname=yname</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">self,tool</span>):</span><br><span class="line">        tool.add_xaxis(self.x)</span><br><span class="line">        <span class="keyword">for</span> i, j <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.y):</span><br><span class="line">            tool.add_yaxis(self.ylabel[i], j)</span><br><span class="line"></span><br><span class="line">        tool.set_series_opts(markpoint_opts=opts.MarkPointOpts(</span><br><span class="line">            data=[opts.MarkPointItem(type_=<span class="string">&quot;max&quot;</span>, name=<span class="string">&quot;最大值&quot;</span>),  <span class="comment">##设置最大值 标记</span></span><br><span class="line">                  opts.MarkPointItem(type_=<span class="string">&quot;min&quot;</span>, name=<span class="string">&quot;最小值&quot;</span>),  <span class="comment"># 设置最小值标记</span></span><br><span class="line">                  ], symbol=<span class="string">&#x27;diamond&#x27;</span>, symbol_size=<span class="number">45</span>), markline_opts=opts.MarkLineOpts(</span><br><span class="line">            data=[opts.MarkLineItem(type_=<span class="string">&quot;average&quot;</span>, name=<span class="string">&quot;平均值&quot;</span>)]</span><br><span class="line">        ))</span><br><span class="line">        tool.set_global_opts(title_opts=opts.TitleOpts(title=self.title)</span><br><span class="line">                             , toolbox_opts=opts.ToolboxOpts()</span><br><span class="line">                             )</span><br><span class="line">        <span class="keyword">return</span> tool</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DrawBar</span>(<span class="title class_ inherited__">Draw</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,x,y,ylabel,title,xname,yname</span>):</span><br><span class="line">        <span class="built_in">super</span>(DrawBar, self).__init__(x,y,ylabel,title,xname,yname)</span><br><span class="line">        tool=Bar()</span><br><span class="line">        self.d=self.draw(tool)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">render</span>(<span class="params">self,path</span>):</span><br><span class="line">        self.d.render(path)</span><br><span class="line"><span class="comment"># 折线图</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DrawLine</span>(<span class="title class_ inherited__">Draw</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,x,y,ylabel,title,xname,yname</span>):</span><br><span class="line">        <span class="built_in">super</span>(DrawLine, self).__init__(x,y,ylabel,title,xname,yname)</span><br><span class="line">        tool=Line()</span><br><span class="line">        self.d=self.draw(tool)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">render</span>(<span class="params">self,path</span>):</span><br><span class="line">        self.d.render(path)</span><br></pre></td></tr></table></figure><h3 id="2-数据分布情况">2 数据分布情况</h3><p>好了结束了前期准备后，我们就可以对数据进行探索啦！这里简单举个栗子，本项目主要学习的是方法啦。数据可以在这里下载：<a href="https://www.kaggle.com/competitions/forest-cover-type-prediction/code">这里</a></p><p>读取数据并进行初步的统计量探索</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">path=<span class="string">r&quot;YourWorkSpace&quot;</span></span><br><span class="line">train,test=pd.read_csv(path+<span class="string">r&quot;/train.csv&quot;</span>),pd.read_csv(path+<span class="string">r&quot;/test.csv&quot;</span>)</span><br><span class="line">ori=copy.deepcopy(train)</span><br><span class="line">label=train[<span class="string">&#x27;Cover_Type&#x27;</span>]</span><br></pre></td></tr></table></figure><p>查看数据表的话，用<code>df.head(n)</code>就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703001232959.png" alt="image-20230703001232959" style="zoom:50%;"><p>接着是统计量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.describe()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703001302406.png" alt="image-20230703001302406" style="zoom:50%;"><p>数据的维度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">train.shape</span><br><span class="line"></span><br><span class="line"><span class="comment"># (15120,56)</span></span><br></pre></td></tr></table></figure><p>这个数据从第十一维特征<code>Wilderness_Area1</code>开始就全是名义数据(定名数据)了，因而我们在分析其分布情况时，需要分开进行。</p><p>别忘了看看数据有没有缺失值!</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> train.columns:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">any</span>(train[i].isnull()):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> test.columns:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">any</span>(test[i].isnull()):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>上面这种方式可以将带有缺失值的列获取出来，根据列特征的不同数据格式选择不同的方法进行处理。然后接下来要对样本标签的分布进行查看，如果样本分布不均衡，很可能会影响模型的训练结果。一般来说，针对分布不均衡情况，可以进行的操作有：</p><ul><li>降采样</li><li>上采样</li><li>生成式模型(自动编码机、受限玻尔兹曼机、对抗生成网络、扩散模型等)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d=train.groupby(<span class="string">&quot;Cover_Type&quot;</span>)[<span class="string">&quot;Id&quot;</span>].count()</span><br><span class="line"><span class="comment"># 通过上面的探索，我们发现实际上`Id`这一列是没有用的，那么就删除啦</span></span><br><span class="line">train_x,label=train.iloc[:,<span class="number">1</span>:-<span class="number">1</span>],train.iloc[:,-<span class="number">1</span>]</span><br><span class="line">train.drop([<span class="string">&#x27;Id&#x27;</span>,<span class="string">&#x27;Cover_Type&#x27;</span>],axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">test.drop(<span class="string">&#x27;Id&#x27;</span>,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">DrawBar([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>)],[d.tolist()],[<span class="string">&quot;count&quot;</span>],<span class="string">&quot;标签均衡&quot;</span>,<span class="string">&quot;cover_type&quot;</span>,<span class="string">&quot;count&quot;</span>).d.render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703002051796.png" alt="image-20230703002051796" style="zoom:50%;"><p>这个数据集已经做过采样了，所以我们不需要在样本分布上做文章。</p><h4 id="2-1-数值数据分布情况">2.1 数值数据分布情况</h4><p>本数据集中，数值型数据刚好是前十列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">numeric_col=train.columns[:<span class="number">10</span>]</span><br><span class="line">categorical_col=train.columns[<span class="number">10</span>:]</span><br></pre></td></tr></table></figure><p>利用<code>seaborn</code>的<code>histplot(data,kde=True)</code>可以在绘制数据分箱直方图的同时，绘制密度分布图，帮助我们更好的分析数据的情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">16</span>,<span class="number">12</span>),dpi=<span class="number">200</span>)</span><br><span class="line"><span class="keyword">for</span> idx,col <span class="keyword">in</span> <span class="built_in">enumerate</span>(numeric_col):</span><br><span class="line">    plt.subplot(<span class="number">5</span>,<span class="number">2</span>,idx+<span class="number">1</span>)</span><br><span class="line">    sns.histplot(train[col],kde=<span class="literal">True</span>)</span><br><span class="line">    plt.xlabel(col)</span><br><span class="line">plt.tight_layout() <span class="comment"># 调整分布</span></span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703002544091.png" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703002559197.png" alt="image-20230703002559197" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703002613434.png" alt="image-20230703002613434" style="zoom:50%;"><p>可以发现每种数据的分布都不相同，理论上为了方便我们的计算工作，需要将其转化为正态分布。</p><p><strong>♨️ 数据相关性分析</strong></p><p>这部分主要探索数字数据之间的相关性，反映出数据分布之间的潜在联系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num=train[numeric_col]</span><br><span class="line">Standarder=StandardScaler()</span><br><span class="line">num_std=Standarder.fit_transform(num)</span><br><span class="line">num_std.mean(axis=<span class="number">0</span>),num_std.std(axis=<span class="number">0</span>)</span><br><span class="line">plt.figure(figsize=(<span class="number">14</span>,<span class="number">12</span>))</span><br><span class="line">sns.heatmap(num.corr(),annot=<span class="literal">True</span>,fmt=<span class="string">&quot;.2f&quot;</span>,cmap=<span class="string">&quot;coolwarm&quot;</span>)</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703002757865.png" alt="image-20230703002757865" style="zoom:50%;"><p>可以看到的是，坡度与山体阴影呈负相关关系，像元到水文特征的垂直距离和水平距离之间具有较强的相关性。</p><h4 id="2-2-名义数据分布情况">2.2 名义数据分布情况</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">DrawCategoricalData</span>(<span class="params">x</span>):</span><br><span class="line">    d=ori.groupby([x,<span class="string">&quot;Cover_Type&quot;</span>])[<span class="string">&quot;Id&quot;</span>].count()</span><br><span class="line">    b=Bar()</span><br><span class="line">    b.add_xaxis([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>)])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">        c=np.array([<span class="number">0</span>]*<span class="number">8</span>)</span><br><span class="line">        c[d[i].index]=d[i]</span><br><span class="line">        b.add_yaxis(</span><br><span class="line">            <span class="string">f&quot;Val <span class="subst">&#123;i&#125;</span>&quot;</span>,c[<span class="number">1</span>:].tolist(),stack=<span class="string">&quot;1&quot;</span></span><br><span class="line">        )</span><br><span class="line">    b.set_global_opts(title_opts=opts.TitleOpts(title=<span class="string">&quot;%s 数据分布情况&quot;</span>%x))</span><br><span class="line">    <span class="keyword">return</span> b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categorical_col=train.columns[<span class="number">10</span>:]</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">DrawCategoricalData(categorical_col[i]).render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703003036357.png" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i+=<span class="number">1</span></span><br><span class="line">DrawCategoricalData(categorical_col[i]).render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703003104247.png" style="zoom:50%;"><p>通过柱状堆叠图，我们可以发现，Wilderness_Area这个字段数据也是十分均衡，而且有些字段取1时，对结果取值有较大的影响，该数据的信息熵较大。</p><h4 id="3-数据清洗">3 数据清洗</h4><p>此阶段主要针对三类情况：</p><ul><li>缺失值</li><li>噪声</li><li>数据不一致问题</li></ul><p>我们在第二阶段已经探查过了，该数据不存在缺失值，数据不一致问题实际上也不存在，那么剩下的就是噪声数据的处理</p><p>下面这段代码是调用上面写的绘图函数的，用来绘制箱线图，可以直接跳过，这边做个简单展示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="number">0</span></span><br><span class="line">DrawBox([numeric_col[i]],[train[numeric_col[i]]]).render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703003233783.png" alt="image-20230703003233783" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DrawBox(numeric_col[:<span class="number">3</span>],num_std[:<span class="number">3</span>]).render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703003300042.png" style="zoom:50%;"><p>我们可以直接用<code>pandas</code>的绘图接口：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">16</span>,<span class="number">9</span>),dpi=<span class="number">300</span>)</span><br><span class="line">pd.DataFrame(num_std).boxplot()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703003358841.png" style="zoom:50%;"><p>可以看到，有很多类都有一些异常值。这些异常值是通过百分位数极差计算的：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>Q</mi><mi>R</mi><mo>=</mo><msub><mi>Q</mi><mn>3</mn></msub><mo>−</mo><msub><mi>Q</mi><mn>1</mn></msub><mspace linebreak="newline"></mspace><mi>I</mi><mi>Q</mi><msub><mi>R</mi><mi>b</mi></msub><mo>=</mo><msub><mi>Q</mi><mn>1</mn></msub><mo>−</mo><mn>1.5</mn><mo>∗</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mspace linebreak="newline"></mspace><mi>I</mi><mi>Q</mi><msub><mi>R</mi><mi>u</mi></msub><mo>=</mo><mi>Q</mi><mn>3</mn><mo>+</mo><mn>1.5</mn><mo>∗</mo><mi>I</mi><mi>Q</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">IQR=Q_3-Q_1\\IQR_b=Q_1-1.5*IQR\\IQR_u=Q3+1.5*IQR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span></span></span></span></span></p><p>然后我们现在就想把这些异常点去掉，有一个比较简单的方式，就是利用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>α</mi></mrow><annotation encoding="application/x-tex">3\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>法则</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Outlier</span>(<span class="params">x</span>):</span><br><span class="line">    blidx=(x.mean()-<span class="number">3</span>*x.std()&gt;x)|(x.mean()+<span class="number">3</span>*x.std()&lt;x)</span><br><span class="line">    idx=np.arange(x.shape[<span class="number">0</span>])[blidx]</span><br><span class="line">    outlier=x.iloc[idx]</span><br><span class="line">    <span class="keyword">return</span> outlier</span><br><span class="line">c=num.apply(Outlier,axis=<span class="number">0</span>)</span><br><span class="line">c.count()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703003706613.png" alt="image-20230703003706613" style="zoom:50%;"><p>可以看到，总共有<code>1130</code>个数据属于异常值。</p><p>当然，是否删除离群点还需要考虑实际情况，譬如这个离群点是由什么原因造成的？是否是采集过程中造成的，还是数据本身的特性导致的？</p><p>如果是后者，其实不建议进行处理。适当的保留噪声会提高模型的泛化能力</p><p>至此，我们已经简单完成了EDA阶段的工作。</p><p>下一个阶段是特征工程(Feature Engineering)</p><hr><h2 id="三-特征工程">三 特征工程</h2><p>在机器学习中，特征工程阶段的好坏往往决定了最终结果的好坏，而深度学习实际上没有这种烦恼，我们将尝试传统机器学习树模型和深度学习模型，分析并比较不同模型的结果，当然，这里会选择一份做了特征工程的数据和一份不做特征工程的数据进行比对，但由于树模型和深度学习模型都带有不确定性，最终的评价不一定准确，考虑到服务器性能，也不做大数据统计了，仅仅做一些简单的工作</p><p>特征工程的主要任务包括数据预处理、特征变换、特征提取和特征选择，在之前的工作中，我们已经做过部分预处理了，包括：</p><ul><li>剔除异常值</li><li>删除不需要的列</li><li>分析数据的分布</li></ul><h3 id="1-特征变换">1 特征变换</h3><p>可以通过幂律变换<code>sklearn.preprogressing.power_transform</code>对数据进行转换，当然要求数据不能为非正数。本数据存在负数，因而我们的考量是：</p><ul><li>先做归一化去除负数影响</li><li>添加极小项避免零值影响</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据转为正态分布</span></span><br><span class="line">t_x_d,t_y_d=train_drop_outlier.iloc[:,<span class="number">1</span>:-<span class="number">1</span>],train_drop_outlier.iloc[:,-<span class="number">1</span>]</span><br><span class="line">col_td=t_x_d[numeric_col]</span><br><span class="line">mmS=MinMaxScaler()</span><br><span class="line">col_td=mmS.fit_transform(col_td)</span><br><span class="line">col_td+=<span class="number">1e-5</span></span><br><span class="line">c_d_p=power_transform(col_td,method=<span class="string">&#x27;box-cox&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分布</span></span><br><span class="line">t_x_d[numeric_col]=c_d_p</span><br><span class="line">t_x_d.head()</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">16</span>,<span class="number">12</span>),dpi=<span class="number">200</span>)</span><br><span class="line"><span class="keyword">for</span> idx,col <span class="keyword">in</span> <span class="built_in">enumerate</span>(numeric_col):</span><br><span class="line">    plt.subplot(<span class="number">5</span>,<span class="number">2</span>,idx+<span class="number">1</span>)</span><br><span class="line">    sns.histplot(t_x_d[col],kde=<span class="literal">True</span>)</span><br><span class="line">    plt.xlabel(col)</span><br><span class="line">plt.tight_layout()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703004217364.png" alt="image-20230703004217364" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703004232612.png" alt="image-20230703004232612" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703004242720.png" alt="image-20230703004242720" style="zoom:50%;"><p>可以看到，此时之前的长尾分布基本上都被转化为近似正态了。</p><p>当然，这组数据做不做正态影响不大，起码对于信息熵没有增益，那么我们就不做了，省的数据区间出错，那么现在就轮到<code>特征提取</code>或者说<code>特征构造</code>阶段了</p><h3 id="2-特征提取">2 特征提取</h3><p>主要构造的特征有：</p><ul><li>高程坡向比</li><li>高程坡度比</li><li>坡度坡向比</li><li>水文特征切比雪夫距离</li><li>水文特征闵可夫斯基距离(p=1,p=2)</li><li>高程水文欧氏距离比</li><li>高程公路欧氏距离比</li><li>坡度公路比</li><li>水文公路比</li><li>山体阴影几何平均值</li><li>山体阴影平均值</li><li>山体阴影标准差</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">x,y,p=<span class="number">2</span></span>):</span><br><span class="line">    <span class="keyword">return</span> (x**p+y**p)**(<span class="number">1</span>/p)</span><br><span class="line">x_t_o,l_o=train_drop_outlier.iloc[:,<span class="number">1</span>:-<span class="number">1</span>],train_drop_outlier.iloc[:,-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">x_t_o[<span class="string">&quot;v1&quot;</span>]=x_t_o[<span class="string">&quot;Elevation&quot;</span>]/x_t_o[<span class="string">&#x27;Aspect&#x27;</span>]</span><br><span class="line">x_t_o[<span class="string">&quot;v2&quot;</span>]=x_t_o[<span class="string">&quot;Elevation&quot;</span>]/x_t_o[<span class="string">&#x27;Slope&#x27;</span>]</span><br><span class="line">x_t_o[<span class="string">&quot;v3&quot;</span>]=x_t_o[<span class="string">&quot;Aspect&quot;</span>]/x_t_o[<span class="string">&#x27;Slope&#x27;</span>]</span><br><span class="line">x_t_o[<span class="string">&quot;v4&quot;</span>]=distance(x_t_o[<span class="string">&quot;Horizontal_Distance_To_Hydrology&quot;</span>],x_t_o[<span class="string">&#x27;Vertical_Distance_To_Hydrology&#x27;</span>])</span><br><span class="line">x_t_o[<span class="string">&#x27;v5&#x27;</span>]=distance(x_t_o[<span class="string">&quot;Horizontal_Distance_To_Hydrology&quot;</span>],x_t_o[<span class="string">&#x27;Vertical_Distance_To_Hydrology&#x27;</span>],<span class="number">1</span>)</span><br><span class="line">x_t_o[<span class="string">&#x27;v6&#x27;</span>]=x_t_o[<span class="string">&#x27;Elevation&#x27;</span>]/x_t_o[<span class="string">&#x27;v4&#x27;</span>]</span><br><span class="line">x_t_o[<span class="string">&#x27;v7&#x27;</span>]=x_t_o[<span class="string">&#x27;Elevation&#x27;</span>]/x_t_o[<span class="string">&#x27;Horizontal_Distance_To_Roadways&#x27;</span>]</span><br><span class="line">x_t_o[<span class="string">&#x27;v8&#x27;</span>]=(x_t_o[<span class="string">&#x27;Hillshade_9am&#x27;</span>]+x_t_o[<span class="string">&#x27;Hillshade_Noon&#x27;</span>]+x_t_o[<span class="string">&#x27;Hillshade_3pm&#x27;</span>]).mean()</span><br><span class="line">x_t_o[<span class="string">&#x27;v9&#x27;</span>]=(x_t_o[<span class="string">&#x27;Hillshade_9am&#x27;</span>]+x_t_o[<span class="string">&#x27;Hillshade_Noon&#x27;</span>]+x_t_o[<span class="string">&#x27;Hillshade_3pm&#x27;</span>]).std()</span><br><span class="line">x_t_o[<span class="string">&#x27;v10&#x27;</span>]=(x_t_o[<span class="string">&#x27;Hillshade_9am&#x27;</span>]**<span class="number">2</span>+x_t_o[<span class="string">&#x27;Hillshade_Noon&#x27;</span>]**<span class="number">2</span>+x_t_o[<span class="string">&#x27;Hillshade_3pm&#x27;</span>]**<span class="number">2</span>)**<span class="number">0.5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OK现在我们就有一些奇奇怪怪的特征了。</p><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703031337694.png" alt="image-20230703031337694" style="zoom:50%;"><p>啊实际上有些特征不能用，因为发生了除零错误。</p><h3 id="3-特征选择">3 特征选择</h3><p>特征选择的方式有很多，我们现在介绍一些降维的工具：</p><ul><li>通过流形学习的非线性降维方式<code>T-SNE</code>对数据进行降维，避免数据之间冗余度过高以及可能带来的维灾害(虽然特征工程就没构建几个特征)</li><li>PCA</li><li>LDA</li><li>LLE</li></ul><p>这边的话，由于特征较少，时间有限，就没有做降维了，简单给个栗子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line">pca=PCA(n_components=<span class="number">10</span>)</span><br><span class="line">x=standarder.fit_transform(x_t_o)</span><br><span class="line">x=pca.fit_transform(x)</span><br></pre></td></tr></table></figure><hr><h2 id="四-模型训练">四 模型训练</h2><h3 id="1-准备工作">1 准备工作</h3><h4 id="1-1-数据拆分">1.1 数据拆分</h4><p>拆分喽</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x_train,x_val,y_train,y_val=train_test_split(train,label,test_size=<span class="number">0.3</span>)</span><br><span class="line">x_train.shape</span><br><span class="line"></span><br><span class="line"><span class="comment"># (10584, 54)</span></span><br></pre></td></tr></table></figure><h4 id="1-2-标准化去除量纲影响">1.2 标准化去除量纲影响</h4><p>实际上我们之前做过一次，但是不碍事，再做一次体验一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x_train_scale=Standarder.fit_transform(x_train)</span><br><span class="line">x_val_scale=Standarder.fit_transform(x_val)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">accuracy</span>(<span class="params">y_pre,y</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(y_pre==y)/<span class="built_in">len</span>(y) <span class="comment"># 这东西用来计算预测准确度的</span></span><br></pre></td></tr></table></figure><h3 id="2-机器学习模型">2 机器学习模型</h3><h4 id="2-1-树模型">2.1 树模型</h4><p><strong>随机森林🌳</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rf=RandomForestClassifier(max_features=<span class="string">&#x27;auto&#x27;</span>,oob_score=<span class="literal">True</span>,random_state=<span class="number">2023</span>,n_jobs=-<span class="number">1</span>)</span><br><span class="line">rf.fit(x_train_scale,y_train)</span><br><span class="line">rf.score(x_val_scale,y_val)</span><br><span class="line"><span class="comment"># 0.857583774250441</span></span><br></pre></td></tr></table></figure><p><strong>XGboost🌲</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 算法参数</span></span><br><span class="line">params = &#123;</span><br><span class="line">    <span class="comment"># 通用参数</span></span><br><span class="line">    <span class="string">&#x27;booster&#x27;</span>: <span class="string">&#x27;gbtree&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;nthread&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="comment"># &#x27;num_feature&#x27;: 5,  # Boosting过程中用到的特征维数，设置为特征个数，xgboost会自动设置，无需人为设置。</span></span><br><span class="line">    <span class="string">&#x27;seed&#x27;</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="comment"># 任务参数</span></span><br><span class="line">    <span class="string">&#x27;objective&#x27;</span>: <span class="string">&#x27;multi:softmax&#x27;</span>,  <span class="comment"># 多分类问题</span></span><br><span class="line">    <span class="string">&#x27;num_class&#x27;</span>: <span class="number">7</span>,  <span class="comment">#类别总数，与multi softmax并用 6</span></span><br><span class="line">    <span class="comment"># 提升参数</span></span><br><span class="line">    <span class="string">&#x27;gamma&#x27;</span>: <span class="number">0.1</span>,</span><br><span class="line">    <span class="string">&#x27;max_depth&#x27;</span>: <span class="number">11</span>,</span><br><span class="line">    <span class="string">&#x27;lambda&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&#x27;subsample&#x27;</span>: <span class="number">0.7</span>,</span><br><span class="line">    <span class="string">&#x27;colsample_bytree&#x27;</span>: <span class="number">0.7</span>,</span><br><span class="line">    <span class="string">&#x27;min_child_weight&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">&#x27;eta&#x27;</span>: <span class="number">0.1</span>,</span><br><span class="line">    <span class="comment"># &#x27;eval_metric&#x27;: &#x27;auc&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 注意多分类xgboost需要修改label映射</span></span><br><span class="line">y_train_xg=y_train-<span class="number">1</span></span><br><span class="line">y_val_xg=y_val-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">dtrain=xgb.DMatrix(data=x_train_scale,label=y_train_xg)</span><br><span class="line">dtest=xgb.DMatrix(data=x_val_scale,label=y_val_xg)</span><br><span class="line">watchlist=[(dtrain,<span class="string">&quot;train&quot;</span>),(dtest,<span class="string">&quot;valid_data&quot;</span>)]</span><br><span class="line">model=xgb.train(params,dtrain,num_boost_round=<span class="number">2023</span>,evals=watchlist,early_stopping_rounds=<span class="number">200</span>,verbose_eval=<span class="number">500</span>)</span><br><span class="line">accuracy(model.predict(dtest),y_val_xg)</span><br><span class="line"></span><br><span class="line"><span class="comment">#0.8507495590828924 </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xgb.plot_importance(model,height=<span class="number">0.8</span>,title=<span class="string">&#x27;Influence Ranking&#x27;</span>, ylabel=<span class="string">&#x27;Feature&#x27;</span>,max_num_features=<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>查看特征影响得分：</p><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703005437156.png" alt="image-20230703005437156" style="zoom:50%;"><p><strong>LightGBM🌴</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">params=&#123;<span class="string">&#x27;num_leaves&#x27;</span>:<span class="number">54</span>,<span class="string">&#x27;objective&#x27;</span>: <span class="string">&#x27;multi:softmax&#x27;</span>,<span class="string">&#x27;max_depth&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;learning_rate&#x27;</span>:<span class="number">0.01</span>,<span class="string">&#x27;boosting&#x27;</span>:<span class="string">&#x27;gbdt&#x27;</span>&#125;</span><br><span class="line">model=lgb.LGBMClassifier(**params,n_estimators=<span class="number">2000</span>,nthread=<span class="number">4</span>,n_jobs=-<span class="number">1</span>)</span><br><span class="line">model.fit(x_train_scale,y_train,verbose=<span class="number">200</span>)</span><br><span class="line">accuracy(model.predict(x_val_scale,num_iteration=model.best_iteration_),y_val)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0.8630952380952381</span></span><br></pre></td></tr></table></figure><h4 id="2-2-支持向量机">2.2 支持向量机</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm</span><br><span class="line">param_grid=&#123;</span><br><span class="line">    <span class="string">&quot;gamma&quot;</span>:[<span class="number">0.05</span>*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">13</span>)],</span><br><span class="line">    <span class="string">&quot;C&quot;</span>:[<span class="number">0.1</span>*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>)]</span><br><span class="line">&#125;</span><br><span class="line">cl=svm.SVC(kernel=<span class="string">&#x27;poly&#x27;</span>,gamma=<span class="number">0.1</span>,decision_function_shape=<span class="string">&#x27;ovo&#x27;</span>,C=<span class="number">1.0</span>)</span><br><span class="line">search=GridSearchCV(cl,param_grid=param_grid,cv=<span class="number">5</span>,n_jobs=-<span class="number">1</span>, scoring=<span class="string">&quot;accuracy&quot;</span>)</span><br><span class="line">search.fit(x_train_scale,y_train)</span><br><span class="line">cl=search.best_estimator_</span><br><span class="line">z=cl.predict(x_val_scale)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0.8167989417989417</span></span><br></pre></td></tr></table></figure><h4 id="2-3-优化">2.3 优化</h4><p>讲到调优，机器学习的两大工作一个是特征工程，一个就是调参了，努力成为一名优秀的调参侠吧(笑)</p><p>我们通过<code>GridSearchCV</code>模块进行调参，以决策树和XGboost为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">param_grid=&#123;</span><br><span class="line">    <span class="string">&#x27;n_estimators&#x27;</span>:[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>,<span class="number">20</span>)],</span><br><span class="line">    <span class="string">&#x27;max_depth&#x27;</span>:[i*<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)],</span><br><span class="line">    <span class="string">&#x27;criterion&#x27;</span>:[<span class="string">&#x27;entropy&#x27;</span>,<span class="string">&#x27;gini&#x27;</span>],</span><br><span class="line">&#125;</span><br><span class="line">rf=RandomForestClassifier(max_features=<span class="string">&#x27;auto&#x27;</span>,oob_score=<span class="literal">True</span>,random_state=<span class="number">2023</span>,n_jobs=-<span class="number">1</span>)</span><br><span class="line">clf=GridSearchCV(estimator=rf,param_grid=param_grid,scoring=<span class="string">&#x27;accuracy&#x27;</span>,cv=<span class="number">5</span>,n_jobs=-<span class="number">1</span>)</span><br><span class="line">clf.fit(x_train_scale,y_train)</span><br><span class="line">lr=clf.best_estimator_</span><br><span class="line">lr.fit(x_train_scale,y_train)</span><br><span class="line">m1=lr.predict(x_val_scale)</span><br><span class="line">accuracy(m1,y_val)</span><br></pre></td></tr></table></figure><p>通过格网搜索与交叉验证，寻找模型的最优参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">pipe = Pipeline(</span><br><span class="line">        steps=[ (<span class="string">&quot;classifier&quot;</span>, XGBClassifier())]</span><br><span class="line">    )</span><br><span class="line">param_grid = &#123;</span><br><span class="line">        <span class="string">&quot;classifier__n_estimators&quot;</span>: [<span class="number">50</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">300</span>], <span class="comment"># 多少棵树</span></span><br><span class="line">        <span class="string">&quot;classifier__eta&quot;</span>: [<span class="number">0.05</span>, <span class="number">0.1</span>, <span class="number">0</span>,<span class="number">2</span>, <span class="number">0.3</span>], <span class="comment"># 学习率</span></span><br><span class="line">        <span class="string">&quot;classifier__max_depth&quot;</span>: [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>], <span class="comment"># 树的最大深度</span></span><br><span class="line">        <span class="string">&quot;classifier__colsample_bytree&quot;</span>: [<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1</span>], <span class="comment"># 选择多少列构建一个树</span></span><br><span class="line">        <span class="string">&quot;classifier__min_child_weight&quot;</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] <span class="comment"># 叶子节点最小样本数目</span></span><br><span class="line">    &#125;</span><br><span class="line">search = GridSearchCV(pipe, param_grid, n_jobs=-<span class="number">1</span>, scoring=<span class="string">&quot;roc_auc&quot;</span>, cv=<span class="number">5</span>)</span><br><span class="line">search.fit(x_train_scale,y_train_xg)</span><br><span class="line">search.best_params</span><br><span class="line">search.score(x_val_scale,y_val_xg)</span><br></pre></td></tr></table></figure><p>这个过程十分吃服务器性能，而且可能费时不太好，需要一定的心理准备。</p><p>最终的结果如下(具有一定的优化空间，我这边基本上没怎么做调参)</p><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703020017641.png" alt="image-20230703020017641" style="zoom:50%;"><h3 id="3-深度学习模型">3 深度学习模型</h3><h4 id="3-1-构建数据集">3.1 构建数据集</h4><p>首先我们要有一个数据集，或者一个可迭代的容器存放我们的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDataSet</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,x,label</span>):</span><br><span class="line">        self.x,self.label=x,label</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        <span class="keyword">return</span> self.x[idx],self.label[idx]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.x)</span><br></pre></td></tr></table></figure><p>然后是将数据转化为<code>tensor</code>格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x_t_tensor=torch.from_numpy(x_train_scale).<span class="built_in">float</span>()</span><br><span class="line">y_t_tensor=torch.LongTensor(y_train_xg.to_numpy()).reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y_t_tensor=torch.zeros(y_t_tensor.shape[<span class="number">0</span>],<span class="number">7</span>).scatter_(<span class="number">1</span>, y_t_tensor, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">x_v_tensor=torch.from_numpy(x_val_scale).<span class="built_in">float</span>()</span><br><span class="line">y_v_tensor=torch.torch.LongTensor(y_val_xg.to_numpy()).reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y_v_tensor=torch.zeros(y_v_tensor.shape[<span class="number">0</span>],<span class="number">7</span>).scatter_(<span class="number">1</span>, y_v_tensor, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>再者是将这些放到数据容器中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">train_DataLoader=DataLoader(</span><br><span class="line">    dataset=MyDataSet(x_t_tensor,y_t_tensor),</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">    shuffle=<span class="literal">True</span>,</span><br><span class="line">    drop_last=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_DataLoader=DataLoader(</span><br><span class="line">    dataset=MyDataSet(x_v_tensor,y_v_tensor),</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">    shuffle=<span class="literal">True</span>,</span><br><span class="line">    drop_last=<span class="literal">True</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="3-2-模型选择">3.2 模型选择</h4><p>目前，我们已经获得了七个简单的网络。值得注意的是，在简单的一维数据中，多层感知机理论上可以拟合任意的函数，但如果加大层数，用一些高维数据的tricks，反而不太能得到好的结果。这是因为复杂的网络其容量也会增大，想要在函数域中找到最优函数变得更加复杂，可能陷入局部最优解</p><p>再有，一维卷积神经网络的性能实际上在小样本上会略低于全连接层，也不太适合做Attention</p><p>网络的性能除却跟网络结构本身有关系外，主要还是与数据挂钩。吴恩达在CS229中说过，模型只是去逼近数据潜在的上限，目前，我们拿出来做深度学习的数据仅仅做过几个简单的处理，实际上后续可以考虑将做过特征工程的数据进行训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_features=<span class="number">54</span>,n_hidden1=<span class="number">128</span>,n_hidden2=<span class="number">256</span>,out_features=<span class="number">7</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.flatten=nn.Flatten()</span><br><span class="line">        self.hidden1=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden1,<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm1d(n_hidden1),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden2=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden1,n_hidden2),</span><br><span class="line">            nn.BatchNorm1d(n_hidden2),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.out=nn.Sequential(nn.Linear(n_hidden2,out_features))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.flatten(x)</span><br><span class="line">        x=self.hidden2(self.hidden1(x))</span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.out(x),dim=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasicConv1d</span>(nn.Module):</span><br><span class="line">    <span class="comment"># 一个Conv+Bn+ReLU</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_channel,out_channel,kernel,stride,padding=<span class="number">0</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(BasicConv1d, self).__init__()</span><br><span class="line">        self.cbr=nn.Sequential(</span><br><span class="line">            nn.Conv1d(in_channels=in_channel,out_channels=out_channel,kernel_size=kernel,stride=stride,</span><br><span class="line">                      padding=padding),</span><br><span class="line">            nn.BatchNorm1d(out_channel,eps=<span class="number">0.001</span>,momentum=<span class="number">0.1</span>,affine=<span class="literal">True</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">False</span>)</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.cbr(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个简单的Inception模块</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mixed_5b</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Mixed_5b, self).__init__()</span><br><span class="line">        self.branch0=BasicConv1d(<span class="number">54</span>,<span class="number">96</span>,kernel=<span class="number">1</span>,stride=<span class="number">1</span>)</span><br><span class="line">        self.branch1=nn.Sequential(</span><br><span class="line">            BasicConv1d(<span class="number">54</span>,<span class="number">48</span>,kernel=<span class="number">1</span>,stride=<span class="number">1</span>),</span><br><span class="line">            BasicConv1d(<span class="number">48</span>,<span class="number">64</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.branch2=nn.Sequential(</span><br><span class="line">            BasicConv1d(<span class="number">54</span>,<span class="number">64</span>,kernel=<span class="number">1</span>,stride=<span class="number">1</span>),</span><br><span class="line">            BasicConv1d(<span class="number">64</span>,<span class="number">96</span>,kernel=<span class="number">3</span>,stride=<span class="number">1</span>,padding=<span class="number">1</span>),</span><br><span class="line">            BasicConv1d(<span class="number">96</span>,<span class="number">96</span>,kernel=<span class="number">3</span>,stride=<span class="number">1</span>,padding=<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line">        self.branch3=nn.Sequential(</span><br><span class="line">            BasicConv1d(<span class="number">54</span>,<span class="number">64</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.linear=nn.Sequential(</span><br><span class="line">            nn.BatchNorm1d(<span class="number">320</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">320</span>,<span class="number">256</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">256</span>,<span class="number">7</span>),</span><br><span class="line">            nn.Softmax(dim=<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>),x.size(<span class="number">1</span>),<span class="number">1</span>)</span><br><span class="line">        x0=self.branch0(x)</span><br><span class="line">        x1=self.branch1(x)</span><br><span class="line">        x2=self.branch2(x)</span><br><span class="line">        x3=self.branch3(x)</span><br><span class="line">        out=torch.cat((x0,x1,x2,x3),<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> self.linear(out)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Block35</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,scale=<span class="number">1.0</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Block35,self).__init__()</span><br><span class="line">        self.scale=scale</span><br><span class="line">        self.branch0=BasicConv1d(<span class="number">54</span>,<span class="number">32</span>,kernel=<span class="number">1</span>,stride=<span class="number">1</span>)</span><br><span class="line">        self.branch1=nn.Sequential(</span><br><span class="line">            BasicConv1d(<span class="number">54</span>,<span class="number">32</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">            BasicConv1d(<span class="number">32</span>,<span class="number">32</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line">        self.branch2=nn.Sequential(</span><br><span class="line">            BasicConv1d(<span class="number">54</span>,<span class="number">32</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">            BasicConv1d(<span class="number">32</span>,<span class="number">48</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">            BasicConv1d(<span class="number">48</span>,<span class="number">64</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv1d=nn.Conv1d(<span class="number">128</span>,<span class="number">54</span>,kernel_size=<span class="number">1</span>,stride=<span class="number">1</span>)</span><br><span class="line">        self.relu=nn.ReLU(inplace=<span class="literal">False</span>)</span><br><span class="line">        self.Linear=nn.Sequential(</span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Linear(<span class="number">54</span>,<span class="number">256</span>,<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">256</span>,<span class="number">7</span>,<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>),x.size(<span class="number">1</span>),<span class="number">1</span>)</span><br><span class="line">        x0,x1,x2=self.branch0(x),self.branch1(x),self.branch2(x)</span><br><span class="line">        out=torch.cat((x0,x1,x2),<span class="number">1</span>)</span><br><span class="line">        out=self.conv1d(out)</span><br><span class="line">        out=out*self.scale+x</span><br><span class="line">        out=self.relu(out)</span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.Linear(out),dim=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net2</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net2, self).__init__()</span><br><span class="line">        self.conv1=nn.Conv1d(<span class="number">54</span>,<span class="number">128</span>,<span class="number">1</span>)</span><br><span class="line">        self.conv2=nn.Conv1d(<span class="number">54</span>,<span class="number">128</span>,<span class="number">1</span>)</span><br><span class="line">        self.conv3=nn.Conv1d(<span class="number">54</span>,<span class="number">128</span>,<span class="number">1</span>)</span><br><span class="line">        self.re=nn.ReLU()</span><br><span class="line">        self.bn1=nn.BatchNorm1d(<span class="number">128</span>)</span><br><span class="line">        </span><br><span class="line">        self.Conv=nn.Sequential(</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Conv1d(<span class="number">128</span>, <span class="number">164</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">164</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Conv1d(<span class="number">164</span>, <span class="number">128</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span>),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.fl=nn.Flatten()</span><br><span class="line">        self.Linear=nn.Sequential(</span><br><span class="line"></span><br><span class="line">            nn.Linear(<span class="number">128</span>, <span class="number">256</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">256</span>),</span><br><span class="line">            nn.LeakyReLU(),</span><br><span class="line">            nn.Linear(<span class="number">256</span>, <span class="number">128</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, <span class="number">7</span>),</span><br><span class="line">            nn.Softmax(dim=<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>),x.size(<span class="number">1</span>),<span class="number">1</span>)</span><br><span class="line">        x1=self.conv1(x)</span><br><span class="line">        x3=self.conv3(x)</span><br><span class="line">        x2=self.conv2(x)</span><br><span class="line">        x=self.re(self.bn1(x1+x2+x3))</span><br><span class="line">        x=self.Conv(x)</span><br><span class="line">        x=self.fl(x)</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> self.Linear(x)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net3</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_features=<span class="number">54</span>,n_hidden1=<span class="number">128</span>,n_hidden2=<span class="number">256</span>,n_hidden3=<span class="number">512</span>,out_features=<span class="number">7</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Net3, self).__init__()</span><br><span class="line">        self.flatten=nn.Flatten()</span><br><span class="line">        self.hidden1=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden1,<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm1d(n_hidden1),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden2=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden1,n_hidden2),</span><br><span class="line">            nn.BatchNorm1d(n_hidden2),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden3=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden2,n_hidden3),</span><br><span class="line">            nn.BatchNorm1d(n_hidden3),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.out=nn.Sequential(nn.Linear(n_hidden3,out_features))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.flatten(x)</span><br><span class="line">        x=self.hidden2(self.hidden1(x))</span><br><span class="line">        x=self.hidden3(x)</span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.out(x),dim=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net4</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_features=<span class="number">54</span>,n_hidden1=<span class="number">128</span>,n_hidden2=<span class="number">256</span>,n_hidden3=<span class="number">512</span>,out_features=<span class="number">7</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Net4, self).__init__()</span><br><span class="line">        self.flatten=nn.Flatten()</span><br><span class="line">        self.hidden1=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden1,<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm1d(n_hidden1),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden2=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden2),</span><br><span class="line">            nn.BatchNorm1d(n_hidden2),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden3=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden1+n_hidden2,n_hidden3),</span><br><span class="line">            nn.BatchNorm1d(n_hidden3),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.out=nn.Sequential(nn.Linear(n_hidden3,out_features))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.flatten(x)</span><br><span class="line">        x1=self.hidden1(x)</span><br><span class="line">        x2=self.hidden2(x)</span><br><span class="line">        x=self.hidden3(torch.concat([x1,x2],dim=<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.out(x),dim=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net5</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_features=<span class="number">54</span>,n_hidden1=<span class="number">54</span>,n_hidden2=<span class="number">256</span>,n_hidden3=<span class="number">512</span>,out_features=<span class="number">7</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Net5, self).__init__()</span><br><span class="line">        self.flatten=nn.Flatten()</span><br><span class="line">        self.hidden1=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden1,<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm1d(n_hidden1),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden2=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden2),</span><br><span class="line">            nn.BatchNorm1d(n_hidden2),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden3=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden2,n_hidden2),</span><br><span class="line">            nn.BatchNorm1d(n_hidden2),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden4=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden2,n_hidden3),</span><br><span class="line">            nn.BatchNorm1d(n_hidden3),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line">        self.out=nn.Sequential(nn.Linear(n_hidden3,out_features))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.flatten(x)</span><br><span class="line">        x1=self.hidden1(x)</span><br><span class="line">        x2=self.hidden2(x+x1)</span><br><span class="line">        x3=self.hidden3(x2)</span><br><span class="line">        o=self.hidden4(x3+x2)</span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.out(o),dim=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net6</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_features=<span class="number">54</span>,n_hidden1=<span class="number">54</span>,n_hidden2=<span class="number">512</span>,n_hidden3=<span class="number">1024</span>,out_features=<span class="number">7</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Net6, self).__init__()</span><br><span class="line">        self.flatten=nn.Flatten()</span><br><span class="line">        self.hidden1=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden1,<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm1d(n_hidden1),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden2=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden1),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.BatchNorm1d(n_hidden1),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden3=nn.Sequential(</span><br><span class="line">            nn.Linear(in_features,n_hidden2),</span><br><span class="line">            nn.BatchNorm1d(n_hidden2),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.hidden5=nn.Sequential(</span><br><span class="line">            nn.Linear(n_hidden2,n_hidden3),</span><br><span class="line">            nn.BatchNorm1d(n_hidden3),</span><br><span class="line">            nn.ReLU()</span><br><span class="line">        )</span><br><span class="line">        self.out=nn.Sequential(nn.Linear(n_hidden3,out_features))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.flatten(x)</span><br><span class="line">        x1=self.hidden1(x)</span><br><span class="line">        x2=self.hidden2(x)</span><br><span class="line">        x3=self.hidden3(x2+x1+x)</span><br><span class="line"></span><br><span class="line">        o=self.hidden5(x3)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.out(o),dim=<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-3-训练阶段">3.3 训练阶段</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">Net_train_loss=[]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">model,seed,epoch=<span class="number">200</span></span>):</span><br><span class="line">    <span class="keyword">global</span> Net_train_loss</span><br><span class="line">    <span class="comment"># 这边统一用交叉熵和自适应距估计优化器</span></span><br><span class="line">    path=<span class="string">r&quot;YourPath\%s.pth&quot;</span>%seed</span><br><span class="line">    criterion=nn.CrossEntropyLoss()</span><br><span class="line">    optimizer=torch.optim.Adam(model.parameters(),lr=<span class="number">1e-4</span>,betas=(<span class="number">0.9</span>,<span class="number">0.99</span>),</span><br><span class="line">                               eps=<span class="number">1e-08</span>,weight_decay=<span class="number">0</span>)</span><br><span class="line">    device=<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">    model.to(device)</span><br><span class="line">    criterion.to(device)</span><br><span class="line">    Loss=[]</span><br><span class="line">    Acc=[]</span><br><span class="line">    ELoss=[]</span><br><span class="line">    EAcc=[]</span><br><span class="line">    BEST_ACC=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">        train_loss = <span class="number">0</span></span><br><span class="line">        train_acc=<span class="number">0</span></span><br><span class="line">        model.train()</span><br><span class="line">        <span class="keyword">with</span> alive_progress.alive_bar(<span class="built_in">len</span>(train_DataLoader),force_tty=<span class="literal">True</span>) <span class="keyword">as</span> bar:</span><br><span class="line">            <span class="keyword">for</span> idx,(x,y) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_DataLoader):</span><br><span class="line">                x,y=x.to(device),y.to(device)</span><br><span class="line">                y_pre=model(x)</span><br><span class="line"></span><br><span class="line">                optimizer.zero_grad()</span><br><span class="line">                loss=criterion(y,y_pre)</span><br><span class="line">                loss.backward()</span><br><span class="line">                optimizer.step()</span><br><span class="line"></span><br><span class="line">                train_loss+=loss.item()</span><br><span class="line">                _,pre=y_pre.<span class="built_in">max</span>(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">                num_correct=(pre.to(<span class="string">&quot;cpu&quot;</span>)==np.argmax(y.to(<span class="string">&quot;cpu&quot;</span>),axis=<span class="number">1</span>)).<span class="built_in">sum</span>().item()</span><br><span class="line">                acc=num_correct/x.shape[<span class="number">0</span>]</span><br><span class="line">                train_acc+=acc</span><br><span class="line">                bar()</span><br><span class="line">        <span class="keyword">if</span> (k:=train_acc/<span class="built_in">len</span>(train_DataLoader))&gt;BEST_ACC:</span><br><span class="line">            BEST_ACC=k</span><br><span class="line">            </span><br><span class="line">            state = &#123;</span><br><span class="line">                <span class="string">&#x27;epoch&#x27;</span>: e,</span><br><span class="line">                <span class="string">&#x27;best_acc&#x27;</span>: k,</span><br><span class="line">                <span class="string">&#x27;model_state_dict&#x27;</span>: model.state_dict(),</span><br><span class="line">                <span class="string">&#x27;optimizer_state_dict&#x27;</span>: optimizer.state_dict(),</span><br><span class="line">            &#125;</span><br><span class="line">            torch.save(state, path)</span><br><span class="line">        Loss.append(train_loss/<span class="built_in">len</span>(train_DataLoader))</span><br><span class="line">        Acc.append(train_acc/<span class="built_in">len</span>(train_DataLoader))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;epoch : <span class="subst">&#123;e+<span class="number">1</span>&#125;</span> / <span class="subst">&#123;epoch&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Train Loss : <span class="subst">&#123;train_loss/<span class="built_in">len</span>(train_DataLoader)&#125;</span>, Train Acc : <span class="subst">&#123;train_acc/<span class="built_in">len</span>(train_DataLoader)&#125;</span>&quot;</span>)</span><br><span class="line">    Net_train_loss.append(Acc)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">net1=Net()</span><br><span class="line">train(net1,<span class="string">&quot;Net1&quot;</span>)</span><br><span class="line"></span><br><span class="line">net2=Mixed_5b()</span><br><span class="line">train(net2,<span class="string">&quot;Net2&quot;</span>)</span><br><span class="line"></span><br><span class="line">net3=Net3()</span><br><span class="line">train(net3,<span class="string">&quot;Net3&quot;</span>)</span><br><span class="line"></span><br><span class="line">net4=Block35()</span><br><span class="line">train(net4,<span class="string">&quot;Net4&quot;</span>)</span><br><span class="line"></span><br><span class="line">net5=Net4()</span><br><span class="line">train(net5,<span class="string">&quot;Net5&quot;</span>)</span><br><span class="line"></span><br><span class="line">net6=Net5()</span><br><span class="line">train(net6,<span class="string">&quot;Net6&quot;</span>)</span><br><span class="line"></span><br><span class="line">net7=Net6()</span><br><span class="line">train(net7,<span class="string">&quot;Net7&quot;</span>)</span><br></pre></td></tr></table></figure><p>训练结束后，我们就可以载入模型的参数和结果啦。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载最优参数</span></span><br><span class="line">Nets=[net1,net2,net3,net4,net5,net6,net7]</span><br><span class="line">BestAcc=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>):</span><br><span class="line">    checkpoint=torch.load(<span class="string">r&quot;YourPath\Net%s.pth&quot;</span>%i)</span><br><span class="line">    Nets[i-<span class="number">1</span>].load_state_dict(checkpoint[<span class="string">&quot;model_state_dict&quot;</span>])</span><br><span class="line">    BestAcc.append(checkpoint[<span class="string">&quot;best_acc&quot;</span>])</span><br></pre></td></tr></table></figure><p>我们用训练好的模型去计算在验证集上的结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pre=[]</span><br><span class="line">eval_acc=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Nets:</span><br><span class="line">    i.<span class="built_in">eval</span>()</span><br><span class="line">    i.to(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">    net_pre=i(x_v_tensor)</span><br><span class="line">    eval_acc.append(accuracy(torch.<span class="built_in">max</span>(net_pre,<span class="number">1</span>)[<span class="number">1</span>],y_v_tensor.argmax(<span class="number">1</span>)).item())</span><br><span class="line">    <span class="keyword">if</span> pre==[]:</span><br><span class="line">        pre=net_pre</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        pre+=net_pre</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看验证集和训练集精度变化情况</span></span><br><span class="line">b=Bar()</span><br><span class="line">b.add_xaxis([<span class="string">&quot;Net%i&quot;</span>%i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>)])</span><br><span class="line">b.add_yaxis(<span class="string">&quot;Train Acc&quot;</span>,[<span class="built_in">round</span>(i,<span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> BestAcc])</span><br><span class="line">b.add_yaxis(<span class="string">&quot;Val Acc&quot;</span>,[<span class="built_in">round</span>(i,<span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> eval_acc])</span><br><span class="line">b.set_series_opts(markpoint_opts=opts.MarkPointOpts(</span><br><span class="line">        data=[opts.MarkPointItem(type_=<span class="string">&quot;max&quot;</span>, name=<span class="string">&quot;最大值&quot;</span>),  <span class="comment">##设置最大值 标记</span></span><br><span class="line">              opts.MarkPointItem(type_=<span class="string">&quot;min&quot;</span>, name=<span class="string">&quot;最小值&quot;</span>),  <span class="comment"># 设置最小值标记</span></span><br><span class="line">              ], symbol=<span class="string">&#x27;pin&#x27;</span>, symbol_size=<span class="number">60</span>), markline_opts=opts.MarkLineOpts(</span><br><span class="line">        data=[opts.MarkLineItem(type_=<span class="string">&quot;average&quot;</span>, name=<span class="string">&quot;平均值&quot;</span>)]</span><br><span class="line">    ))</span><br><span class="line">b.render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703010331579.png" alt="image-20230703010331579" style="zoom:50%;"><p>可以看到，在验证集上，模型的性能有所下降，这是由于原本的模型对于训练集发生了过拟合现象。Net1实际上是最简单的二层全连接层，尽管它的训练速度最快，参数最少，在训练集上表现良好，但其泛化能力远不如其他模型。而Net2则对验证集的表现良好。</p><p>总体来说，模型在验证集上的平均精度略微下降。</p><h2 id="五-模型融合">五 模型融合</h2><p>模型融合通过提升特征多样性、样本多样性和模态多样性，可以进一步增加模型的泛化能力和鲁棒性。</p><p>根据方法的不同，可以分为过程融合和结果融合。</p><p><strong>过程融合🍉</strong></p><p>过程融合最基本的有Bagging和Boosting，Bagging就是多个弱分类器堆叠在一起，Boosting就是基于弱分类器分错的结果输入后一个分类器中，从而实现弱模型媲美强模型的过程。</p><p><strong>结果融合🍌</strong></p><p>主要有以下几种方法</p><ul><li>加权法</li><li>stacking</li><li>Blending</li></ul><p>我们这边使用结果融合，通过尝试直接叠加法、软投票法和Stacking方式，分析并给出一个相对较好的结果</p><h3 id="1-线性融合">1 线性融合</h3><h4 id="1-1-投票法">1.1 投票法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z_1=accuracy(torch.<span class="built_in">max</span>(pre,<span class="number">1</span>)[<span class="number">1</span>],y_v_tensor.argmax(<span class="number">1</span>)).item() <span class="comment"># 直接投票</span></span><br></pre></td></tr></table></figure><h4 id="2-2-加权投票">2.2 加权投票</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 结果加权投票</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vote</span>(<span class="params">weight</span>):</span><br><span class="line">    pre_1=[]</span><br><span class="line">    <span class="keyword">for</span> _,i <span class="keyword">in</span> <span class="built_in">enumerate</span>(Nets):</span><br><span class="line">        i.<span class="built_in">eval</span>()</span><br><span class="line">        i.to(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">        net_pre=i(x_v_tensor)*weight[_]</span><br><span class="line">        <span class="keyword">if</span> pre_1==[]:</span><br><span class="line">            pre_1=net_pre</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pre_1+=net_pre</span><br><span class="line">    <span class="keyword">return</span> pre_1</span><br><span class="line"></span><br><span class="line">z_2=accuracy(torch.<span class="built_in">max</span>(vote(eval_acc),<span class="number">1</span>)[<span class="number">1</span>],y_v_tensor.argmax(<span class="number">1</span>)).item()</span><br></pre></td></tr></table></figure><h4 id="2-3-软投票">2.3 软投票</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于Softmax投票</span></span><br><span class="line">k=<span class="built_in">sum</span>([np.exp(i) <span class="keyword">for</span> i <span class="keyword">in</span> eval_acc])</span><br><span class="line">sm=[np.exp(i)/k <span class="keyword">for</span> i <span class="keyword">in</span> eval_acc]</span><br><span class="line">z_3=accuracy(torch.<span class="built_in">max</span>(vote(sm),<span class="number">1</span>)[<span class="number">1</span>],y_v_tensor.argmax(<span class="number">1</span>)).item()</span><br></pre></td></tr></table></figure><h3 id="2-Stacking">2 Stacking</h3><p>将多个分类器的概率结果作为一个简单分类器的输入，经过该分类器进行输出，我们这边执行两种方法：</p><ul><li>数值叠加</li><li>特征叠加</li></ul><p>简单分类器选择一个简单的NN</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,in_channel=<span class="number">7</span>,out_channel=<span class="number">7</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(NN, self).__init__()</span><br><span class="line">        self.hidden=nn.Sequential(</span><br><span class="line">            nn.Linear(in_channel,<span class="number">128</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">128</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">128</span>,<span class="number">256</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">256</span>,<span class="number">648</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">648</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.2</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">648</span>,<span class="number">7</span>)</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">return</span> F.softmax(self.hidden(x))</span><br></pre></td></tr></table></figure><h4 id="2-1-数值叠加">2.1 数值叠加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数值叠加</span></span><br><span class="line">input_data=[]</span><br><span class="line"><span class="keyword">for</span> _,i <span class="keyword">in</span> <span class="built_in">enumerate</span>(Nets):</span><br><span class="line">    i.<span class="built_in">eval</span>()</span><br><span class="line">    i.to(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">    net_pre=i(x_t_tensor)</span><br><span class="line">    <span class="keyword">if</span> input_data==[]:</span><br><span class="line">        input_data=net_pre</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        input_data+=net_pre</span><br><span class="line">x=input_data.tolist()</span><br><span class="line">input_data=torch.tensor(x)</span><br><span class="line">input_data.shape</span><br></pre></td></tr></table></figure><p>值得注意的是，这里通过<code>tolist()</code>来回转换变换内存地址，否则<code>torch</code>在反向传播执行计算图时会把上面那段代码也算进去，导致报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据集</span></span><br><span class="line">stackingData=DataLoader(MyDataSet(input_data.<span class="built_in">float</span>(),y_t_tensor),batch_size=<span class="number">64</span>,shuffle=<span class="literal">True</span>,drop_last=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 模型</span></span><br><span class="line">net_s_1=NN(<span class="number">7</span>,<span class="number">7</span>)</span><br><span class="line"><span class="comment"># 训练</span></span><br><span class="line">train(net_s_1,<span class="string">&quot;Net_S_1&quot;</span>,n=stackingData,epoch=<span class="number">50</span>)</span><br><span class="line"><span class="comment"># 载入</span></span><br><span class="line">net_s_1.load_state_dict(torch.load(<span class="string">r&quot;YourPath\Net_S_1.pth&quot;</span>)[<span class="string">&quot;model_state_dict&quot;</span>])</span><br><span class="line">net_s_1.to(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"><span class="comment"># 预测结果</span></span><br><span class="line">z_4=accuracy(torch.<span class="built_in">max</span>(net_s_1(pre),<span class="number">1</span>)[<span class="number">1</span>],y_v_tensor.<span class="built_in">max</span>(<span class="number">1</span>)[<span class="number">1</span>]).item()</span><br></pre></td></tr></table></figure><h4 id="2-2-特征叠加">2.2 特征叠加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 特征叠加</span></span><br><span class="line">input_data=[]</span><br><span class="line"><span class="keyword">for</span> _,i <span class="keyword">in</span> <span class="built_in">enumerate</span>(Nets):</span><br><span class="line">    i.<span class="built_in">eval</span>()</span><br><span class="line">    i.to(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">    net_pre=i(x_t_tensor)</span><br><span class="line">    <span class="keyword">if</span> input_data==[]:</span><br><span class="line">        input_data=net_pre</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        input_data=torch.concat([input_data,net_pre],<span class="number">1</span>)</span><br><span class="line">x=input_data.tolist()</span><br><span class="line">input_data=torch.tensor(x)</span><br><span class="line">input_data.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">stackingData=DataLoader(MyDataSet(input_data.<span class="built_in">float</span>(),y_t_tensor),batch_size=<span class="number">64</span>,shuffle=<span class="literal">True</span>,drop_last=<span class="literal">True</span>)</span><br><span class="line">net_s_2=NN(<span class="number">49</span>,<span class="number">7</span>)</span><br><span class="line">train(net_s_2,<span class="string">&quot;Net_S_2&quot;</span>,n=stackingData,epoch=<span class="number">200</span>)</span><br><span class="line">net_s_2.load_state_dict(torch.load(<span class="string">r&quot;YourPath\Net_S_2.pth&quot;</span>)[<span class="string">&quot;model_state_dict&quot;</span>])</span><br><span class="line">net_s_2.to(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">z_5=accuracy(torch.<span class="built_in">max</span>(net_s_1(pre),<span class="number">1</span>)[<span class="number">1</span>],y_v_tensor.<span class="built_in">max</span>(<span class="number">1</span>)[<span class="number">1</span>]).item()</span><br></pre></td></tr></table></figure><h3 id="3-结果分析">3 结果分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">b=Line()</span><br><span class="line">b.add_xaxis([<span class="string">&quot;直接投票&quot;</span>,<span class="string">&quot;结果分配投票&quot;</span>,<span class="string">&quot;Softmax软投票&quot;</span>,<span class="string">&quot;数据叠加&quot;</span>,<span class="string">&quot;特征叠加&quot;</span>])</span><br><span class="line">b.add_yaxis(<span class="string">&quot;结果精度&quot;</span>,[<span class="built_in">round</span>(i,<span class="number">5</span>) <span class="keyword">for</span> i <span class="keyword">in</span> [z_1,z_2,z_3,z_4,z_5]])</span><br><span class="line">b.set_global_opts(yaxis_opts=opts.AxisOpts(min_=<span class="string">&quot;dataMin&quot;</span>,max_=<span class="string">&quot;dataMax&quot;</span>))</span><br><span class="line">b.render_notebook()</span><br></pre></td></tr></table></figure><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703011113022.png" alt="image-20230703011113022" style="zoom:50%;"><p>之前单模在验证集上最高的0.888，平均是0.86，特征叠加的结果会优于之前单模最好结果。</p><p>值得一提的是，特征叠加的方法在训练集上最高性能达到了0.93，这个结果远超之前单模的最好结果0.894。当然，用深度学习网络作为输出分类器，高收益的同时也带来了高风险，根据输出分类器的性能，最终结果也会上下浮动。为了避免这种情况，我们其实可以使用Ridge回归、Lasso回归、简单随机森林等模型作为输出模型。</p><hr><h2 id="六-结果分析">六 结果分析</h2><p><strong>以下是各模型的分类性能</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">b=Bar()</span><br><span class="line">b.add_xaxis([i <span class="keyword">for</span> i <span class="keyword">in</span> ML_PRE.keys()]+[<span class="string">&quot;Net%s&quot;</span>%i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>)])</span><br><span class="line">b.add_yaxis(<span class="string">&quot;机器学习准确率&quot;</span>,[<span class="built_in">round</span>(i[<span class="number">1</span>],<span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> ML_PRE.values()],markpoint_opts=opts.MarkPointOpts(</span><br><span class="line">            data=[opts.MarkPointItem(type_=<span class="string">&quot;min&quot;</span>, name=<span class="string">&quot;最小值&quot;</span>),opts.MarkPointItem(type_=<span class="string">&quot;max&quot;</span>,name=<span class="string">&quot;最大值&quot;</span>)],symbol=<span class="string">&#x27;pin&#x27;</span>, symbol_size=<span class="number">55</span>))</span><br><span class="line">b.add_yaxis(<span class="string">&quot;深度学习准确率&quot;</span>,[<span class="literal">None</span>]*<span class="number">4</span>+[<span class="built_in">round</span>(i,<span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> eval_acc],markpoint_opts=opts.MarkPointOpts(</span><br><span class="line">            data=[opts.MarkPointItem(type_=<span class="string">&quot;min&quot;</span>, name=<span class="string">&quot;最小值&quot;</span>),opts.MarkPointItem(type_=<span class="string">&quot;max&quot;</span>,name=<span class="string">&quot;最大值&quot;</span>)],symbol=<span class="string">&#x27;arrow&#x27;</span>, symbol_size=<span class="number">55</span>))</span><br><span class="line">b.set_global_opts(xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=-<span class="number">15</span>)),</span><br><span class="line">                     title_opts=opts.TitleOpts(title=<span class="string">&quot;模型准确率&quot;</span>))</span><br><span class="line">b.render_notebook()</span><br></pre></td></tr></table></figure><img src="/2023/07/13/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E6%A3%AE%E6%9E%97%E8%A6%86%E7%9B%96%E7%B1%BB%E5%9E%8B%E9%A2%84%E6%B5%8B/image-20230703021324827.png" alt="image-20230703021324827" style="zoom:50%;"><p>在小样本跟少量特征的情况下，机器学习模型的性能与深度学习模型的性能差距不大，当然这里的深度学习模型只是一些非常简单的模型。</p><p><strong>以下是性能最强的两个深度学习模型与两个最强的机器学习模型进行融合的结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Net3 Net6</span></span><br><span class="line">net3,net6=Nets[<span class="number">2</span>],Nets[-<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 做个最简单的线性加权</span></span><br><span class="line">z1=torch.<span class="built_in">max</span>(net3(x_v_tensor),<span class="number">1</span>)[<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">z2=torch.<span class="built_in">max</span>(net6(x_v_tensor),<span class="number">1</span>)[<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">z3=ML_PRE[<span class="string">&#x27;LightGBM&#x27;</span>][<span class="number">0</span>]</span><br><span class="line">z4=ML_PRE[<span class="string">&#x27;RF&#x27;</span>][<span class="number">0</span>]</span><br><span class="line">z=torch.concat([z1.reshape(z1.shape[<span class="number">0</span>],<span class="number">1</span>),z2.reshape(z1.shape[<span class="number">0</span>],<span class="number">1</span>),torch.Tensor(z3).reshape(z1.shape[<span class="number">0</span>],<span class="number">1</span>),torch.Tensor(z4).reshape(z1.shape[<span class="number">0</span>],<span class="number">1</span>)],dim=<span class="number">1</span>)</span><br><span class="line">e=pd.DataFrame(z.numpy())</span><br><span class="line"><span class="comment"># 后处理</span></span><br><span class="line"><span class="comment"># 一般在提交的时候整的</span></span><br><span class="line"><span class="comment"># 取众数就好了</span></span><br><span class="line">ans=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(e.shape[<span class="number">0</span>]):</span><br><span class="line">    ans.append(e.iloc[i].mode().values[<span class="number">0</span>])</span><br><span class="line">accuracy(ans,y_val)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0.8838183421516755</span></span><br></pre></td></tr></table></figure><p>emm，这个性能略好于Net6，大于机器学习模型，小于Net3。</p><p>值得注意的是，在后处理过程中，模型投票产生的结果可能是：</p><ul><li>四票全中</li><li>三票A一票B</li><li>两票A两票B</li><li>两票A一票B一票C</li><li>ABCD各一票</li></ul><p>由于这里是把结果拿出来了而不是概率(概率请参考深度学习融合)，所以我们规定：三票四票的直接就是输出标签，两票A两票B选择创建分支，两票A一票B一票C选择A，ABCD各一票则随机选。</p><p>举个简单的后处理栗子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">ans=[]</span><br><span class="line">ans2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(e.shape[<span class="number">0</span>]):</span><br><span class="line">    v=[<span class="number">0</span>]*<span class="number">8</span></span><br><span class="line">    fir=<span class="literal">True</span></span><br><span class="line">    c=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(e.shape[<span class="number">1</span>]):</span><br><span class="line">        v[<span class="built_in">int</span>(e.iloc[i,j])]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> idx,_ <span class="keyword">in</span> <span class="built_in">enumerate</span>(v):</span><br><span class="line">        <span class="keyword">if</span> _==<span class="number">4</span> <span class="keyword">or</span> _==<span class="number">3</span>:</span><br><span class="line">            ans.append(idx)</span><br><span class="line">            ans2.append(idx)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> _==<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> fir:</span><br><span class="line">                ans.append(idx)</span><br><span class="line">                ans2.append(idx)</span><br><span class="line">                fir=<span class="literal">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans2[-<span class="number">1</span>]=idx</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> _==<span class="number">1</span>:</span><br><span class="line">            c+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> c==<span class="number">4</span>:</span><br><span class="line">        ans.append(e.iloc[i,<span class="number">0</span>])</span><br><span class="line">        ans2.append(e.iloc[i,<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>这段代码是我在半夜三点神志不清的时候写的，难免像坨屎，应该有很大的优化空间。但不管怎么说，这种后处理方式确实拿到了更好的结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">accuracy(ans,y_val) <span class="comment"># 0.8833774250440917</span></span><br><span class="line">accuracy(ans2,y_val) <span class="comment"># 0.8893298059964727</span></span><br></pre></td></tr></table></figure><p>这个结果超过了之前单模最好结果Net3，算是有提升吧。</p><p>实际上，我们对深度学习模型的融合也需要进行后处理，这样也能提高些分数。</p><p>就不做Stacking了，大概就是这样</p><p><strong>以下是特征工程对于机器学习模型的提升</strong></p><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703032934826.png" alt="image-20230703032934826" style="zoom:50%;"><p>这个图不太直观啊，我们逐个来看看是否有提升：</p><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703033627960.png" alt="image-20230703033627960" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703033803478.png" alt="image-20230703033803478" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703033914021.png" alt="image-20230703033914021" style="zoom:50%;"><img src="https://github.com/Chen-XiaoLv/ML-in-Geochemistry/raw/master/READEME/image-20230703033954456.png" alt="image-20230703033954456" style="zoom:50%;"><p>这里面仅仅构建了几个简单的特征，剔除了异常值，结果得到了明显的提升。但是相应的，异常值会带来泛化能力的提高，模型鲁棒性增强，需要根据具体情况决定是否对异常值进行剔除。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">基于ML+DL融合的森林覆盖类型预测</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="项目实践" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/"/>
    <id>http://example.com/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/</id>
    <published>2023-07-07T07:16:45.275Z</published>
    <updated>2023-07-07T09:42:58.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-Web-环境">Docker Web 环境</h2><p>涉及到的技术栈：</p><ul><li>Linux</li><li>MySQL</li><li>Docker</li><li>Flask</li></ul><p>本文将分为两部分，第一部分是一些基础知识，第二部分则是整个操作过程。</p><hr><h1>前置知识</h1><h2 id="一、Linux基础">一、Linux基础</h2><blockquote><p>与Windows系统相比：</p><ul><li>可以不安装图形界面，只用命令行操作，灵活性更强</li><li>模块可以随意增减(硬件设备)</li><li>命令行对网络带宽要求不高，方便远程操作</li><li>Linux比Windows更加稳定(卡死)</li><li>授权更便宜</li><li>硬件要求更低</li><li>Linux的用户管理和权限管理更强，因而比Windows更加安全</li></ul></blockquote><h3 id="1-1-SSH远程连接">1.1 SSH远程连接</h3><p>Secure Shell 是一种网络安全协议，通过加密和认证机制实现安全的访问和文件传输业务。我们这里通过SSH远程链接命令行的方式与Linux系统进行交互。</p><p>我们这里采用的SSH客户端是<code>MobaXterm</code>，免费版本最多只能同时创建两个SSH连接，下载网址为：<a href="https://mobaxterm.mobatek.net/download.html">https://mobaxterm.mobatek.net/download.html</a></p><p>这个就是MobaXterm的客户端啦：</p><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707154854126.png" alt="image-20230707154854126" style="zoom:50%;"><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707160321392.png" alt="image-20230707160321392" style="zoom:50%;"><p>这边可以远程输入端口。但是还记得之前打开的wsl服务吗，可以直接连接到本机的WSL服务。</p><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707170901189.png" alt="image-20230707170901189" style="zoom:50%;"><p>在SFTP进行上传，直接拖进去，或者右键都可以。</p><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707171211281.png" alt="image-20230707171211281" style="zoom:50%;"><p>这样就有了捏。</p><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707171231385.png" alt="image-20230707171231385" style="zoom:50%;"><p>运行一下试试：</p><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707171313755.png" alt="image-20230707171313755" style="zoom:50%;"><h3 id="1-2-Linux知识">1.2 Linux知识</h3><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707160846355.png" alt="image-20230707160846355" style="zoom:33%;"><h3 id="1-3-Linux操作">1.3 Linux操作</h3><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>mkdir</code> school</td><td style="text-align:center">创建一个文件夹</td></tr><tr><td style="text-align:center"><code>cd</code> school</td><td style="text-align:center">转移到路径下</td></tr><tr><td style="text-align:center"><code>touch</code> demo.txt</td><td style="text-align:center">创建一个文件</td></tr><tr><td style="text-align:center"><code>cd</code> …</td><td style="text-align:center">返回上级</td></tr><tr><td style="text-align:center"><code>rm -rf</code> school</td><td style="text-align:center">移除文件</td></tr><tr><td style="text-align:center"><code>vim</code> demo.txt</td><td style="text-align:center">编写文件(Ins键更换输入模式)</td></tr><tr><td style="text-align:center">esc+:w</td><td style="text-align:center">在vim下保存写入</td></tr><tr><td style="text-align:center">:q</td><td style="text-align:center">退出vim</td></tr><tr><td style="text-align:center"><code>tar -cvf</code> school.tar school</td><td style="text-align:center">压缩，可以保留文件权限信息</td></tr><tr><td style="text-align:center"><code>tar -xvf</code> school.tar</td><td style="text-align:center">xvf解压缩，cvf压缩</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>部分参数意义</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:center">递归操作</td></tr><tr><td style="text-align:center"><code>-f</code></td><td style="text-align:center">强制</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="二、Flask基础">二、Flask基础</h2><blockquote><p>轻量级的网络框架，可以通过第三方扩展增加功能</p></blockquote><p>Flask支持MVC模式(Model-View-Controller)，兼容多种数据库、模板；Flask的路由以及路由函数由修饰器设定，开发人员不需要其他文档匹配。</p><p>一个特点就是，要用到啥安装啥。</p><h4 id="MVC模式">MVC模式</h4><p>将一个复杂的软件系统抽象成模型层(Model)、视图层(View)、控制器层(Controller)，划分出明确的职责。</p><img src="/2023/07/07/Docker%20Web%20%E7%8E%AF%E5%A2%83/image-20230707174042982.png" alt="image-20230707174042982" style="zoom:50%;"><p>模型层：与代码有关</p><p>视图层：与界面有关，比如三件套</p><p>控制器层：链接模型层和视图层</p><h2 id="三、Docker基础">三、Docker基础</h2><hr><h1>创建Python容器、部署Flask项目</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker-Web-环境&quot;&gt;Docker Web 环境&lt;/h2&gt;
&lt;p&gt;涉及到的技术栈：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文将分为两部</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/"/>
    <id>http://example.com/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/</id>
    <published>2023-06-02T15:57:46.023Z</published>
    <updated>2023-06-02T15:57:46.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LaSO-Label-Set-Operations-Networks-for-Multi-Label-Few-Shot-Learning">LaSO: Label-Set Operations Networks for Multi-Label Few-Shot Learning</h2><h3 id="1-研究问题">1 研究问题</h3><p>基于小样本的学习是时下比较热门的研究课题。主流的小样本学习方法一般是通过数据增强，或是利用生成式模型构建合成样本。这些合成样本可以用来改善少样本任务的泛化性能，但截止至本文发表前，目前所有关于小样本分类的工作都是基于单标签进行的。针对多标签任务和复杂场景，目前没有特别优秀的解决方案。</p><h3 id="2-主要贡献">2 主要贡献</h3><p>本文提出了一种在特征空间构建语义内容的神经网络，该网络通过在特征空间操纵语义的方式，生成感兴趣的多标签样本，从而填补了目前多标签小样本学习方面的空白。除此之外，本文为小样本多标签学习提供了一个新的基准，并附带了一系列性能评估方式和指标。</p><h3 id="3-解决方案和核心方法">3 解决方案和核心方法</h3><h4 id="3-1-标签集合操作">3.1 标签集合操作</h4><p>本文的核心思想在于通过构建一组特征空间的集合操作，从而在语义层面上获取新的合成数据。例如：样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>是一张在动物园拍摄的笼子+老虎照片，样本B是笼子+鸡照片，样本C是笼子+兔照片，通过网络挖掘特征空间上潜在的语义向量，可以将这些样本表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">{</mo><mtext>笼子，老虎</mtext><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">{</mo><mtext>笼子，鸡</mtext><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">{</mo><mtext>笼子，兔</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A\{笼子，老虎\},B\{笼子，鸡\},C\{笼子，兔\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">{</span><span class="mord cjk_fallback">笼子，老虎</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">{</span><span class="mord cjk_fallback">笼子，鸡</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">{</span><span class="mord cjk_fallback">笼子，兔</span><span class="mclose">}</span></span></span></span>。传统网络对这些样本进行训练，是很难生成大自然中的老虎的，但是通过一系列集合操作：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>−</mo><mo stretchy="false">(</mo><mi>B</mi><mo>∩</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A-(B\cap C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>，即可提取到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">{</mo><mtext>老虎</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A\{老虎\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">{</span><span class="mord cjk_fallback">老虎</span><span class="mclose">}</span></span></span></span>这一信息。</p><p>基于特征空间和标签集合操作，可以从图像中学习到隐式的语义信息，对数据集进行一定的增强，扩展了特征空间包含的语义信息。</p><img src="/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20230528161959386.png" alt="image-20230528161959386" style="zoom:25%;"><h4 id="3-2-网络架构">3.2 网络架构</h4><img src="/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20230528162113081.png" alt="image-20230528162113081" style="zoom:25%;"><p>本文的网络架构可分为特征提取网络、交集信息网络、并集信息网络、差分信息网络和分类器。</p><p>特征提取网络backbone由迁移的InceptionV3和ResNet-34构成，对于提取到的特征，进入三个子网络进行学习。这三个子网络均是由三层全连接层实现的，分别用于学习和提取集合描述特征。最终的结构将由特征提取网络学习到的特征加上集合描述特征进入多层感知机分类器获取。</p><h4 id="3-3-损失函数">3.3 损失函数</h4><p>本文的损失函数可分为多标签分类损失和重构损失。</p><h5 id="3-3-1-多标签分类损失">3.3.1 多标签分类损失</h5><p>该损失就是二元交叉熵损失函数，计算公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>l</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">BCE(s,l)=-\sum_i l_i\log \sigma(s_i)+(1-l_i)\log(1-\sigma(s_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p><p>考虑到特征提取器获得的特征信息<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">F_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>Y</mi></msub></mrow><annotation encoding="application/x-tex">F_Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，可计算分类损失：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow></msub><mo>=</mo><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{loss}=BCE(C(F_X),L(X))+BCE(C(F_Y),L(Y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>代表集合描述特征。整个LaSO网络集合提取模块的损失计算如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>a</mi><mi>S</mi><msub><mi>O</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow></msub><mo>=</mo><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mspace linebreak="newline"></mspace><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>∪</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mspace linebreak="newline"></mspace><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>s</mi><mi>u</mi><mi>b</mi></mrow></msub><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>−</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LaSO_{loss}=BCE(C(Z_{int},L(X)\cap L(Y))+\\BCE(C(Z_{uni},L(X)\cup L(Y))+\\BCE(C(Z_{sub},L(X)- L(Y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span></span></span></span></span></p><h5 id="3-3-2-重构损失">3.3.2 重构损失</h5><p>重构损失要求保证交集网络和并集网络的对称性，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>交换位置时，输出的结果不会改变。其误差计算如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>R</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msubsup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>+</mo><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">R_{loss}^{sym}=\frac{1}{n}||z_{int}-M_{int}(F_Y,F_X)||_2+\\\frac{1}{n}||z_{uni}-M_{uni}(F_Y,F_X)||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0836em;vertical-align:-0.3013em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3987em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>注：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>X</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>Y</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_{int}=M_{int}(F_X,F_Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>同时，对于差集特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo>−</mo><msub><mi>F</mi><mi>Y</mi></msub></mrow><annotation encoding="application/x-tex">F_X-F_Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和交集特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo>∩</mo><msub><mi>F</mi><mi>Y</mi></msub></mrow><annotation encoding="application/x-tex">F_X\cap F_Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这两应该可以还原得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub></mrow><annotation encoding="application/x-tex">F_X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>R</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow><mi>m</mi></msubsup><mi>c</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mi>x</mi></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>s</mi><mi>u</mi><mi>b</mi></mrow></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>+</mo><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mi>Y</mi></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>M</mi><mrow><mi>s</mi><mi>u</mi><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">R_{loss}^mc=\frac{1}{n}||F_x-M_{uni}(Z_{sub},z_{int})||_2+\\\frac{1}{n}||F_Y-M_{uni}(M_{sub}(F_Y,F_X),z_{int})||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9614em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h4 id="结论">结论</h4><p>本文提出的基于特征空间上集合运算的多标签小样本学习填补了该领域的空白，与传统数据扩充方式有所不同的是，该方法并没有在图像层面上构建合成数据，而是在特征维度上进行扩充，通过已学习的小样本潜在语义之间的关系进行推理学习，从而起到了数据增强的作用。但本文依旧存在一些局限性，譬如当小样本数据语义信息较为单调，或是语义集合之间不存在交集，这可能导致模型学习到的数据产生一定的混淆，加大容量的同时可能效果提升不明显。本文使用了最简单的多层感知机作为集合网络和分类网络，这部分具有较大的改进空间，可以考虑采用先进的网络架构进行优化。特征层面上的集合操作取得了可行的解，是否也可以通过别的数学方法对数据语义进行扩充增广，也许是该架构可行的改进方案之一。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LaSO-Label-Set-Operations-Networks-for-Multi-Label-Few-Shot-Learning&quot;&gt;LaSO: Label-Set Operations Networks for Multi-Label Few-Shot L</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【数据分析实践】猫十二分类</title>
    <link href="http://example.com/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/"/>
    <id>http://example.com/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/</id>
    <published>2023-05-20T07:12:17.287Z</published>
    <updated>2023-05-25T15:16:07.152Z</updated>
    
    <content type="html"><![CDATA[<h1>【数据科学项目实践】基于ResNet和Inception v3的猫十二分类迁移学习</h1><h2 id="一、项目背景">一、项目背景</h2><p>本项目来源于飞浆平台的图像分类学习赛。<a href="https://aistudio.baidu.com/aistudio/competition/detail/136/0/introduction">指路链接</a></p><ul><li>代码和结果来源于我的小组同学，没有做任何的改动，我这边仅做一个总结归纳，以便学习和复盘</li></ul><p>简单把赛题Copy一下：</p><blockquote><p>本场比赛要求参赛选手对十二种猫进行分类，属于CV方向经典的图像分类任务。图像分类任务作为其他图像任务的基石，可以让大家更快上手计算机视觉。</p></blockquote><p><strong>数据集</strong></p><p>比赛数据集包含12种猫的图片，并划分为训练集与测试集。</p><p><strong>训练集：</strong> 提供高清彩色图片以及图片所属的分类，共有2160张猫的图片，含标注文件。</p><p><strong>测试集：</strong> 仅提供彩色图片，共有240张猫的图片，不含标注文件。</p><h2 id="二、Baseline">二、Baseline</h2><h3 id="2-1-准备阶段">2.1 准备阶段</h3><p>主要是导入一些要用到的模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> models,transforms</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader,Dataset</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch.optim <span class="keyword">import</span> lr_scheduler</span><br><span class="line"><span class="keyword">import</span> copy</span><br></pre></td></tr></table></figure><h3 id="2-2-数据读取阶段">2.2 数据读取阶段</h3><p>这个阶段就是如何将数据读取到模型中来，由于猫猫是图像数据，所以这边将其读取成数字图像一般是通过数组来存在内存中的，考虑到中间过程的可视化，我们通过<code>PIL</code>来读取<code>Image</code>类型的数据。这步可以写作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=np.fromfile(imgPath,dtype=np.float32) <span class="comment"># 读取成ndarray</span></span><br><span class="line">x=cv2.imdecode(x,<span class="number">1</span>) <span class="comment"># 将区间转化为[0,255]</span></span><br><span class="line">img=PIL.Image.fromarray(x) <span class="comment"># 读取成Image对象</span></span><br></pre></td></tr></table></figure><img src="/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/image-20230525222735963.png" alt="image-20230525222735963" style="zoom:50%;"><p>上图中，左边的是Image类型的数据，右边是cv读取的数据，可以发现发生了颜色通道的调换。实际上，读取到cv这部分就好了，可以调用多窗口的<code>imshow</code>进行数据可视化。</p><p>我们现在拿到了猫猫图像！那么接下来就要拿到猫猫的标签啦，一般情况下，我们会将数据跟标签记录在一个文档里，每一行对应一个数据(图片)路径和一个标签：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件标签</span></span><br><span class="line">filelist=<span class="string">r&quot;data_split_list.txt&quot;</span></span><br><span class="line">imgs,labels=[],[] <span class="comment"># 存储列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filelist) <span class="keyword">as</span> f:</span><br><span class="line">    lines=[_.strip() <span class="keyword">for</span> _ <span class="keyword">in</span> f] <span class="comment"># 去除空白</span></span><br><span class="line">    np.random.shuffle(lines) <span class="comment"># 随机打乱</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> lines:</span><br><span class="line">        img_path,label=l.split(<span class="string">&#x27;\t&#x27;</span>) <span class="comment"># 获取图片路径和标签</span></span><br><span class="line">        img=Image.fromarray(cv2.imdecode(np.fromfile(img_path,np.float32),<span class="number">1</span>))</span><br><span class="line">        imgs.append(img)</span><br><span class="line">        labels.append(label)</span><br></pre></td></tr></table></figure><p>我们将这部分工作封装成一个函数，就可以实现数据的读取了。</p><p>接下来的工作，就是将数据转化为<code>PyTorch</code>接受的格式啦。众所周知，<code>PyTorch</code>的模型训练跟推理一般是通过迭代一个<code>DataLoader</code>对象来进行的，而<code>DataLoader</code>对象的数据集是一个<code>DataSet</code>类。所以这里我们需要构建一个<code>Dataset</code>类啦：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(myData,self).__init__()</span><br><span class="line">        self.data=[]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.data[x]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.data)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>嗯，把上面三个函数填完就阔以啦。</p><p>对于图像数据，我们需要应用一个<code>transforms</code>，这里做最简单的变换：<code>转为Tensor，尺寸裁剪，标准化</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">self.transform=transforms.Compose(</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Resize((<span class="number">299</span>,<span class="number">299</span>)),</span><br><span class="line">    transforms.Normalize((<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>),(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>最终的Dataset如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,kind</span>):</span><br><span class="line">        <span class="built_in">super</span>(myData, self).__init__()</span><br><span class="line">        self.mode=kind</span><br><span class="line">        self.transform=transforms.Compose(</span><br><span class="line">            transforms.ToTensor(),</span><br><span class="line">            transforms.Resize((<span class="number">299</span>,<span class="number">299</span>)),</span><br><span class="line">            transforms.Normalize((<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>),(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>))</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> kind==<span class="string">&quot;test&quot;</span>:</span><br><span class="line">            self.imgs=self.load_origin_data()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.imgs,self.labels=self.load_origin_data()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="keyword">if</span> self.mode==<span class="string">&quot;test&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.transform(self.imgs[item])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.transform(self.imgs[item]),torch.tensor(self.labels[item])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.imgs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_origin_data</span>(<span class="params">self</span>):</span><br><span class="line">        filelist = <span class="string">&#x27;./data/%s_split_list.txt&#x27;</span> % self.mode</span><br><span class="line">        imgs,labels=[],[]</span><br><span class="line">        data_dir=os.getcwd()+<span class="string">&quot;/data&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.mode==<span class="string">&#x27;train&#x27;</span> <span class="keyword">or</span> self.mode==<span class="string">&#x27;val&#x27;</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(filelist) <span class="keyword">as</span> f:</span><br><span class="line">                lines=[_.strip() <span class="keyword">for</span> _ <span class="keyword">in</span> f]</span><br><span class="line">                <span class="keyword">if</span> self.mode==<span class="string">&#x27;train&#x27;</span>:</span><br><span class="line">                    np.random.shuffle(lines)</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> lines:</span><br><span class="line">                        img_path,label=l.split(<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                        img_path=os.path.join(data_dir,img_path)</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            img=Image.fromarray(cv2.imdecode(np.fromfile(img_path,dtype=np.float32),<span class="number">1</span>))</span><br><span class="line">                            imgs.append(img)</span><br><span class="line">                            labels.append(<span class="built_in">int</span>(label))</span><br><span class="line">                        <span class="keyword">except</span> Exception(<span class="string">&quot;The path %s&quot;</span>%img_path+<span class="string">&quot; may be wrong&quot;</span>) <span class="keyword">as</span> e:</span><br><span class="line">                            <span class="built_in">print</span>(e)</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">return</span> imgs,labels</span><br><span class="line">                <span class="keyword">elif</span> self.mode==<span class="string">&quot;test&quot;</span>:</span><br><span class="line">                    full_lines = os.listdir(<span class="string">&#x27;data/cat_12_test/&#x27;</span>)</span><br><span class="line">                    lines = [line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> full_lines]</span><br><span class="line">                    <span class="keyword">for</span> img_path <span class="keyword">in</span> lines:</span><br><span class="line">                        img_path = os.path.join(data_dir, <span class="string">&quot;cat_12_test/&quot;</span>, img_path)</span><br><span class="line">                        img = Image.<span class="built_in">open</span>(img_path)</span><br><span class="line">                        imgs.append(img)</span><br><span class="line">                    <span class="keyword">return</span> imgs</span><br></pre></td></tr></table></figure><h3 id="2-3-模型训练">2.3 模型训练</h3><p>我们刚刚说<code>PyTorch</code>的模型训练跟推理一般是通过迭代一个<code>DataLoader</code>对象来进行的，现在就是需要构建这个东西啦：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_Dataloader</span>():</span><br><span class="line">    img_datasets = &#123;x: myData(x) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>, <span class="string">&#x27;test&#x27;</span>]&#125;</span><br><span class="line">    dataset_sizes = &#123;x: <span class="built_in">len</span>(img_datasets[x]) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>, <span class="string">&#x27;test&#x27;</span>]&#125;</span><br><span class="line"></span><br><span class="line">    train_loader = DataLoader(</span><br><span class="line">        dataset=img_datasets[<span class="string">&#x27;train&#x27;</span>],</span><br><span class="line">        batch_size=<span class="number">24</span>,</span><br><span class="line">        shuffle=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    val_loader = DataLoader(</span><br><span class="line">        dataset=img_datasets[<span class="string">&#x27;val&#x27;</span>],</span><br><span class="line">        batch_size=<span class="number">1</span>,</span><br><span class="line">        shuffle=<span class="literal">False</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    test_loader = DataLoader(</span><br><span class="line">        dataset=img_datasets[<span class="string">&#x27;test&#x27;</span>],</span><br><span class="line">        batch_size=<span class="number">1</span>,</span><br><span class="line">        shuffle=<span class="literal">False</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    dataloaders = &#123;</span><br><span class="line">        <span class="string">&#x27;train&#x27;</span>: train_loader,</span><br><span class="line">        <span class="string">&#x27;val&#x27;</span>: val_loader,</span><br><span class="line">        <span class="string">&#x27;test&#x27;</span>: test_loader</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dataset_sizes,dataloaders</span><br></pre></td></tr></table></figure><p>接下来就是单纯的训练过程了。步骤总结如下：</p><ul><li>参数设置阶段<ul><li>设置GPU</li><li>设置优化器、损失函数、学习策略</li></ul></li><li>训练过程<ul><li>迭代DataLoader</li><li>优化器梯度清零</li><li>模型推理</li><li>误差计算</li><li>反向传播</li><li>更新优化器、学习率</li></ul></li><li>模型评估<ul><li>计算每轮的误差累计值、精度</li><li>选择最优精度并进行模型保存</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Train</span>(<span class="params">model,criterion,optimizer,scheduler,num_epoches=<span class="number">25</span></span>):</span><br><span class="line">    dataset_sizes,dataloaders=get_Dataloader()</span><br><span class="line">    device=torch.device(<span class="string">&quot;cuda:0&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">    best_model_wts=copy.deepcopy(model.state_dict())</span><br><span class="line">    best_acc=<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epoches):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Epoch &#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(epoch+<span class="number">1</span>,num_epoches))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> phase <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>,<span class="string">&#x27;val&#x27;</span>]:</span><br><span class="line">            <span class="keyword">if</span> phase==<span class="string">&quot;train&quot;</span>:</span><br><span class="line">                model.train()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                model.<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line">            trian_loss=<span class="number">0.0</span></span><br><span class="line">            train_corrects=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> inputs,labels <span class="keyword">in</span> dataloaders[phase]:</span><br><span class="line">                inputs,labels=inputs.to(device),labels.to(device)</span><br><span class="line">                optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">with</span> torch.set_grad_enabled(phase==<span class="string">&quot;train&quot;</span>):</span><br><span class="line">                    <span class="comment"># 上下文管理器，参数是Bool，用于确定是否对Block内的语句进行求导</span></span><br><span class="line">                    y_pre=model(inputs)</span><br><span class="line">                    _,y_pre=torch.<span class="built_in">max</span>(y_pre,<span class="number">1</span>)</span><br><span class="line">                    loss=criterion(y_pre,labels)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> phase==<span class="string">&quot;train&quot;</span>:</span><br><span class="line">                        loss.backward()</span><br><span class="line">                        optimizer.step()</span><br><span class="line"></span><br><span class="line">                trian_loss+=loss.item()*inputs.size(<span class="number">0</span>)</span><br><span class="line">                train_corrects+=torch.<span class="built_in">sum</span>(y_pre==labels)</span><br><span class="line">            <span class="keyword">if</span> phase==<span class="string">&quot;train&quot;</span>:</span><br><span class="line">                scheduler.step()</span><br><span class="line"></span><br><span class="line">            epoch_loss=trian_loss/dataset_sizes[phase]</span><br><span class="line">            epoch_acc=train_corrects.<span class="built_in">float</span>()/dataset_sizes[phase]</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; Loss :&#123;:.4f&#125; Acc &#123;:.4&#125;&quot;</span>.<span class="built_in">format</span>(phase,epoch_loss,epoch_acc))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> phase==<span class="string">&quot;val&quot;</span> <span class="keyword">and</span> epoch_acc&gt;best_acc:</span><br><span class="line">                best_acc=epoch_acc</span><br><span class="line">                best_model_wts=copy.deepcopy(model.state_dict())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Best val Acc : &#123;:4f&#125;&quot;</span>.<span class="built_in">format</span>(best_acc))</span><br><span class="line">    model.load_state_dict(best_model_wts)</span><br><span class="line">    <span class="keyword">return</span> model</span><br></pre></td></tr></table></figure><h2 id="三、迁移学习">三、迁移学习</h2><p>迁移学习(Transfer Learning)就是利用预训练好的大模型参数去学习其他数据的分布。</p><p>这个过程我们一般不希望原始模型参数改变，因而一般需要做如下工作:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> model.parameters():</span><br><span class="line">    param.requires_grad=<span class="literal">False</span></span><br></pre></td></tr></table></figure><p>然后，我们需要构架最后一层全连接层，用来学习新的数据集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fc=nn.Linear(<span class="number">2048</span>,num_classes)</span><br></pre></td></tr></table></figure><p>也就是最后需要训练的就是这个全连接层了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Inception</span>(<span class="params">device</span>):</span><br><span class="line">    <span class="comment"># 用训练好的模型进行迁移</span></span><br><span class="line">    model_ft=models.inception_v3(pretrained=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># model_ft=models.resnet50(pretrained=True)</span></span><br><span class="line">    <span class="comment"># model_ft=models.alexnet(pretrained=True)</span></span><br><span class="line"></span><br><span class="line">    num_ftrs=model_ft.fc.in_features</span><br><span class="line">    model_ft.fc=nn.Linear(num_ftrs,<span class="number">12</span>) <span class="comment"># 设置全连接层最终结果</span></span><br><span class="line">    </span><br><span class="line">    model_ft=model_ft.to(device)</span><br><span class="line"></span><br><span class="line">    cirterion=nn.CrossEntropyLoss()</span><br><span class="line">    optimizer_ft=torch.optim.SGD(model_ft.parameters(),lr=<span class="number">0.001</span>,momentum=<span class="number">0.9</span>)</span><br><span class="line">    exp_lr_scheduler=lr_scheduler.StepLR(optimizer_ft,step_size=<span class="number">5</span>,gamma=<span class="number">0.1</span>)</span><br><span class="line">    model_ft=Train(model_ft,cirterion,optimizer_ft,exp_lr_scheduler,num_epoches=<span class="number">30</span>)</span><br></pre></td></tr></table></figure><h2 id="四、结果分析">四、结果分析</h2><ul><li><p>Inception</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Epoch 30/30</span><br><span class="line">train Loss: 0.1065 Acc: 0.9858</span><br><span class="line">val Loss: 0.3026 Acc: 0.8983</span><br><span class="line">Best val Acc: 0.918336</span><br></pre></td></tr></table></figure></li><li><p>AlexNet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Epoch 30/30</span><br><span class="line">train Loss: 0.1403 Acc: 0.9601</span><br><span class="line">val Loss: 0.6815 Acc: 0.7750</span><br><span class="line">Best val Acc: 0.779661</span><br></pre></td></tr></table></figure></li><li><p>ResNet50</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Epoch 30/30</span><br><span class="line">train Loss: 0.0480 Acc: 0.9973</span><br><span class="line">val Loss: 0.3157 Acc: 0.9060</span><br><span class="line">Best val Acc: 0.909091</span><br></pre></td></tr></table></figure></li></ul><p>中间部分特征图的结果如下：</p><img src="/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/image-20230525231256607.png" alt="image-20230525231256607" style="zoom:33%;"><p>特征图嘛，主打的就是一个抽象。可以发现同一张图经过不同的卷积核作用后，有了全新的高维特征，这些特征也主打的就是一个难以解释，反正就看个乐。</p><img src="/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/image-20230525231541473.png" alt="image-20230525231541473" style="zoom:50%;"><p>基本上7个epoch就收敛了。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">基于ResNet的猫十二分类迁移学习</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="项目实践" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/05/10/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91GNN/"/>
    <id>http://example.com/2023/05/10/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91GNN/</id>
    <published>2023-05-09T18:02:46.083Z</published>
    <updated>2023-05-09T18:04:11.640Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GNN_Core</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,A,inC,outC</span>):</span><br><span class="line">        <span class="built_in">super</span>(GNN_Core, self).__init__()</span><br><span class="line">        <span class="comment"># Features Matrix X: [N,D]</span></span><br><span class="line">        <span class="comment"># Adjacent Matrix A: [N,D]</span></span><br><span class="line">        N=A.shape[<span class="number">0</span>]</span><br><span class="line">        self.self_adjecent=nn.Sequential(</span><br><span class="line">            nn.Linear(N,<span class="number">64</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">64</span>,N)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.adjacent=nn.Sequential(</span><br><span class="line">            nn.Linear(inC,<span class="number">32</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">32</span>,outC)</span><br><span class="line">        )</span><br><span class="line">        self.A=A</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x,w</span>):</span><br><span class="line">        <span class="comment"># By the way, there is a small knowledge which about Diag</span></span><br><span class="line">        <span class="comment"># We can get Diag by torch.diag(M) and rebuild the dimension by torch.diag_embed(x)</span></span><br><span class="line">        <span class="comment"># by this approach, we also can easily make diag to 0.</span></span><br><span class="line">        <span class="comment"># Ori-torch.diag_embed(torch.diag(Ori)</span></span><br><span class="line">        sA=self.self_adjecent(torch.diag(x)) <span class="comment"># Only need to train the diag of matrix</span></span><br><span class="line">        A=self.adjacent(torch.bmm(self.A,x)) <span class="comment"># simulate the multiplication between A and X</span></span><br><span class="line">        A=w*A <span class="comment"># w means normalization function</span></span><br><span class="line">        <span class="comment"># A [B,N,O]</span></span><br><span class="line">        <span class="comment"># sA [N]</span></span><br><span class="line">        <span class="keyword">return</span> (A.T+sA).T</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,A,hidden_num,hidden_out</span>):</span><br><span class="line">        <span class="built_in">super</span>(GNN, self).__init__()</span><br><span class="line">        self.hiddens=nn.Sequential()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(hidden_num):</span><br><span class="line">            self.hiddens.append(GNN_Core(A,hidden_out[i],hidden_out[i+<span class="number">1</span>]))</span><br><span class="line">            <span class="keyword">if</span> i&lt;hidden_num-<span class="number">1</span>:</span><br><span class="line">                self.hiddens.append(nn.BatchNorm1d(hidden_out[i+<span class="number">1</span>]))</span><br><span class="line">                self.hiddens.append(nn.ReLU())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.hiddens(x)</span><br><span class="line">        <span class="keyword">return</span> F.softmax(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Loss</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Loss, self).__init__()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x,y</span>):</span><br><span class="line">        <span class="keyword">return</span> torch.<span class="built_in">sum</span>(y*np.log(x)+(<span class="number">1</span>-y)*np.log(<span class="number">1</span>-x))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>():</span><br><span class="line">    model=GNN(<span class="literal">None</span>,<span class="number">3</span>,<span class="number">128</span>)</span><br><span class="line">    loss_func=Loss()</span><br><span class="line"></span><br><span class="line">    optimizer=torch.optim.SGD()</span><br><span class="line">    data=<span class="literal">None</span></span><br><span class="line">    y=<span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 简单模拟下</span></span><br><span class="line">    y_pre=model(data)</span><br><span class="line">    optimizer.zero_grad()</span><br><span class="line">    loss=loss_func(y_pre,y)</span><br><span class="line">    loss.backward()</span><br><span class="line">    optimizer.step()</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>English Essay</title>
    <link href="http://example.com/2023/05/09/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91English%20Essay/"/>
    <id>http://example.com/2023/05/09/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91English%20Essay/</id>
    <published>2023-05-08T16:00:00.000Z</published>
    <updated>2023-05-09T16:01:42.411Z</updated>
    
    <content type="html"><![CDATA[<h3 id="The-Dissertation-Revision-Trap">The Dissertation Revision Trap</h3><blockquote><p>Imagine this common scenario: You’ve put your heart, blood, and time into creating and submitting an initial dissertation prospectus, concept paper, or dissertation proposal – only to receive a request for revision.</p></blockquote><p>想象一下这个常见的场景:你投入了心血和时间来创作和提交一份初步的论文大纲、概念论文或论文提案，结果却收到了修改的请求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">put your heart, blood, <span class="keyword">and</span> time into : 投身于</span><br></pre></td></tr></table></figure><blockquote><p>Now, it’s up to you to revise this thing and return it to your chair and/or committee members such that you can move forward. You make the revisions based upon your understanding of the requests being made. You resubmit. Then, it happens: You receive more request for revision.</p></blockquote><p>现在，由你来修改这个东西，并把它还给你的主席和/或委员会成员，以便你能继续前进。你根据你对所提要求的理解进行修改。你重新提交。然后，事情发生了： 你收到更多的修改要求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">it<span class="string">&#x27;s up to ：取决于</span></span><br><span class="line"><span class="string">such that ： 如此...以至于</span></span><br><span class="line"><span class="string">based upon : 取决于</span></span><br></pre></td></tr></table></figure><blockquote><p>It’s at this point where most candidates get stuck. It’s from this point that so many candidates will never advance. Such candidates are forever caught in the cycle of what I call “The Dissertation Revision Trap.”</p></blockquote><p>正是在这一点上，大多数候选人被卡住了。正是从这一点出发，许多候选人将永远无法前进。这些候选人永远陷入了我称之为 &quot;论文修改陷阱 &quot;的循环之中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">at this point : 在这时，在此处</span><br><span class="line">It<span class="string">&#x27;s at this point where ..... : xxx在这个地方</span></span><br><span class="line"><span class="string">get stuck : 卡住了</span></span><br><span class="line"><span class="string">be forever caught in the cycle of : 陷入循环</span></span><br></pre></td></tr></table></figure><blockquote><p>Here are reasons that candidates get stuck in this trap:</p><p>POISON #1 : They submit their work far too early.</p><p>Candidates sometimes submit their “draft” before it’s fully ready for chair and committee eyes. While checking in with one’s chair, asking for feedback about specific elements of one’s draft, and asking specific questions about executing specific section of one’s draft are great strategies to writing a great dissertation, submitting an all-out draft before you know that is fully meets the expectations of a finished draft is pretty unwise.</p></blockquote><p>以下是候选人陷入这个陷阱的原因：</p><p>POISON1：他们过早地提交了他们的工作。</p><p>候选人有时会在自己的 &quot;草稿 &quot;完全准备好供主席和委员会审阅之前就提交。虽然向主席了解情况，就草案的具体内容征求反馈意见，并就草案的具体部分提出具体问题，是写出一篇好论文的好策略，但在你知道完全满足完成草案的期望之前就提交一份全面的草案是非常不明智的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">specific : 特定的，明确的</span><br><span class="line">pretty unwise : 及其不明智</span><br></pre></td></tr></table></figure><blockquote><p>POISON #2 : They only address the revision request.</p><p>When you receive a request from a committee member, it’s natural to want to satisfy that revision. However, satisfying that revision request alone is not enough. Often you have to adjust other elements of your draft to satisfy the revision request AND address any paper-wide changes required to accommodate the request.</p><p>The antidote: Make the requested revision and examine how the draft needs to change around the revision. Carefully check your line of logic to make sure that it still holds with the new revision. In the event you don’t understand the revision request, call the requester on the phone or meet face-to-face to ask some questions.</p></blockquote><p>POISON2:它们只处理修改请求。</p><p>当你收到一个委员会成员的请求时，想要满足这个修改是很自然的。然而，仅仅满足修改要求是不够的。通常，你必须调整草稿的其他元素以满足修改要求，并处理为适应要求而需要进行的所有纸张更改。</p><p>解决方法:进行要求的修改，并检查草稿需要如何围绕修改进行更改。仔细检查你的逻辑线，以确保它仍然适用于新的修订。如果你不明白修改请求，打电话给请求者或面对面地问一些问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">address : 也有修订的意思</span><br><span class="line">accommodate : 容纳，满足，迁就</span><br><span class="line">it<span class="string">&#x27;s natural to do : 自然而然做</span></span><br><span class="line"><span class="string">antidote : 解毒药(矫正方法)</span></span><br><span class="line"><span class="string">make sure : 确保</span></span><br><span class="line"><span class="string">In the event : 假如，倘若</span></span><br></pre></td></tr></table></figure><blockquote><p>POISON #3: They go overboard in their revisions.</p><p>Sometimes, rarely, candidates will change their draft more than required. For example, if a revision request was made to augment a minute element of a single sentence and the candidate made unnecessary global changes to one’s literature review based upon that single request, that would be an overreaction.</p><p>The antidote: Ask careful questions to the person requesting the revision. Understand the extent of the change before you make it.</p></blockquote><p>POISON3:他们在修改中做得太过火了。</p><p>有时，很少，候选人会修改他们的草稿超过要求。例如，如果一个修改请求是为了增加一个句子的一个微小元素，而候选人根据这个请求对他的文献综述进行了不必要的全面修改，这将是反应过度。</p><p>解决方法:向要求修改的人仔细提问。在做出改变之前，要了解改变的程度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go overboard <span class="keyword">in</span> : 太过火了</span><br><span class="line">rarely : 很少</span><br><span class="line">the extent of : 程度</span><br></pre></td></tr></table></figure><hr><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;The-Dissertation-Revision-Trap&quot;&gt;The Dissertation Revision Trap&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Imagine this common scenario: You’ve put your he</summary>
      
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>【OpenCV】OpenCV基本操作</title>
    <link href="http://example.com/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2023-03-21T09:32:51.556Z</published>
    <updated>2023-03-21T16:38:41.557Z</updated>
    
    <content type="html"><![CDATA[<h1>OpenCV基本操作</h1><hr><p>OpenCV本质上还是C/C++架构，只不过我们可以通过Python的接口来调用底层代码。其中的模块大致如下：</p><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321173939350.png" alt="image-20230321173939350" style="zoom:50%;"><p><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321174122542.png" alt="image-20230321174122542"></p><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321174217314.png" alt="image-20230321174217314" style="zoom:50%;"><hr><h2 id="3-1-图像输入与输出">3.1 图像输入与输出</h2><p>处理图像之前，需要将图像文件从磁盘上读取到内存，处理完毕后再保存到内存。<code>imgproc</code>模块提供了这些全局函数，用来读取或保存图像文件。</p><h3 id="3-1-1-读取图像">3.1.1  读取图像</h3><p>函数<code>imread</code>用于读取图像文件或加载图像文件。其声明如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv.imread(filename[, flags])-&gt;retval</span><br></pre></td></tr></table></figure><p>这个<code>flags</code>参数表示读取模式，输入是一组枚举数据，取值如下：</p><ul><li><code>cv.IMREAD_ANYDEPTH:2</code>,若输入的图像深度是<code>16</code>或者<code>32</code>，就返回对应深度的图像，否则转换为<code>8</code>位图像返回。</li><li><code>cv.IMREAD_COLOR:1</code>，将输入图像转化为三通道彩色图像</li><li><code>cv.IMREAD_GRAYSCALE:0</code>，将图像转为一通道灰度图</li><li><code>cv.IMREAD_UNCHANGED:-1</code>，原封不动读取原图</li></ul><p>如果这个函数没有读取成功，则会返回<code>None</code>。值得注意的是，读取的结果是一个<code>Ndarray</code>数组，可以通过<code>Numpy</code>的方法对其进行处理。</p><p>除却<code>imread</code>外，我们还可以通过<code>imdecode</code>从缓存中读取图像。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv.imdecode(np.fromfile(imgpath,dtype=np.unint8),flag)</span><br></pre></td></tr></table></figure><h3 id="3-2-2-保存图像">3.2.2  保存图像</h3><p>我们现在用函数<code>imwrite</code>来保存图像。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imwrite(filename,img[.params])-&gt;retval</span><br></pre></td></tr></table></figure><p>好了，我们直接来看一个例子吧，<strong>读取并保存图像</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取一张图像</span></span><br><span class="line">img=cv.imread(<span class="string">&quot;./Files/img1.png&quot;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># 在namewindow(GUI)显示图像</span></span><br><span class="line">cv.imshow(<span class="string">&quot;window1&quot;</span>,img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.imwrite(<span class="string">&quot;./Files/img4.jpg&quot;</span>,img)</span><br><span class="line">cv.destroyWindow(<span class="string">&quot;window1&quot;</span>)</span><br></pre></td></tr></table></figure><p>当然除了通过namewindow显示图像外，我们也可以调用matplotlib的接口：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">img=cv.imread(<span class="string">&quot;./Files/img1.png&quot;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>如果我们手上有两幅图像，可以通过线性加和的方式将其<strong>混合</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图像混合</span></span><br><span class="line">alpha=<span class="number">0.5</span></span><br><span class="line">img1=cv.imread(<span class="string">&quot;./Files/img2.png&quot;</span>)</span><br><span class="line">img2=cv.imdecode(np.fromfile(<span class="string">&quot;./Files/img3.png&quot;</span>,dtype=np.uint8),-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> img1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    sys.exit(<span class="string">&quot;Could not read the image1&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> img2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    sys.exit(<span class="string">&quot;Could not read the image2&quot;</span>)</span><br><span class="line">img2=cv.resize(img2,(img1.shape[<span class="number">1</span>],img1.shape[<span class="number">0</span>]),interpolation=cv.INTER_LINEAR)</span><br><span class="line">i1,i2,i3=img2[:,:,<span class="number">0</span>],img2[:,:,<span class="number">1</span>],img2[:,:,<span class="number">2</span>]</span><br><span class="line">img2=cv.merge((i1,i2,i3))</span><br><span class="line">beta=(<span class="number">1.0</span>-alpha)</span><br><span class="line">dst=cv.addWeighted(img1,alpha,img2,beta,<span class="number">0.0</span>,<span class="number">0</span>)</span><br><span class="line">cv.imshow(<span class="string">&quot;result&quot;</span>,dst)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这段代码需要注意的是，有一个<code>cv.resize(img,(newH,newW),method)</code>方法，可以通过插值的方式对图像重新采样。不同通道的图像可以通过<code>ndarray</code>索引的方式进行拆分，并通过<code>cv.merge()</code>方法进行堆叠。</p><p><code>merge</code>方法等价于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataset=[np.random.randn(<span class="number">4</span>,<span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line">np.stack(dataset,axis=-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>然后图像线性加和函数<code>addWeighted(img,alpha,img,alpha,0.0,0)</code>，实际上也类似于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D=img1*alpha+img2*beta</span><br><span class="line">D=D.astype(<span class="built_in">int</span>)</span><br><span class="line">dst1=np.clip(D,<span class="number">0</span>,<span class="number">255</span>)</span><br></pre></td></tr></table></figure><p>我们再来看一个栗子，对多幅图像进行<strong>拼接</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多幅图像</span></span><br><span class="line">img1=cv.resize(img1,(<span class="number">100</span>,<span class="number">100</span>),interpolation=cv.INTER_LINEAR)</span><br><span class="line">img2=cv.resize(img2,(<span class="number">100</span>,<span class="number">100</span>),interpolation=cv.INTER_LINEAR)</span><br><span class="line">img=np.hstack((img1,img2))</span><br><span class="line">Img=np.vstack((img1,img2))</span><br><span class="line">cv.imshow(<span class="string">&quot;01&quot;</span>,img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>) <span class="comment"># 0不自动退出，否则正数代表毫秒</span></span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>这边值得注意的是，<code>hstack</code>和<code>vstack</code>分别会在<code>dim=0</code>和<code>dim=1</code>上操作。</p><p>如果想要<strong>调整GUI窗口大小</strong>，可以这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个窗口并调整大小</span></span><br><span class="line">cv.namedWindow(<span class="string">&quot;02&quot;</span>,cv.WINDOW_NORMAL)</span><br><span class="line">cv.resizeWindow(<span class="string">&quot;02&quot;</span>,Img.shape[<span class="number">1</span>],Img.shape[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># resizeWindow的逻辑顺序应该在imshow之前</span></span><br><span class="line"></span><br><span class="line">cv.imshow(<span class="string">&quot;02&quot;</span>,Img)</span><br><span class="line"></span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3 id="3-2-3-鼠标事件">3.2.3  鼠标事件</h3><p>这里我们要介绍<strong>回调函数</strong>(call back function)，一般情况下应用程序会通过应用编程接口调用系统库的函数，但有些库函数却要求应用程序传回一个函数，这样具有极大的灵活性。</p><p>OpenCV提供了<code>setMousecallback</code>接口，用来预先设置好回调函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetMouseCallback(WindowName,onMouse,param=<span class="literal">None</span>)-&gt;<span class="literal">None</span></span><br></pre></td></tr></table></figure><p>我们可以定义自己的回调函数，请注意，这个函数继承自<code>event</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">MouseCallback</span>(<span class="params">event,x,y,flags,param</span>)</span><br></pre></td></tr></table></figure><p><code>event</code>的枚举类型有：</p><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th style="text-align:center">Meaning</th></tr></thead><tbody><tr><td style="text-align:center">EVENT_MOUSEMOVE</td><td style="text-align:center">0</td><td style="text-align:center">滑动</td></tr><tr><td style="text-align:center">EVENT_LBUTTONDOWN</td><td style="text-align:center">1</td><td style="text-align:center">左键点击</td></tr><tr><td style="text-align:center">EVENT_RBUTTONDOWN</td><td style="text-align:center">2</td><td style="text-align:center">右键点击</td></tr><tr><td style="text-align:center">EVENT_MBUTTONDOWN</td><td style="text-align:center">3</td><td style="text-align:center">中键点击</td></tr><tr><td style="text-align:center">EVENT_LBUTTONUP</td><td style="text-align:center">4</td><td style="text-align:center">左键放开</td></tr><tr><td style="text-align:center">EVENT_RBUTTONUP</td><td style="text-align:center">5</td><td style="text-align:center">右键放开</td></tr><tr><td style="text-align:center">EVENT_MBUTTONUP</td><td style="text-align:center">6</td><td style="text-align:center">中键放开</td></tr><tr><td style="text-align:center">EVENT_LBUTTONBLCLK</td><td style="text-align:center">7</td><td style="text-align:center">左键双击</td></tr><tr><td style="text-align:center">EVENT_RBUTTONBLCLK</td><td style="text-align:center">8</td><td style="text-align:center">右键双击</td></tr><tr><td style="text-align:center">EVENT_MBUTTONBLCLK</td><td style="text-align:center">9</td><td style="text-align:center">中键双击</td></tr></tbody></table><p><code>flags</code>的类型有</p><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th style="text-align:center">Meaning</th></tr></thead><tbody><tr><td style="text-align:center">EVENT_FLAG_LBUTTON</td><td style="text-align:center">1</td><td style="text-align:center">左键拖拽</td></tr><tr><td style="text-align:center">EVENT_FLAG_RBUTTON</td><td style="text-align:center">2</td><td style="text-align:center">右键拖拽</td></tr><tr><td style="text-align:center">EVENT_FLAG_MBUTTON</td><td style="text-align:center">4</td><td style="text-align:center">中键拖拽</td></tr><tr><td style="text-align:center">EVENT_FLAG_CTRLKEY</td><td style="text-align:center">8</td><td style="text-align:center">ctr</td></tr><tr><td style="text-align:center">EVENT_FLAG_SHIFTKEY</td><td style="text-align:center">16</td><td style="text-align:center">shift</td></tr><tr><td style="text-align:center">EVENT_FLAG_ALTKEY</td><td style="text-align:center">32</td><td style="text-align:center">alt</td></tr></tbody></table><p>现在我们来看个栗子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">img=np.zeros((<span class="number">500</span>,<span class="number">500</span>))</span><br><span class="line"><span class="comment"># 定义回调函数</span></span><br><span class="line">nx,ny=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_circle</span>(<span class="params">event,x,y,flags,param</span>):</span><br><span class="line">    <span class="keyword">global</span> nx,ny</span><br><span class="line">    <span class="keyword">if</span> event==cv.EVENT_LBUTTONDOWN:</span><br><span class="line">        <span class="comment"># 绘制圆</span></span><br><span class="line">        nx,ny=x,y</span><br><span class="line">    <span class="keyword">if</span> event==cv.EVENT_LBUTTONUP:</span><br><span class="line">        cv.circle(img,(nx,ny),<span class="built_in">int</span>(math.sqrt((x-nx)**<span class="number">2</span>+(y-ny)**<span class="number">2</span>)),<span class="number">255</span>,-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cv.namedWindow(<span class="string">&quot;IMG&quot;</span>)</span><br><span class="line">cv.setMouseCallback(<span class="string">&#x27;IMG&#x27;</span>,draw_circle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    cv.imshow(<span class="string">&#x27;IMG&#x27;</span>,img)</span><br><span class="line">    n=cv.waitKey(<span class="number">5</span>) <span class="comment"># 获取键盘输入</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> n==<span class="built_in">ord</span>(<span class="string">&#x27;s&#x27;</span>):</span><br><span class="line">        <span class="comment"># 保存</span></span><br><span class="line">        cv.imwrite(<span class="string">&quot;./Files/img5.png&quot;</span>,img)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Save successfully&quot;</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321234107166.png" alt="image-20230321234107166" style="zoom:50%;"><h3 id="3-2-4-滑动条事件">3.2.4  滑动条事件</h3><p>在OpenCV中，滑动条一般是用来在视频播放帧中选择特定帧。我们一般需要给滑动条创建一个名字，并通过这个名字进行引用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateTrackbar(trackbarName,windowName,value,count,onChange)-&gt; None</span><br></pre></td></tr></table></figure><p>滑动条不会挡住父窗口的图像，只会让其变大。<code>value</code>表示当前滑动条的位置，<code>count</code>表示华东的最大值。<code>onChange</code>也是一个回调函数。</p><p>我们现在来看滑动条的回调函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_">TrackbarCallback</span><span class="params">(pos,userdata)</span></span><br></pre></td></tr></table></figure><p>其中，<code>pos</code>表示滑动块当前位置，<code>userdata</code>表示可选参数。如果不需要，就把<code>onChange</code>设置成<code>None</code>就行了。</p><p>如果我们想获取滑动块的位置，可以是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetTrackbarPos(Name,WindowName)-&gt;retval</span><br><span class="line"><span class="title function_">SetTrackbarPos</span><span class="params">(Name,WindowName,pos)</span>-&gt;None</span><br></pre></td></tr></table></figure><p>下面我们举个栗子来看如何通过滑动块调节亮度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">alpha=<span class="number">0.3</span></span><br><span class="line">beta=<span class="number">80</span></span><br><span class="line"></span><br><span class="line">img_path=<span class="string">r&quot;./Files/img2.png&quot;</span></span><br><span class="line">img=cv.imread(img_path)</span><br><span class="line">img2=cv.imread(img_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updateAlpha</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">global</span> alpha,img,img2</span><br><span class="line">    alpha=cv.getTrackbarPos(<span class="string">&#x27;Alpha&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    alpha*=<span class="number">0.01</span></span><br><span class="line">    img=np.uint8(np.clip((alpha*img2+beta),<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updateBeta</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">global</span> beta,img,img2</span><br><span class="line">    beta=cv.getTrackbarPos(<span class="string">&quot;Beta&quot;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    img=np.uint8(np.clip((alpha*img2+beta),<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建窗口</span></span><br><span class="line">cv.namedWindow(<span class="string">&quot;image&quot;</span>)</span><br><span class="line">cv.createTrackbar(<span class="string">&#x27;Alpha&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">0</span>,<span class="number">300</span>,updateAlpha)</span><br><span class="line">cv.createTrackbar(<span class="string">&#x27;Beta&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">0</span>,<span class="number">255</span>,updateBeta)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认值</span></span><br><span class="line">cv.setTrackbarPos(<span class="string">&#x27;Alpha&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">100</span>)</span><br><span class="line">cv.setTrackbarPos(<span class="string">&#x27;Beta&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    cv.imshow(<span class="string">&#x27;image&#x27;</span>,img)</span><br><span class="line">    <span class="keyword">if</span> cv.waitKey(<span class="number">1</span>)==<span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230322003836973.png" alt="image-20230322003836973" style="zoom:50%;"><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">哈哈哈哈哈哈</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="OpenCV" scheme="http://example.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>【OpenCV】计算机视觉概述</title>
    <link href="http://example.com/2023/03/20/%E3%80%90OpenCV%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2023/03/20/%E3%80%90OpenCV%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0/</id>
    <published>2023-03-20T15:14:01.415Z</published>
    <updated>2023-03-21T09:32:36.032Z</updated>
    
    <content type="html"><![CDATA[<h1>计算机视觉概述</h1><h2 id="1-图像的基本概念">1  图像的基本概念</h2><h3 id="1-1-图像和图形">1.1  图像和图形</h3><p>图像是摄影机、照相机等输入设备捕捉实际的画面产生的数字图像，是由像素构成的位图，是对客观世界的反映。</p><p>而图形呢？图形则是通过数学规则产生的、具有一定规则的团，一般是矢量图。图形通过一组指令集来描述内容，因而不会失真。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">图像</th><th style="text-align:center">图形</th></tr></thead><tbody><tr><td style="text-align:center">产生</td><td style="text-align:center">从真实世界记录</td><td style="text-align:center">由数学规则生成</td></tr><tr><td style="text-align:center">存储</td><td style="text-align:center">点阵值</td><td style="text-align:center">属性</td></tr><tr><td style="text-align:center">类型</td><td style="text-align:center">位图</td><td style="text-align:center">矢量图</td></tr><tr><td style="text-align:center">是否会失真</td><td style="text-align:center">是</td><td style="text-align:center">否</td></tr></tbody></table><hr><h3 id="1-2-数字图像及其特点">1.2  数字图像及其特点</h3><p>数字图像也叫做数码图像或者数位图像，存储方式一般是数组或者矩阵，光照位置和强度都是离散的。数字图像一般是由模拟图像数字化得到，以像素为基本单元。</p><p>一般我们对于数字图像的研究，就是研究其变换算法。</p><p>数字图像具有以下几个特点：</p><p>1️⃣ <strong>信息量大</strong></p><p>一幅图像一般有三个基本属性：长<code>h</code>、宽<code>w</code>、通道<code>c</code>。为了让数字图像逼近真实情况，我们还需要使用额外的空间存储它的色彩信息。例如<code>8-bit</code>图像就表示一个像素点的强度量将会由<code>8</code>个比特控制。所以一幅图像的数据大小为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>+</mo><mi>h</mi><mo>∗</mo><mi>w</mi><mo>∗</mo><mi>c</mi><mo>∗</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">O+h*w*c*b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>是其他信息，包括文件头、元数据等。</p><p>2️⃣ <strong>占用带宽大</strong></p><p>大的信息量当然要更大的带宽啦~普通电视的标准带宽为<code>6.5MHz</code>，是电话、传真等标准带宽的14倍。</p><p>3️⃣ <strong>相关性大</strong></p><p>图像之间的像素非常不独立，具有很大的相关性！这导致图像信息的压缩潜力非常大！</p><p>4️⃣ <strong>非客观性</strong></p><p>这个特性跟人有关系，最后对图像上的信息做解译的是人，一千个人眼中有一千个哈姆雷特。</p><hr><h3 id="1-3-相关名词介绍">1.3  相关名词介绍</h3><table><thead><tr><th style="text-align:center">名词</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">像素</td><td style="text-align:center">数字图像的基本离散单元</td></tr><tr><td style="text-align:center">分辨率</td><td style="text-align:center">每英寸图像内的像素点数(控制像元大小)</td></tr><tr><td style="text-align:center">灰度级</td><td style="text-align:center">按照对数关系将色彩分级</td></tr><tr><td style="text-align:center">灰度值</td><td style="text-align:center">用于量化图像的亮度</td></tr><tr><td style="text-align:center">深度</td><td style="text-align:center">图像深度指的是存储每个像素的位数，它确定了图像每个像素可能有的颜色数量会灰度级数</td></tr><tr><td style="text-align:center">通道</td><td style="text-align:center">即第三个维度，例如RGB就是三通道，高光谱则有上百个通道</td></tr></tbody></table><hr><h2 id="2-图像噪声">2  图像噪声</h2><p>所谓图像噪声，可以理解为妨碍人的视觉器官或系统传感器对所接受图像源信息进行理解或分析的各种因素。一般的噪声是不可预测的随机信号，可能出现在图像采集、图像处理的全过程。</p><p>图像噪声有很多种，主要有高斯噪声、瑞丽噪声、伽马、脉冲噪声。一般来说，脉冲噪声(椒盐噪声)是最常见的。产生噪声的原因有很多，譬如：</p><ul><li>光和电子的基本性质所引起的噪声</li><li>电器的机械运动产生的噪声</li><li>器材本身产生的噪声</li><li>系统内部产生的噪声</li></ul><blockquote><p>图像噪声的滤除</p></blockquote><p>一般来说，通过图像平滑可以有效减少和消除图像中的噪声，以改善图像质量，抽取对象特征进行分析。</p><p>通常图像滤波和平滑可以分为线性滤波和非线性滤波两种，线性滤波一般通过做离散卷积核来实现，非线性滤波譬如高斯滤波、中值滤波，显然并不对线性这个概念封闭(齐次、数乘)。中值滤波一般用来处理噪声，但也会改变未被噪声污染的像素(均摊了)。</p><h2 id="3-图像处理">3  图像处理</h2><p>图像作为人类感知世界的视觉基础，是人类获取信息、表达信息和传递信息的重要手段，计算机时代所说的图像处理通常是指数字图像处理，最早可以溯源到20世纪20年代，从伦敦通过海底电缆传到纽约的第一张压缩照片。这项技术可以帮助人们更加准确、客观地认识世界，获取更多的信息。</p><h3 id="3-1-图像处理的分类">3.1 图像处理的分类</h3><ul><li>光学模拟处理<ul><li>也称光信息处理，建立在傅里叶光学上</li></ul></li><li>电学模拟处理<ul><li>将光强度信号转化为电信号，成本投入相对较低，具有明显的优势，可以在短时间内完成滤波处理。</li></ul></li><li>计算机数字处理<ul><li>在计算机上，将连续的模拟图像信号转化为离散的数字图像进行处理。</li></ul></li></ul><h3 id="3-2-数字图像处理">3.2  数字图像处理</h3><p>数字图像处理的生命周期包括四个过程：</p><ul><li>图像信息的获取</li><li>图像信息的存储与交换</li><li>图像处理<ul><li>图像预处理</li><li>特征抽取</li><li>识别分析</li></ul></li><li>图像输出与显示</li></ul><h3 id="3-3-图像处理方法">3.3  图像处理方法</h3><p>这一小节我们会介绍图像变换、图像增强、图像分割、图像描述、图像分类和图像重建这几个热点领域。</p><hr><p><strong>图像变换</strong></p><p>进行图像变换的原因在于，离散图像占用的信息量是在太大，对其的操作十分费时和费内存。通过傅里叶变换、沃尔什变换、离散余弦变换等空间转换技术，可以将空域转为变换域处理。在减少计算量的同时，增加了可行的处理手段。</p><p>图像编码压缩也可以属于图像变换的一种，这种方式可以减少描述图像的数据量，节省图像传输、处理时间和占用存储的空间。</p><hr><p><strong>图像增强</strong></p><p>图像增强的目的在于提高图像的质量，比如去除噪声、提高清晰度等。一般来说，图像增强会突出研究人员所感兴趣的部分，例如通过高通滤波强化边缘、低通滤波减少噪声等。在深度学习中，往往需要使用图像增强来模拟多种视角、多种尺度的图像信息，从而提高模型的泛化能力。图像增强是图像预处理中不可或缺的一环，图像预处理的实质在于突出重点信息，抑制无用信息。</p><p>下图是图像增强的一些处理方法</p><img src="/2023/03/20/%E3%80%90OpenCV%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0/image-20230321170750055.png" alt="image-20230321170750055" style="zoom:50%;"><hr><p><strong>图像分割</strong></p><p>图像分割是数字图像处理中的关键技术之一，它可以将图像中有意义的特征部分提取出来，包括图像中的边缘、区域，这是进一步进行图像识别、分析和理解的基础。</p><hr><p><strong>图像描述</strong></p><p>图像描述是图像识别和理解的前提。一般来说，图像的描述方法可以有边界描述、区域描述、体积描述、纹理描述、表面描述等。</p><hr><p><strong>图像分类(识别)</strong></p><p>图像分类识别属于模式识别的范畴，主要内容是图像经过预处理后进行图像分割和特征提取，从而进行判决分类。</p><hr><p><strong>图像重建</strong></p><p>对于一些三维物体，可以通过X射线、超声波等物理方法，获取物体内部结构数据，再讲这些数据进行处理而构成物体内部部位的图像。目前最成功的的栗子就是CT(计算机断层扫描成像技术)。</p><h2 id="4-计算机视觉概述">4  计算机视觉概述</h2><p>计算机视觉是一门研究机器如何“看”的科学，换句话说，就是通过摄影机等输入设备代替人眼、计算机代替视觉中枢，从而模拟人类对图像目标的识别与分析。</p><p>计算机视觉本质上是对生物视觉的模拟，核心任务在于对采集的图像或视频数据处理，以获得相应场景的信息。其最终的研究目标，在于使计算机能像人那样通过视觉观察和理解世界，具有自主适应环境的能力。</p><blockquote><p>与相关学科的区别</p></blockquote><ul><li>计算机视觉（Computer Vision）： 计算机视觉是研究如何让计算机模拟人类视觉系统进行处理、理解和解释数字图像或视频的科学。计算机视觉的目标是从视觉数据中提取有意义的信息，并为进一步的决策和处理提供依据。这一领域包括了诸如目标检测、目标跟踪、图像分割、三维重建等多个子领域。</li><li>图像处理（Image Processing）： 图像处理是研究如何对数字图像进行操作和分析的技术。图像处理主要关注对图像的预处理，以便更好地理解和分析图像。这包括图像增强、滤波、去噪、压缩和特征提取等技术。图像处理是计算机视觉的基础技术之一。</li><li>机器视觉（Machine Vision）： 机器视觉主要关注为工业自动化领域提供解决方案。机器视觉系统通常由图像采集设备（如摄像头）、光源、处理器和执行设备组成。机器视觉系统的目标是通过自动化的方式提取图像中的信息，以便用于检测、测量、识别、分类等工业应用。机器视觉通常包含计算机视觉和图像处理技术。</li><li>模式识别（Pattern Recognition）： 模式识别关注的是从原始数据中识别和分类特定模式的问题。模式识别可以应用于多种数据类型，如图像、音频、文本等。该领域主要研究如何设计和优化算法，以实现对不同数据类型中的模式进行识别。计算机视觉和机器视觉都可以看作是模式识别的具体应用场景。</li></ul><p>总结一下，计算机视觉、图像处理、机器视觉和模式识别都涉及到从数据中提取信息的过程，但它们关注的领域和应用场景有所不同。计算机视觉关注对视觉数据的理解和解释，图像处理关注对图像的操作和分析，机器视觉关注工业自动化领域的视觉系统，而模式识别关注从多种数据类型中识别和分类特定模式的问题。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">哈哈哈哈哈哈</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="OpenCV" scheme="http://example.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>【PyTorch】PyTorch自动求导</title>
    <link href="http://example.com/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/"/>
    <id>http://example.com/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/</id>
    <published>2023-03-19T14:41:40.452Z</published>
    <updated>2023-03-23T12:11:04.861Z</updated>
    
    <content type="html"><![CDATA[<h1>PyTorch自动求导</h1><hr><blockquote><p>PyTorch的自动求导在torch.autograd包中实现。torch.Tensor和torch.Function为autograd包中的两个核心类，他们互相连接并生成一个有向非循环图。</p></blockquote><h2 id="1-1-自动求导要点">1.1  自动求导要点</h2><p><code>autograd</code>包在自动求导时，需要考虑以下事项：</p><ul><li>创建叶子结点的<code>Tensor</code>,使用<code>requires_grad</code>参数指定是否记录对其的操作，以便之后利用<code>backward</code>函数求解。<code>requires_grad</code>参数默认为<code>False</code>，当其为<code>True</code>时，与这个节点相依赖的其他节点也会变成<code>True</code>(这条路径都被污染了)</li><li>通过<code>requires_grad_()</code>方法修改<code>Tensor</code>汇总的<code>requires_grad</code>属性，可以调用<code>.detach()</code>或者<code>with torch.no_grad()</code>不再计算张量的梯度，便于进行评估、测试模型。</li><li>通过运算创建的非叶子结点，会被自动赋予<code>grad_fn</code>属性，表示梯度函数，叶子结点的<code>grad_fn</code>为<code>None</code></li><li>对最后得到的<code>Tensor</code>执行<code>backward</code>函数(反向传播中作为根节点)，会自动计算各变量的梯度，并将累加结果放在<code>grad</code>属性中，当计算完成后，非叶子结点的<code>grad</code>属性会被自动释放</li><li><code>backward</code>函数接收参数，该参数应该与调用该函数的<code>Tensor</code>维度相同，或者是可以广播的维度。如果求导的<code>Tensor</code>是一个标量，<code>backward</code>中的参数可以省略掉</li><li>反向传播的中间缓存会被清空，如果需要进行多次传播，需要指定函数中的参数<code>retain_graph</code>为<code>True</code>。在多次反向传播过程中，梯度是累加的。</li><li>非叶子结点的梯度在被<code>backward()</code>函数调用后就会被清空。</li><li>可以通过<code>torch.no_grad()</code>包裹代码块来阻止<code>autograd</code>去跟踪哪些标记为<code>.requesgrad=True</code>的张量的历史记录。</li></ul><hr><h2 id="1-2-计算图">1.2  计算图</h2><p>在整个过程中，<code>PyTorch</code>采用计算图的形式进行组织，该计算图为动态图，它的计算图在每次正向传播过程中都将重新构建。而其他的架构(TF是后面才引进的)，一般都是静态图。</p><p>计算图是一种有向无环图(DAG)，用来表示算子与变量之间的关系，直观且高效。</p><p>一般来说，圆形表示变量，矩形表示算子。例如表达式<code>z=wx+b</code>，变量为<code>x, w, b</code>，这些变量是用户所创建的，不依赖于其他变量，因此是叶子结点。该表达式的计算图如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph BT;</span><br><span class="line">id1((dz))--&gt;id2[addBackward]</span><br><span class="line">id2--&gt;id3((db))</span><br><span class="line">id2--&gt;id4((dy))</span><br><span class="line">id4--&gt;id5[mulBackward]</span><br><span class="line">id5--&gt;id6((dx))</span><br><span class="line">id5--&gt;id7((dw))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">i1((x))--&gt;o1[mul]</span><br><span class="line">i2((w))--&gt;o1</span><br><span class="line">o1--&gt;i3((y))</span><br><span class="line">i4((b))--&gt;o2[add]</span><br><span class="line">i3--&gt;o2</span><br><span class="line">o2--&gt;i5((z))</span><br></pre></td></tr></table></figure><p><img src="/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/image-20230319231749030.png" alt="image-20230319231749030"></p><p>在这个过程中，叶子节点为<code>x,w,b</code>，非叶节点为<code>z, y</code>。</p><p>当嗲用<code>backward()</code>函数后，<code>autograd</code>会从根节点<code>z</code>进行反向溯源，并根据链式法则计算每个叶子结点的梯度，并<strong>累加</strong>到<code>grad</code>属性汇总。对于非叶子结点或算子的操作记录在<code>grad_fn</code>中，叶子结点的<code>grad_fn</code>为<code>None</code>。</p><hr><h2 id="1-3-反向传播">1.3  反向传播</h2><blockquote><p>标量反向</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">torch.autograd.backward(tensor,grad_tensors=<span class="literal">None</span>,retain_graph=<span class="literal">None</span>,create_graph=<span class="literal">False</span>,grad_variables=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># tensor 是用于计算的张良</span></span><br><span class="line"><span class="comment"># grad_tensors 是用来计算非标量的梯度，形状需要与tensor保持一致</span></span><br><span class="line"><span class="comment"># retain_graph 重复利用计算图</span></span><br><span class="line"><span class="comment"># create_graph 计算更高阶段梯度</span></span><br></pre></td></tr></table></figure><p>对标量的<code>backward</code>无需指定参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">x=torch.Tensor([<span class="number">2</span>])</span><br><span class="line">w=torch.randn(<span class="number">1</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">b=torch.randn(<span class="number">1</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">y=torch.matmul(w,x)</span><br><span class="line">z=torch.add(y,b)</span><br><span class="line"></span><br><span class="line">z.backward()</span><br><span class="line"><span class="built_in">print</span>(w.grad)</span><br><span class="line"><span class="built_in">print</span>(b.grad)</span><br></pre></td></tr></table></figure><blockquote><p>非标量反向</p></blockquote><p>PyTorch不允许张量对张量求导，需要采用标量对张量进行求导，因此，如果目标张量对一个非标量调用<code>backward</code>，需要传入一个<code>gradient</code>参数，该参数也是张量，形状要跟调用<code>backward</code>的张量相同。</p><p>这个参数负责乘以需要求导参数的雅可比矩阵。</p><p>举个例子，我们有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mn>3</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><mn>3</mn><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=(x_1=2,x_2=3),y=(y_1=x^2_1+3x_2,y_2=x_2^2+2x_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>那么对张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>求雅可比矩阵(一阶偏导)，得到的结果为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">ȷ</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\jmath=\begin{vmatrix}\frac{\partial y_1}{\partial x_1} &amp; \frac{\partial y_1}{\partial x_2}\\\frac{\partial y_2}{\partial x_1}&amp;\frac{\partial y_2}{\partial x_2}\end{vmatrix}=\begin{vmatrix}2x_1&amp;3\\2&amp;2x_2\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.012em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.762em;"><span style="top:-2.566em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.164em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.816em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1816" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z"/></svg></span></span><span style="top:-4.972em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6273em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3178em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1273em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6273em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3178em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1273em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.762em;"><span style="top:-2.566em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.164em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.816em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1816" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z"/></svg></span></span><span style="top:-4.972em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>当<code>x=[2,3]</code>时，有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">ȷ</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><msup><mi mathvariant="normal">ȷ</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\jmath=\begin{vmatrix}4&amp;3\\2&amp;6\end{vmatrix}\\\\\jmath^T=\begin{vmatrix}4&amp;2\\3&amp;6\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0858em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal"></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>由于不支持Tensor对Tensor的求导，所以我们借助额外的向量，将其转化为标量对向量的求导。例如向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">[0,1]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，我们可以得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ȷ</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mn>2</mn><mo separator="true">,</mo><mn>6</mn><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\jmath[1]=[2 ,6]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal"></span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，这表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>求导的梯度。同样，采用向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">[1,0]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>的梯度。</p><p>用个例子看一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x=torch.tensor([[<span class="number">2</span>,<span class="number">3</span>]],dtype=torch.<span class="built_in">float</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">j=torch.zeros(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">y=torch.zeros(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">y[<span class="number">0</span>,<span class="number">0</span>]=x[<span class="number">0</span>][<span class="number">0</span>]**<span class="number">2</span>+<span class="number">3</span>*x[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">y[<span class="number">0</span>,<span class="number">1</span>]=x[<span class="number">0</span>][<span class="number">1</span>]**<span class="number">2</span>+<span class="number">2</span>*x[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算y_1梯度</span></span><br><span class="line">y.backward(torch.Tensor([[<span class="number">1</span>,<span class="number">0</span>]]),retain_graph=<span class="literal">True</span>) <span class="comment"># 不释放图，咱等会还要用</span></span><br><span class="line">j[<span class="number">0</span>]=x.grad</span><br><span class="line">x.grad=torch.zeros_like(x.grad)</span><br><span class="line"></span><br><span class="line">y.backward(torch.Tensor([[<span class="number">0</span>,<span class="number">1</span>]]))</span><br><span class="line">j[<span class="number">1</span>]=x.grad</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(j)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor([[4., 3.],</span></span><br><span class="line"><span class="string">        [2., 6.]])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><hr><h2 id="1-4-生命周期">1.4  生命周期</h2><img src="/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/image-20230323200359329.png" alt="image-20230323200359329" style="zoom:50%;"><hr><h2 id="1-5-切断分支的反向传播">1.5  切断分支的反向传播</h2><p>训练过程中，有时候我们想保持一部分的网络参数不变，而支队其中一部分的参数进行调整，只训练部分分支，那么这时候就可以通过<code>detach()</code>函数来切断一些分支的反向传播。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">detach_()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将节点设置为叶子，requires_grad=False grad_fn=None</span></span><br></pre></td></tr></table></figure><p>这个怎么说呢，比如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">y=x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi>y</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">z=yx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">x</span></span></span></span>，此时我们想把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>视为常数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>，也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial x}=c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>，可以用以下的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x=torch.ones(<span class="number">2</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">y=x**<span class="number">2</span>+<span class="number">3</span></span><br><span class="line">c=y.detach_()</span><br><span class="line">z=y*x</span><br><span class="line">z.<span class="built_in">sum</span>().backward()</span><br><span class="line"><span class="built_in">print</span>(x.grad==c)</span><br><span class="line"><span class="built_in">print</span>(x.grad)</span><br><span class="line"></span><br><span class="line">tensor([<span class="literal">True</span>, <span class="literal">True</span>])</span><br><span class="line">tensor([<span class="number">4.</span>, <span class="number">4.</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果我们不用detach，得到的结果就应该是：<code>3*2+3=6</code>了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x=torch.ones(<span class="number">2</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">y=x**<span class="number">2</span>+<span class="number">3</span></span><br><span class="line"><span class="comment"># c=y.detach_()</span></span><br><span class="line">z=y*x</span><br><span class="line">z.<span class="built_in">sum</span>().backward()</span><br><span class="line"><span class="built_in">print</span>(x.grad)</span><br><span class="line"></span><br><span class="line">tensor([<span class="number">6.</span>, <span class="number">6.</span>])</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">PyTorch自动求导</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PyTorch" scheme="http://example.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>Pandas写入多个Sheet以及np.mat用法</title>
    <link href="http://example.com/2023/02/08/%E3%80%90Python%E3%80%91%E5%90%8C%E6%97%B6%E5%A1%AB%E5%85%A5SheetName/"/>
    <id>http://example.com/2023/02/08/%E3%80%90Python%E3%80%91%E5%90%8C%E6%97%B6%E5%A1%AB%E5%85%A5SheetName/</id>
    <published>2023-02-07T16:01:03.170Z</published>
    <updated>2023-02-07T16:06:54.764Z</updated>
    
    <content type="html"><![CDATA[<p>原生的<code>pd.to_excel</code>会覆写，我们需要用到<code>pd.ExcelWriter</code>。</p><p>like：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> pd.ExcelWriter(p,mode=<span class="string">&quot;a&quot;</span>,engine=<span class="string">&quot;openpyxl&quot;</span>) <span class="keyword">as</span> writer:</span><br><span class="line">    df=[pd.DataFrame(i) <span class="keyword">for</span> i <span class="keyword">in</span> Record_List]</span><br><span class="line">    <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(years):</span><br><span class="line">        df[i].to_excel(writer,sheet_name=<span class="built_in">str</span>(j))</span><br></pre></td></tr></table></figure><p>当然，在之前必须保证这个文件的存在。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pandas.core.frame <span class="keyword">import</span> DataFrame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># urban_pop,rural_pop,NF,CF为m*1矩阵,</span></span><br><span class="line"><span class="comment"># urban_prot,rural_pop,ncf,Redi为数值,</span></span><br><span class="line"><span class="comment"># AN,WP,CP,CA为m*n矩阵,</span></span><br><span class="line"><span class="comment"># ANI,ANI,ANO,PW,NF,PC为n*1矩阵。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">caculate_NANI</span>(<span class="params">urban_pop,rural_pop,urban_prot,rural_prot,AN,ANI,ANO,Redi,CP,PC,NF,CF,rN,CA,Ndep</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Map</span>(<span class="params">x</span>):</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">float</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">    Nhc = urban_pop.T*urban_prot+rural_pop.T*rural_prot</span><br><span class="line">    Nlc = np.dot(AN*(<span class="number">10e5</span>), ANI)</span><br><span class="line">    Nlp = np.dot(AN*(<span class="number">10e5</span>), (ANI-ANO))*Redi</span><br><span class="line">    Ncp = np.dot(CP*(<span class="number">10e5</span>), PC)</span><br><span class="line">    Nfer = N*(<span class="number">10e5</span>) + CF*(<span class="number">10e5</span>)*rN</span><br><span class="line">    Ncro = np.dot(CA*<span class="number">10</span>, NF)</span><br><span class="line">    Nim = Nhc + Nlc - Nlp - Ncp</span><br><span class="line">    NANI = Nim+Nfer+Ncro+Ndep</span><br><span class="line">    <span class="keyword">return</span> NANI,&#123;<span class="string">&quot;Nhc&quot;</span>:<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="built_in">float</span>(x),Nhc)),<span class="string">&quot;Nlc&quot;</span>:<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="built_in">float</span>(x),Nlc)),</span><br><span class="line">                 <span class="string">&quot;Nlp&quot;</span>:Map(Nlp),<span class="string">&quot;Ncp&quot;</span>:Map(Ncp),<span class="string">&quot;Nfer&quot;</span>:Map(Nfer),<span class="string">&quot;Ncro&quot;</span>:Map(Ncro),<span class="string">&quot;Nim&quot;</span>:Map(Nim),<span class="string">&quot;NANI&quot;</span>:Map(NANI)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    years = [<span class="number">1990</span>, <span class="number">2000</span>, <span class="number">2010</span>, <span class="number">2020</span>]</span><br><span class="line">    <span class="comment"># years = [1990,2000]</span></span><br><span class="line">    root = <span class="string">r&#x27;C:\Users\lenovo\Documents\Tencent Files\651421775\FileRecv\新建文件夹 (2)\\&#x27;</span>  <span class="comment"># 数据存放目录路径</span></span><br><span class="line">    Record_path=<span class="string">r&quot;G:\\&quot;</span> <span class="comment"># 中间变量输出位置</span></span><br><span class="line">    file_paths = [os.path.join(root,<span class="built_in">str</span>(i))+<span class="string">&quot;.xlsx&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> years]</span><br><span class="line">    all_list = []</span><br><span class="line">    urban_prot = <span class="number">4.77</span></span><br><span class="line">    rural_prot = <span class="number">4.31</span></span><br><span class="line">    Redi = <span class="number">0.9</span></span><br><span class="line">    rN = <span class="number">0.1285</span></span><br><span class="line">    ANI = np.mat([<span class="number">66.75</span>, <span class="number">44.80</span>, <span class="number">18.00</span>, <span class="number">18.00</span>, <span class="number">9.5</span>, <span class="number">14.5</span>, <span class="number">14.4</span>]).T</span><br><span class="line">    ANO = np.mat([<span class="number">58.51</span>, <span class="number">40.00</span>, <span class="number">15.15</span>, <span class="number">9.59</span>, <span class="number">7.21</span>, <span class="number">5.69</span>, <span class="number">5.69</span>]).T</span><br><span class="line">    PC = np.mat([<span class="number">12.6</span>, <span class="number">21.3</span>, <span class="number">13.0</span>, <span class="number">66.2</span>, <span class="number">2.0</span>, <span class="number">39.7</span>, <span class="number">12.2</span>, <span class="number">2.8</span>, <span class="number">1.5</span>, <span class="number">1.8</span>]).T</span><br><span class="line">    NF = np.mat([<span class="number">3700</span>, <span class="number">9600</span>, <span class="number">8000</span>, <span class="number">1500</span>, <span class="number">1500</span>]).T</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(p:=(Record_path+<span class="string">&quot;process.xlsx&quot;</span>)):</span><br><span class="line">        os.remove(p)</span><br><span class="line"></span><br><span class="line">    pd.DataFrame([]).to_excel(p)</span><br><span class="line">    Record_List=[]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(file_paths)):</span><br><span class="line"></span><br><span class="line">        data = pd.read_excel(file_paths[i])</span><br><span class="line">        urban_pop, rural_pop = np.mat(data[<span class="string">&#x27;城镇人口&#x27;</span>]), np.mat(data[<span class="string">&#x27;农村人口&#x27;</span>])</span><br><span class="line">        AN, CP, CA = np.mat(data.values[:, <span class="number">4</span>:<span class="number">11</span>]), np.mat(data.values[:, <span class="number">11</span>:<span class="number">21</span>]), np.mat(data.values[:, <span class="number">23</span>:<span class="number">28</span>])</span><br><span class="line">        N = np.mat(data[<span class="string">&#x27;氮肥&#x27;</span>]).T</span><br><span class="line">        CF = np.mat(data[<span class="string">&#x27;复合肥&#x27;</span>]).T</span><br><span class="line">        Ndep = np.mat(data[<span class="string">&#x27;大气氮沉降&#x27;</span>]).T</span><br><span class="line">        NANI,Record = caculate_NANI(urban_pop,rural_pop,urban_prot,rural_prot,AN,ANI,ANO,Redi,CP,PC,NF,CF,rN,CA,Ndep)</span><br><span class="line">        NANI_list=[<span class="built_in">float</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> NANI]</span><br><span class="line">        Record_List.append(Record)</span><br><span class="line">        all_list.append(NANI_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> pd.ExcelWriter(p,mode=<span class="string">&quot;a&quot;</span>,engine=<span class="string">&quot;openpyxl&quot;</span>) <span class="keyword">as</span> writer:</span><br><span class="line">        df=[pd.DataFrame(i) <span class="keyword">for</span> i <span class="keyword">in</span> Record_List]</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(years):</span><br><span class="line">            df[i].to_excel(writer,sheet_name=<span class="built_in">str</span>(j))</span><br><span class="line"></span><br><span class="line">    df_data = &#123;<span class="string">&quot;省域&quot;</span>: <span class="built_in">list</span>(data[<span class="string">&#x27;省域&#x27;</span>]), <span class="string">&quot;1990&quot;</span>: all_list[<span class="number">0</span>], <span class="string">&quot;2000&quot;</span>: all_list[<span class="number">1</span>], <span class="string">&quot;2010&quot;</span>: all_list[<span class="number">2</span>], <span class="string">&quot;2020&quot;</span>: all_list[<span class="number">3</span>]&#125;</span><br><span class="line">    df = DataFrame(df_data)</span><br><span class="line">    df.to_excel(<span class="string">r&quot;G:\new.xlsx&quot;</span>)  <span class="comment"># 保存结果路径</span></span><br></pre></td></tr></table></figure><p>Numpy的矩阵乘法用于处理数据时，一般是这样操作：</p><ul><li>读取列<code>A=np.mat(data.values[:,5:15])</code></li><li>写入权重或者对应矩阵<code>w=[i for i in range(10)]</code></li><li>做矩阵乘法<code>np.dot(A,w.T)</code>，也就是<code>Aw=b</code></li><li>这样每一列都被乘上了权重。</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Pandas写入多个Sheet以及np.mat用法</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Typora】绘制流程图</title>
    <link href="http://example.com/2023/02/03/%E3%80%90Typora%E3%80%91SVG%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%94%BB%E6%B3%95/"/>
    <id>http://example.com/2023/02/03/%E3%80%90Typora%E3%80%91SVG%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%94%BB%E6%B3%95/</id>
    <published>2023-02-03T04:49:52.988Z</published>
    <updated>2023-03-23T07:53:59.219Z</updated>
    
    <content type="html"><![CDATA[<p>说是画图，但并不像其他专业的绘图软件那样，通过拖拖拽拽一些元素，画出流程图、<a href="https://so.csdn.net/so/search?q=%E6%97%B6%E5%BA%8F%E5%9B%BE&amp;spm=1001.2101.3001.7020">时序图</a>等。Typora 的制图功能是由 Mermaid 强力驱动，如果你使用过 PlantUML，那么 Mermaid 也非常容易上手。</p><h3 id="Mermaid"><strong>Mermaid</strong></h3><p><strong>Mermaid[1]</strong> 是一种简单的类似 Markdown 的脚本语言，通过 JavaScript 编程语言，将文本转换为图片。因此，真正实现画图功能的并不是 Typora 本身，它只是内置了对 Mermaid 的支持。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ef6bb6e35dd37db59166f9a8539abccf.png" alt="ef6bb6e35dd37db59166f9a8539abccf.png"></p><p>Mermaid 支持绘制非常多种类的图，常见的有时序图、流程图、类图、甘特图等等。下面分享一下如何绘制这些图，语法非常容易掌握。</p><p>先在 Typora 中，输入 <strong>```mermaid</strong> 然后敲击回车，即可初始化一张空白图。</p><h3 id="流程图"><strong>流程图</strong></h3><p>语法解释：<code>graph</code> 关键字就是声明一张流程图，<code>TD</code> 表示的是方向，这里的含义是 Top-Down 由上至下。</p><table><thead><tr><th style="text-align:center">Key</th><th style="text-align:center">Direction</th></tr></thead><tbody><tr><td style="text-align:center">TB</td><td style="text-align:center">from Top to Bottom</td></tr><tr><td style="text-align:center">BT</td><td style="text-align:center">from Bottom to Top</td></tr><tr><td style="text-align:center">RL</td><td style="text-align:center">from Right to Left</td></tr><tr><td style="text-align:center">LR</td><td style="text-align:center">from Left to Right</td></tr></tbody></table><p><strong>节点形状</strong></p><table><thead><tr><th style="text-align:center">节点形状</th><th style="text-align:center">如何添加</th></tr></thead><tbody><tr><td style="text-align:center">矩形节点</td><td style="text-align:center">A[Description]</td></tr><tr><td style="text-align:center">圆角矩形</td><td style="text-align:center">A(Description)</td></tr><tr><td style="text-align:center">圆形节点</td><td style="text-align:center">A((Description))</td></tr><tr><td style="text-align:center">右向旗帜/非对称</td><td style="text-align:center">A&gt;Description]</td></tr><tr><td style="text-align:center">菱形节点</td><td style="text-align:center">E{Description}</td></tr></tbody></table><p><strong>节点间连线</strong></p><table><thead><tr><th style="text-align:center">形状</th><th style="text-align:center">格式</th></tr></thead><tbody><tr><td style="text-align:center">— 或 --&gt;</td><td style="text-align:center">单线</td></tr><tr><td style="text-align:center">–文本— 或 --文本–&gt;</td><td style="text-align:center">单线文字</td></tr><tr><td style="text-align:center">===或==&gt;</td><td style="text-align:center">粗线</td></tr><tr><td style="text-align:center">==text=== 或==text==&gt;</td><td style="text-align:center">粗线文字</td></tr><tr><td style="text-align:center">-.- 或-.-&gt;</td><td style="text-align:center">虚线</td></tr><tr><td style="text-align:center">-.text- 或-.text.-&gt;</td><td style="text-align:center">虚线文字</td></tr></tbody></table><p><strong>子图表</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subgraph 子图表名称</span><br><span class="line">    子图表中的描述语句...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    id1(圆角矩形)--普通线--&gt;id2[矩形]</span><br><span class="line">    subgraph 子图表名称</span><br><span class="line">        id2==粗线==&gt;id3&#123;菱形&#125;</span><br><span class="line">        id3-.虚线.-&gt;id4&gt;右向旗帜]</span><br><span class="line">        id3--无箭头---id5((圆形))</span><br><span class="line">        id3--有箭头---&gt;id6((你好))</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    A--&gt;C;</span><br><span class="line">    B--&gt;D;</span><br><span class="line">    D==&gt;A;</span><br></pre></td></tr></table></figure><h3 id="时序图"><strong>时序图</strong></h3><p>语法解释：<code>-&gt;&gt;</code> 代表实线箭头，<code>--&gt;&gt;</code> 则代表虚线。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line"></span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    </span><br><span class="line">    Alice--&gt;&gt;Tom: Hey</span><br></pre></td></tr></table></figure><h3 id="状态图"><strong>状态图</strong></h3><p>语法解释：<code>[*]</code> 表示开始或者结束，如果在箭头右边则表示结束。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stateDiagram</span><br><span class="line"></span><br><span class="line">    [*] --&gt; s1</span><br><span class="line">    s1 --&gt; [*]</span><br></pre></td></tr></table></figure><h3 id="类图"><strong>类图</strong></h3><p>语法解释：<code>&lt;|--</code> 表示继承，<code>+</code> 表示 <code>public</code>，<code>-</code> 表示 <code>private</code>，学过 Java 的应该都知道。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line"></span><br><span class="line">      Animal &lt;|-- Duck</span><br><span class="line"></span><br><span class="line">      Animal &lt;|-- Fish</span><br><span class="line">      Animal &lt;|-- Zebra</span><br><span class="line">      Animal : +int age</span><br><span class="line">      Animal : +String gender</span><br><span class="line">      Animal: +isMammal()</span><br><span class="line">      Animal: +mate()</span><br><span class="line"></span><br><span class="line">      class Duck&#123;</span><br><span class="line">          +String beakColor</span><br><span class="line">          +swim()</span><br><span class="line">          +quack()</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      class Fish&#123;</span><br><span class="line">          -int sizeInFeet</span><br><span class="line">          -canEat()</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      class Zebra&#123;</span><br><span class="line">          +bool is_wild</span><br><span class="line">          +run()</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="甘特图"><strong>甘特图</strong></h3><p>甘特图一般用来表示项目的计划排期，目前在工作中经常会用到。</p><p>语法也非常简单，从上到下依次是图片标题、日期格式、项目、项目细分的任务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line"></span><br><span class="line">    title 工作计划</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    section Section</span><br><span class="line">    A task           :a1, 2020-01-01, 30d</span><br><span class="line">    Another task     :after a1  , 20d</span><br><span class="line">    section Another</span><br><span class="line">    Task in sec      :a2,2020-01-12  , 12d</span><br><span class="line">    another task      :a3,2020-01-14,24d</span><br></pre></td></tr></table></figure><h3 id="饼图"><strong>饼图</strong></h3><p>饼图使用 <code>pie</code> 表示，标题下面分别是区域名称及其百分比。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    title Key elements in Product X</span><br><span class="line">    &quot;Calcium&quot; : 42.96</span><br><span class="line">    &quot;Potassium&quot; : 50.05</span><br><span class="line">    &quot;Magnesium&quot; : 10.01</span><br><span class="line">    &quot;Iron&quot; :  5</span><br></pre></td></tr></table></figure><h3 id="导出"><strong>导出</strong></h3><p>绘制好的图片可以选择菜单/文件/导出，导出为图片或者网页格式。在网页中图片是以 SVG 格式渲染的，你可以复制 SVG 内容，导入到 SVG 的图片编辑器中进一步操作。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1066ef81c868ffaad8bc991d781e0cb0.png" alt="1066ef81c868ffaad8bc991d781e0cb0.png"></p><p>Mermaid 官方有一个在线的工具，可以导出 SVG 和 PNG。</p><p>Mermaid live <a href="http://editormermaid-js.github.io">editormermaid-js.github.io</a></p><h3 id="Flow语法绘制流程图">Flow语法绘制流程图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Typora绘制流程图</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>Git入门到精通</title>
    <link href="http://example.com/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/"/>
    <id>http://example.com/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/</id>
    <published>2023-02-01T17:31:35.577Z</published>
    <updated>2023-04-23T08:23:27.568Z</updated>
    
    <content type="html"><![CDATA[<h1>Chapter 1. Git 概述</h1><p>Git 是一个<strong>开源分布式版本控制工具</strong>，其特点有：</p><ul><li>占地面积小</li><li>易于学习</li><li>性能极快</li></ul><p>GIt具有廉价的本地库，方便的暂存区域和多个工作流分支等特性，其性能优于Subversion、CVS等版本控制工具。</p><h2 id="1-1-版本控制">1.1 版本控制</h2><p>所谓版本控制，就是<strong>记录文件内容变化</strong>，以便将来查阅特定版本修订情况的系统。</p><blockquote><p>就是相当于文档的存档点啦</p></blockquote><p>其最重要的内容在于可以记录文件修改的<strong>历史记录</strong>，让用户查看历史版本，方便版本切换。</p><blockquote><p>方便由单打独斗转换到团队协作</p></blockquote><h2 id="1-2-版本控制工具">1.2  版本控制工具</h2><p>⭐ <strong>集中式版本控制工具</strong></p><p>例如CVS、SVN，都有一个单一的集中管理的服务器，保存所有文件的修订版本，用户想要修改文件呢，就需要先用客户端连接到服务器，取出文件来更新。</p><p>这种方式的好处在于：</p><ul><li>工作可视化(每个人都能看到别人在做啥)</li><li>吧管控权限(管理员)</li><li>更容易维护</li></ul><p>缺点在于：</p><ul><li>服务器容易炸，炸了就干不了活，赚不了钱</li></ul><p>🌟 <strong>分布式版本控制工具</strong></p><p>例如Git、Darcs、Bazaar等，客户端提取的不是最新版本的文件快照，而是将代码仓库完整地镜像下来。这样无论那一处的文件发生故障，事后都可以用其他客户端的本地仓库进行恢复。</p><p>相较于集中式版本控制工具，其又是在于：</p><ul><li>断网情况也可以进行开发(版本控制是在本地进行的，Git登录页面： everything-is-local)</li><li>每个客户端保存的也是整个完整的项目</li></ul><h2 id="1-3-Git简史">1.3  Git简史</h2><p>开发者：Linus(也是Linux的开发者)，2005年用C语言开发了这个版本控制系统。2008年GitHub上线。</p><h2 id="1-4-Git工作机制">1.4  Git工作机制</h2><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202020631353.png" alt="image-20230202020631353" style="zoom:50%;"><p>历史版本是没办法删除的，这是因为下一个版本是依托于上一个版本生成的。</p><h2 id="1-5-Git和代码托管中心">1.5  Git和代码托管中心</h2><p>代码托管中心是基于网络服务器的远程代码仓库，一般称为远程库。</p><p><strong>局域网</strong></p><ul><li>GitLab</li></ul><p><strong>互联网</strong></p><ul><li>GitHub</li><li>Gitee</li></ul><hr><h1>Chapter 2.  Git 安装</h1><p>略</p><hr><h1>Chapter 3. GIt 常用命令</h1><table><thead><tr><th style="text-align:center">命令名称</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">git config --global <a href="http://user.name">user.name</a> 用户名</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git config --global user.email 邮箱</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git init</td><td style="text-align:center">初始化本地库</td></tr><tr><td style="text-align:center">git status</td><td style="text-align:center">查看本地库状态</td></tr><tr><td style="text-align:center">git add 文件名</td><td style="text-align:center">添加到暂存区</td></tr><tr><td style="text-align:center">git commit -m “日志信息” 文件名</td><td style="text-align:center">提交到本地库</td></tr><tr><td style="text-align:center">git reflog</td><td style="text-align:center">查看历史记录</td></tr><tr><td style="text-align:center">git reset --hard 版本号</td><td style="text-align:center">版本穿梭</td></tr></tbody></table><h2 id="3-1-设置用户签名">3.1  设置用户签名</h2><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202110415257.png" alt="image-20230202110415257" style="zoom:50%;"><h2 id="3-2-初始化本地库">3.2  初始化本地库</h2><blockquote><p>在对应项目文件夹下，使用 git init</p></blockquote><p>查看本地库的状态，只需要使用：</p><blockquote><p>git status</p></blockquote><p>我们新增一个文件后再查看本地库状态：</p><blockquote><p>vim hello.txt</p></blockquote><p>vim 是一款文本编辑器，这样能生成一个新的文本文件。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202111837307.png" alt="image-20230202111837307" style="zoom:50%;"><p>这个意思表示，该文件现在仅放在工作区，还没有被追踪过。那么按照之前的思路，应该将这个文件添加到暂存区了。</p><p>我们使用命令：</p><blockquote><p>git add hello.txt</p></blockquote><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202112302182.png" alt="image-20230202112302182" style="zoom:50%;"><p>此时，已经放到暂存区了，可以被Git追踪到。</p><p>我们可以删掉暂存区的文件，但对工作区和本地库没有影响：</p><blockquote><p>$ git rm --cached hello.txt</p></blockquote><p>那最后呢，也就是操作的最后一步，我们需要提交到本地库。</p><blockquote><p>$ git commit -m “My first version” hello.txt</p></blockquote><p>该命令原始的格式是：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;日志信息&quot; 文件名</span><br></pre></td></tr></table></figure><p>如果成功提交了，那么会显示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[master (root-commit) 6bf530b] My first version</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">8</span> insertions(+)</span><br><span class="line"> create mode <span class="number">100644</span> hello.txt</span><br></pre></td></tr></table></figure><p>这个七位字符码 6bf530b 就是控制的版本号。</p><p>我们可以再次查看本地库的状态。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202113511221.png" alt="image-20230202113511221" style="zoom:50%;"><p>查看版本信息：</p><blockquote><p>git reflog 版本信息</p><p>git log 详细信息</p></blockquote><h2 id="3-3-修改文件">3.3  修改文件</h2><p>如果我们这时候修改了文件信息，这时候再次查看本地库状态，会提示文件被修改过。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes <span class="keyword">not</span> staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   hello.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><p>那还是三板斧，我们把他提交到本地库。</p><p>那来查看下日志信息吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">267de41 (HEAD -&gt; master) HEAD@&#123;<span class="number">0</span>&#125;: commit: Second <span class="comment"># head是指针</span></span><br><span class="line">6bf530b HEAD@&#123;<span class="number">1</span>&#125;: commit (initial): My first version</span><br></pre></td></tr></table></figure><p>git的运作方式是比对两个版本的异同，对行直接进行增加或是删除。</p><p>其底层的机制在于移动指针。</p><h2 id="3-4-版本穿梭">3.4  版本穿梭</h2><p>一般来说，我们先用命令<code>git reflog</code>获取版本信息，然后再用命令：</p><blockquote><p>git reset --hard Ver.</p></blockquote><p>穿越版本。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard  6bf530b</span><br><span class="line">HEAD <span class="keyword">is</span> now at 6bf530b My first version</span><br></pre></td></tr></table></figure><p>可以发现，指针已经被移动了。</p><p>我们也可以在日志上看到这步的操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6bf530b (HEAD -&gt; master) HEAD@&#123;<span class="number">0</span>&#125;: reset: moving to 6bf530b</span><br><span class="line">267de41 HEAD@&#123;<span class="number">1</span>&#125;: commit: Second</span><br><span class="line">6bf530b (HEAD -&gt; master) HEAD@&#123;<span class="number">2</span>&#125;: commit (initial): My first version</span><br></pre></td></tr></table></figure><p>此时查看文件，发现已经发生了版本变化。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202115218012.png" alt="image-20230202115218012" style="zoom:67%;"><p>指针信息记录在.git文件夹里，一个是指向文件夹的指针，一个是指向版本的指针。</p><hr><h1>Chapter 4. Git 分支操作</h1><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202140252357.png" alt="image-20230202140252357" style="zoom:50%;"><p>上面这张图：一个分支用来开发，一个分支用来测试，一个分支用来使用。Be like 镜像副本</p><h2 id="4-1-什么是分支">4.1  什么是分支</h2><p>在版本控制过程汇总，有时候需要同时推进多个任务，可以为每个任务创建单独的分支，这意味着每个组开发自己的功能的时候，不会影响到主线分支的运行。</p><blockquote><p>实际上分支底层也是指针的引用。</p></blockquote><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202140901961.png" alt="image-20230202140901961" style="zoom:50%;"><p>可以发现，各个功能的分支都是从主线分支引用出去，当开发完成时，又会合并到主线分支。</p><h2 id="4-2-分支的好处">4.2  分支的好处</h2><ul><li>同时并行推进开发多个功能，提高工作效率</li><li>各个分支在开发过程中，如果某个分支开发失败，并不会导致其他分支出现问题。</li></ul><h2 id="4-3-分支的操作">4.3  分支的操作</h2><table><thead><tr><th style="text-align:center">命令名称</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">git branch 分支名</td><td style="text-align:center">创建分支</td></tr><tr><td style="text-align:center">git branch -v</td><td style="text-align:center">查看分支</td></tr><tr><td style="text-align:center">git checkout 分支名</td><td style="text-align:center">切换分支</td></tr><tr><td style="text-align:center">git merge 分支名</td><td style="text-align:center">将指定分支合并到当前分支上</td></tr></tbody></table><h3 id="4-3-1-查看分支">4.3.1  查看分支</h3><p>我们使用语句</p><blockquote><p>git branch -v</p></blockquote><p>查看分支：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -v</span><br><span class="line">* master 267de41 Second</span><br></pre></td></tr></table></figure><h3 id="4-3-2-创建分支">4.3.2  创建分支</h3><p>使用代码：</p><blockquote><p>git branch 分支名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch hotfix</span><br><span class="line">git branch -v</span><br><span class="line"></span><br><span class="line">  hotfix 267de41 Second</span><br><span class="line">* master 267de41 Second</span><br></pre></td></tr></table></figure><h3 id="4-3-3-修改和切换分支">4.3.3  修改和切换分支</h3><p>切换分支的话，我们使用语句：</p><blockquote><p>git checkout 分支名</p></blockquote><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202150649367.png" alt="image-20230202150649367" style="zoom:50%;"><p>注意别把branch打进去了！</p><p>在分支上修改后，还是三板斧放进去。本质上Git的版本控制还是通过底层指针进行的。</p><h3 id="4-3-4-合并分支">4.3.4  合并分支</h3><p>我们先切换回<code>Master</code>分支，不难发现，这个文档回到了没有修改前的样子。</p><p>那我们现在试着把之前的修改合并上去。</p><p>注意，要在某个分支上合并其他分支，必须用指针指向当前分支。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git merge hotfix</span><br><span class="line">Updating 267de41.<span class="number">.00</span>bea41</span><br><span class="line">Fast-forward</span><br><span class="line"> hello.txt | <span class="number">1</span> +</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">1</span> insertion(+)</span><br></pre></td></tr></table></figure><p>此时，已经完成了分支合并。我们来查看下文件，发现<code>hello.txt</code>已经变成了hotfix的模样</p><h3 id="4-3-5-合并分支">4.3.5  合并分支</h3><p>合并分支时，两个分支如果在同一个文件同一个位置有两套完全不同的修改，Git无法决定使用哪一个，必须人为决定新代码的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git merge hotfix</span><br><span class="line">Auto-merging hello.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> hello.txt</span><br><span class="line">Automatic merge failed; fix conflicts <span class="keyword">and</span> then commit the result.</span><br></pre></td></tr></table></figure><p>那怎么办呢？</p><p>打开文件，发现Git给我们标出来冲突的代码了：</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202153343351.png" alt="image-20230202153343351" style="zoom:50%;"><p>我们重新修改后提交，注意，这时候！</p><p>对于冲突文件，不再需要文件名！！</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202153942669.png" alt="image-20230202153942669" style="zoom:50%;"><p>此时状态已经从Meging转化为常态了。</p><p>对于分支HotFix，是不会修改的。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202154216255.png" alt="image-20230202154216255" style="zoom:50%;"><p>master、hotfix实际上都是指向具体版本记录的指针，当前用户所在的分支则是由<code>Head</code>所决定的。</p><hr><h1>Chapter 5. Git 团队协作机制</h1><p>团队协作依托于远程库</p><p>团队内合作</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202190033989.png" alt="image-20230202190033989" style="zoom:50%;"><p>多团队合作</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202190131225.png" alt="image-20230202190131225" style="zoom:50%;"><p>名词解释：</p><ul><li><code>pull</code> 拉取，对更新后的代码进行修正</li><li><code>push</code> 推送，从本地库到远程库</li><li><code>clone</code> 克隆，获取远程库副本</li><li><code>fork</code> 叉子，从一个远程库拷贝到另一个远程库</li></ul><hr><h1>Chaptert 6.  GitHub操作</h1><p>在GitHub中创建一个远程仓库后，我们就可以对远程库进行操作啦。</p><h2 id="仓库别名">仓库别名</h2><p>主要是为了便捷操作，我们可以为我们的仓库创建一个别名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote -v <span class="comment"># 查看当前所有远程地址别名</span></span><br><span class="line">git remote add 别名 远程地址 <span class="comment"># 为其添加别名</span></span><br><span class="line">git remote <span class="built_in">set</span>-url 别名 Url <span class="comment"># 设置新地址</span></span><br></pre></td></tr></table></figure><p>我们现在在https://github.com/Torture03/GitDemo.git上创建了一个空白仓库，试着为其添加一个别名吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add git-demo https://github.com/Torture03/GitDemo.git</span><br></pre></td></tr></table></figure><p>接着可以查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">Torture  (fetch)</span><br><span class="line">Torture  (push)</span><br><span class="line">git-demo        https://github.com/Torture03/GitDemo.git (fetch)</span><br><span class="line">git-demo        https://github.com/Torture03/GitDemo.git (push)</span><br></pre></td></tr></table></figure><p>一个是push别名，另一个是clone别名。</p><h2 id="推送远程库">推送远程库</h2><p>下面我们来将本地仓库推送到远程库。</p><blockquote><p>git push 别名 分支</p></blockquote><p>我们当前的本地库有两个分支，这里需要选择分支进行推送。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ git push Git-Demo_C master</span><br><span class="line"></span><br><span class="line">warning: ----------------- SECURITY WARNING ----------------</span><br><span class="line">warning: | TLS certificate verification has been disabled! |</span><br><span class="line">warning: ---------------------------------------------------</span><br><span class="line">warning: HTTPS connections may <span class="keyword">not</span> be secure. See https://aka.ms/gcm/tlsverify <span class="keyword">for</span> more information.</span><br><span class="line">warning: ----------------- SECURITY WARNING ----------------</span><br><span class="line">warning: | TLS certificate verification has been disabled! |</span><br><span class="line">warning: ---------------------------------------------------</span><br><span class="line">warning: HTTPS connections may <span class="keyword">not</span> be secure. See https://aka.ms/gcm/tlsverify <span class="keyword">for</span> more information.</span><br><span class="line">Enumerating objects: <span class="number">21</span>, done.</span><br><span class="line">Counting objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), done.</span><br><span class="line">Delta compression using up to <span class="number">16</span> threads</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">14</span>/<span class="number">14</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), <span class="number">1.56</span> KiB | <span class="number">799.00</span> KiB/s, done.</span><br><span class="line">Total <span class="number">21</span> (delta <span class="number">7</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span></span><br><span class="line">remote: Resolving deltas: <span class="number">100</span>% (<span class="number">7</span>/<span class="number">7</span>), done.</span><br><span class="line">To https://github.com/Chen-XiaoLv/Git-Demo.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样，就成功实现了推送。</p><h2 id="拉取远程库">拉取远程库</h2><p>有了推送后，当然要拉取啦</p><blockquote><p>git pull 别名 分支</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git pull Git-Demo_C master</span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: <span class="number">5</span>, done.</span><br><span class="line">remote: Counting objects: <span class="number">100</span>% (<span class="number">5</span>/<span class="number">5</span>), done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">remote: Total <span class="number">3</span> (delta <span class="number">1</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span></span><br><span class="line">Unpacking objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), <span class="number">670</span> <span class="built_in">bytes</span> | <span class="number">74.00</span> KiB/s, done.</span><br><span class="line">From https://github.com/Chen-XiaoLv/Git-Demo</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line">   cacd9ae.<span class="number">.5217</span>c64  master     -&gt; Git-Demo_C/master</span><br><span class="line">Updating cacd9ae.<span class="number">.5217</span>c64</span><br><span class="line">Fast-forward</span><br><span class="line"> hello.txt | <span class="number">3</span> ++-</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">2</span> insertions(+), <span class="number">1</span> deletion(-)</span><br></pre></td></tr></table></figure><p>我们也能在GitHub上看到之前的版本信息。</p><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202203611826.png" alt="image-20230202203611826"></p><h2 id="克隆远程库">克隆远程库</h2><p>前面的pull是基于远程库对本地库的更新，而克隆则是直接搞个新的捏。</p><p>我们新建个文件夹。</p><p>然后需要获取远程库的位置。</p><p>注意的是，如果我们想换个账号，需要在Windows凭据中管理。(Windows只能记录一个账号)</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202210103013.png" alt="image-20230202210103013" style="zoom:50%;"><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202210147853.png" alt="image-20230202210147853" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Chen-XiaoLv/Git-Demo.git</span><br><span class="line">Cloning into <span class="string">&#x27;Git-Demo&#x27;</span>...</span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: <span class="number">27</span>, done.</span><br><span class="line">remote: Counting objects: <span class="number">100</span>% (<span class="number">27</span>/<span class="number">27</span>), done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">11</span>/<span class="number">11</span>), done.</span><br><span class="line">remote: Total <span class="number">27</span> (delta <span class="number">8</span>), reused <span class="number">23</span> (delta <span class="number">7</span>), pack-reused <span class="number">0</span></span><br><span class="line">Receiving objects: <span class="number">100</span>% (<span class="number">27</span>/<span class="number">27</span>), done.</span><br><span class="line">Resolving deltas: <span class="number">100</span>% (<span class="number">8</span>/<span class="number">8</span>), done.</span><br></pre></td></tr></table></figure><p>克隆的话不需要账号。</p><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202211240795.png" alt="image-20230202211240795"></p><p>此时我们可以发现，已经克隆下来了。</p><p><code>clone</code>会做三件事：</p><ul><li>拉取代码</li><li>初始化本地库</li><li>创建别名</li></ul><h2 id="团队内协作">团队内协作</h2><p>如果想要往别人的仓库扔代码，那么就需要团队协作。需要仓库创建者邀请。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202213100375.png" alt="image-20230202213100375" style="zoom:50%;"><p>在这里添加管理成员。</p><p>这里获取邀请函地址。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202213203970.png" alt="image-20230202213203970" style="zoom:50%;"><p>登录新成员的账号，直接在浏览器中输入邀请链接即可接收邀请或者婉拒(Decline)</p><h2 id="跨团队协作">跨团队协作</h2><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202213900447.png" alt="image-20230202213900447"></p><p>Fork，类似于加入收藏夹。想要改别人的东西，那就可以fork一下。</p><p>然后呢，可以使用<code>pull request</code>拉取请求，通过审查后，就能push到对方的远程库了。对方在审查后，可以Merge pull request对代码进行更新了。</p><p><strong>SSH免密登录</strong></p><p>SSH(Secure Shell Protocol) 是一种加密远程传输协议，我们可以添加SSH key 进行免密登录。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202215635870.png" alt="image-20230202215635870" style="zoom:50%;"><p>删除Window自带的.ssh文件，打开Git Bash</p><blockquote><p>$ ssh-keygen -t rsa -C <a href="mailto:651421775@qq.com">651421775@qq.com</a></p></blockquote><p>-t 表示加密协议, rsa是著名的非对称加密协议</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202215846874.png" alt="image-20230202215846874" style="zoom:50%;"><p>回车即可。此时会生成新的.ssh密令，</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202215914462.png" alt="image-20230202215914462" style="zoom:50%;"><p>一个是私钥，一个是公钥。</p><p>我们在./ssh下取得公钥：</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202220029497.png" alt="image-20230202220029497" style="zoom:50%;"><p>嗯，在这里添加公钥。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202220204384.png" alt="image-20230202220204384" style="zoom:50%;"><p>现在就能用账号免密登录了…可以用SSH连接进行拉取了。</p><hr><h1>Chapter 7.  PyCharm环境集成Git</h1><hr><p>当我们在<a href="https://git-scm.com/">官网</a>下载好Git后，按照要求进行安装，就可以通过快捷方式对本地仓库进行版本控制啦。但是这种方式处理整个工作环境还是比较麻烦的，接下来，我们将在PyCharm环境中配置Git。</p><h2 id="基础配置">基础配置</h2><p>在设置中，选择版本控制(Version Control)，选择Git(一般来说，Git正常安装后就可以在这里显示插件)</p><img src="https://img-blog.csdnimg.cn/939486cb28054dd882efc8c684a0d3c8.png#pic_center" alt="image-20230203125354082" width="50%"><hr><img src="https://img-blog.csdnimg.cn/77f5106794744cc29e3849bc2d169744.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>我们需要找到Git的可执行文件，如果不知道它在哪，可以打开Git Bash，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where git</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/8b9a6716e5d443f9ac2f922e29f1e044.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>选择文件的位置即可。</p><img src="https://img-blog.csdnimg.cn/5671b889a6d94608adc7f07d10a8635d.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>当然我们也可以添加GitHub账号或者Gitee账号，Gitee需要安装对应的Plugin。</p><img src="https://img-blog.csdnimg.cn/8bdf35c1578a400daf6ac92dd680cc96.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h2 id="简单使用">简单使用</h2><p>通过上面的步骤，我们已经在PyCharm中定位了GIt的路径，下面我们将做一些简单的使用操作。</p><h3 id="Step-1-创建Git仓库">Step 1. 创建Git仓库</h3><p>在VCS选项卡中可以找到。</p><img src="https://img-blog.csdnimg.cn/27f5c31a29a74a6f82b9edb2d13fb156.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>创建仓库后，不出意外的话，当前项目下的文件都会是红色的，也就是modify状态，我们需要将他们提交到本地库。</p><img src="https://img-blog.csdnimg.cn/1f8984d8dd954384920f6fa03bb18225.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>此时我们会发现，VCS选项卡暂时变成了Git选项。在这里就可以执行我们的操作啦。</p><h3 id="Step-2-提交本地库">Step 2. 提交本地库</h3><p>直接选择commit即可</p><img src="https://img-blog.csdnimg.cn/969e4b9882fd428db4050fe10a00cb6d.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在Commit Message中可以输入版本信息，建议详细输入。</p><img src="https://img-blog.csdnimg.cn/9b5e09fd877948c2aa6d2bf49d98816a.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-3-创建分支">Step 3. 创建分支</h3><p>我们可以在Git选项卡中，或是右下角进行分支创建。</p><img src="https://img-blog.csdnimg.cn/21d9fe2f9b9047398484f62396777010.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>此时对代码内容进行修改，发现绿色侧边栏，说明这段代码相较于上一个版本是修改过的。</p><img src="https://img-blog.csdnimg.cn/721acd0886c44a27ae1e8c51dcbd3170.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在左下角的Git选项中，我们可以查看当前的日志信息。</p><p>此时创建出了两个分支，每个分支对应一个指针，黄色指针表示当前HEAD指针的位置。</p><img src="https://img-blog.csdnimg.cn/b872c99f1f0e49508431e64d37d3b6aa.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-4-切换分支">Step 4. 切换分支</h3><p>只需要选择对应分支，然后签出(Checkout)即可。</p><img src="https://img-blog.csdnimg.cn/7ebd759babcb4e22b3365ba320fb5e6d.png#pic_centerr" alt="image-20230203125354082" width="50%"><hr><p>如果此时两个分支的内容不一致，我们就可以在日志信息中看到，分支发生了方向不同的生长。</p><img src="https://img-blog.csdnimg.cn/7712fd6a96bf443fa7ccf02ffc4b98fb.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-5-合并分支">Step 5. 合并分支</h3><p>在当前分支下，可以选择合并其他分支，或者是将当前分支变基到其他分支。</p><img src="https://img-blog.csdnimg.cn/7e08914cf6c94e3f8390ad0bb1576b31.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>当两个分支的内容出现冲突时，就需要我们手动修改。</p><img src="https://img-blog.csdnimg.cn/64bc75a8031247429839f5089ed2fb88.png#pic_center" alt="image-20230203125354082" width="50%"><hr><img src="https://img-blog.csdnimg.cn/27b94ce537d44fe9b5c2f8d43df5c98a.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>合并后，两个分支节点又回到了一个。</p><img src="https://img-blog.csdnimg.cn/49b7d1c298b94a4bae7ff4aa04f777e4.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>我们也可以回到之前的版本。</p><img src="https://img-blog.csdnimg.cn/9ee158ede7b74a07bf3b345d38fb2b5b.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-6-Push本地库">Step 6. Push本地库</h3><p>还是菜单栏的Git选项卡，选择Push，此时我们需要一个远程仓库。</p><img src="https://img-blog.csdnimg.cn/a5a7dd94460d4447b99c9f4596e32c2f.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在GitHub、Gitee、GitLab等远程托管中心下创建一个仓库后，复制HTTPS或是SSH连接，为我们当前本地库的分支选择一个远程库。</p><img src="https://img-blog.csdnimg.cn/f93a795c5cf148f9b6088c3d948b8d75.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>别名的话一般不建议修改，origin就阔以了。</p><img src="https://img-blog.csdnimg.cn/7c6f685cc05f4a7c891882eb5beabde8.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>成功Push后，我们可以看到此时多了一个远程库的指针。</p><img src="https://img-blog.csdnimg.cn/7ef671d09562402f8e5800dd34d67319.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在远程库中，我们也能看到本地库已经被推送上来了。</p><img src="https://img-blog.csdnimg.cn/0c61989cce80405696c596c52060e2db.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-7-Pull远程库">Step 7. Pull远程库</h3><p>如果远程库发生了版本变化：</p><img src="https://img-blog.csdnimg.cn/2ea996bc812a4630931376c8aa813fbe.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>我们就可以用Pull选项拉取新的版本了。</p><img src="https://img-blog.csdnimg.cn/172d29b8c746412ba6fc4aa8d5993ba2.png#pic_center" alt="image-20230203125354082" width="50%"><hr><img src="https://img-blog.csdnimg.cn/d859c524ea1940ecace2795c428341ba.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-8-Clone远程库">Step 8. Clone远程库</h3><p>在新建项目这里，选择从VCS获取。</p><img src="https://img-blog.csdnimg.cn/d34a5b8260bf43e389eddca10f400bc8.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>如果之前添加了远程托管中心的账号，就可以直接Clone自己的项目啦。</p><img src="https://img-blog.csdnimg.cn/3121d93ad6364c3e94388d50e2e07ceb.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>Clone别人的项目就需要输入链接地址。</p><img src="https://img-blog.csdnimg.cn/e06db0a892c54a66ae850815f2f2c163.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h1>Chapter 8. 常见命令</h1><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230203125203152.png" alt="image-20230203125203152">那个 你</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Git</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
    <category term="开发工具" scheme="http://example.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关键对话20讲</title>
    <link href="http://example.com/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/"/>
    <id>http://example.com/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/</id>
    <published>2023-01-15T09:23:14.379Z</published>
    <updated>2023-01-22T09:26:17.984Z</updated>
    
    <content type="html"><![CDATA[<h1>Chapter 1.  基础体系与核心理念</h1><h2 id="1-1-【体系篇】对话能力的组成模块和进阶路径">1.1  【体系篇】对话能力的组成模块和进阶路径</h2><p>🌟 <strong>关键对话的目标</strong></p><p>关键对话的目标在于【双方互相确定需求，交换调整实现利益】</p><p>在进行关键对话前，必须明确自己的需求，了解对方的需求，这样才有可能达到共赢。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">我的需求</th><th style="text-align:center">对方需求</th></tr></thead><tbody><tr><td style="text-align:center">必须达到的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">可以交换的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>🌟 <strong>关键对话的能力</strong></p><p>1️⃣ <strong>表达能力</strong></p><p>2️⃣ <strong>思维能力</strong></p><p>3️⃣ <strong>认知能力</strong></p><p>4️⃣ <strong>交换和创造价值的能力</strong></p><p>5️⃣ <strong>策略运用能力</strong></p><p>6️⃣ <strong>外交能力</strong></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230115181947191.png" alt="image-20230115181947191" style="zoom:50%;"><p>提高关键对话的能力关键在于：</p><blockquote><p>知识、态度、能力</p></blockquote><p>获取知识，更新认知，改变态度，勤加练习，提升能力。</p><p>而这一切的关键在于练习，需要正确的重复。</p><hr><p><strong>课后习题</strong></p><ul><li>画一个关键对话六边形能力图</li><li>请思考下，还有哪些是你需要的能力，是像关键对话一样的复合能力。</li></ul><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230115184042438.png" alt="image-20230115184042438" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">// Schema:</span><br><span class="line">// date,AQIindex,PM2<span class="number">.5</span>,PM10,CO,NO2,SO2</span><br><span class="line">const dataBJ = [</span><br><span class="line">  [<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">const lineStyle = &#123;</span><br><span class="line">  width: <span class="number">1</span>,</span><br><span class="line">  opacity: <span class="number">0.5</span></span><br><span class="line">&#125;;</span><br><span class="line">option = &#123;</span><br><span class="line">  backgroundColor: <span class="string">&#x27;#161627&#x27;</span>,</span><br><span class="line">  title: &#123;</span><br><span class="line">    text: <span class="string">&#x27;关键对话能力&#x27;</span>,</span><br><span class="line">    left: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">    textStyle: &#123;</span><br><span class="line">      color: <span class="string">&#x27;#eee&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  legend: &#123;</span><br><span class="line">    bottom: <span class="number">5</span>,</span><br><span class="line">    data: [<span class="string">&#x27;关键对话能力&#x27;</span>,],</span><br><span class="line">    itemGap: <span class="number">20</span>,</span><br><span class="line">    textStyle: &#123;</span><br><span class="line">      color: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">      fontSize: <span class="number">14</span></span><br><span class="line">    &#125;,</span><br><span class="line">    selectedMode: <span class="string">&#x27;single&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  radar: &#123;</span><br><span class="line">    indicator: [</span><br><span class="line">      &#123; name: <span class="string">&#x27;表达能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;思维能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;认知能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;交换和创造价值能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;策略应用能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;外交能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    shape: <span class="string">&#x27;circle&#x27;</span>,</span><br><span class="line">    splitNumber: <span class="number">5</span>,</span><br><span class="line">    axisName: &#123;</span><br><span class="line">      color: <span class="string">&#x27;rgb(238, 197, 102)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    splitLine: &#123;</span><br><span class="line">      lineStyle: &#123;</span><br><span class="line">        color: [</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.1)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.2)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.4)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.6)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.8)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 1)&#x27;</span></span><br><span class="line">        ].reverse()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitArea: &#123;</span><br><span class="line">      show: false</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLine: &#123;</span><br><span class="line">      lineStyle: &#123;</span><br><span class="line">        color: <span class="string">&#x27;rgba(238, 197, 102, 0.5)&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;关键对话能力&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;radar&#x27;</span>,</span><br><span class="line">      lineStyle: lineStyle,</span><br><span class="line">      data: dataBJ,</span><br><span class="line">      symbol: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">      itemStyle: &#123;</span><br><span class="line">        color: <span class="string">&#x27;#F9713C&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      areaStyle: &#123;</span><br><span class="line">        opacity: <span class="number">0.1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>关于其他的能力：</p><ul><li>我想，在对话中保持专注、抓住细节并给予一定的反馈是十分必要的，因而专注力、敏感力也是需要进行训练的。除此之外，知识的积累量也能成为博弈中的胜负手。</li></ul><hr><h2 id="1-2-【核心理念】别让立场掩盖了利益">1.2  【核心理念】别让立场掩盖了利益</h2><p>如何剥开立场看利益？</p><p>通过探求的口吻与想解决问题的语气来问问题，反问与质问都是不可取的。</p><p><strong>【模型】</strong></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230116194720737.png" alt="image-20230116194720737" style="zoom:50%;"><p><strong>【第一原则】</strong></p><p>我们的关注应该在<strong>利益</strong>，而不是<strong>立场</strong>。</p><p><strong>【第二原则】</strong></p><p>始终坚持<strong>共同利益</strong>。只要是在对话中的双方，永远都有共同利益。</p><p>避免损失，也是共同利益。</p><p>那么要如何寻找共同利益？可以采用<strong>逆向思维</strong>、<strong>长期主义思维</strong></p><p>情绪和自我感受往往会让人难以走出立场，看到利益。不是不可以有情绪，而是需要学会不被情绪所驾驭。</p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230116200629816.png" alt="image-20230116200629816" style="zoom:50%;"><hr><p><strong>课后思考题</strong></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230116201105332.png" alt="image-20230116201105332" style="zoom:50%;"><hr><h1>Chapter 2. 关键对话：技能和为思维模型</h1><h2 id="2-1-表达能力：“会说”的关键在于“会听”">2.1  表达能力：“会说”的关键在于“会听”</h2><p>首先需要明确对话双方的<strong>关系</strong>，谈话是【当下】场合的艺术。</p><p>在不同时空、不同关系下的对话，往往有着不同的含义。我们需要学会在关系里【听需求】。</p><p>表达可以分成三对概念：</p><ul><li>观察和事实</li><li>感受和判断</li><li>请求和要求</li></ul><p>1️⃣ <strong>观察和事实</strong></p><ul><li>观察是观察者所认为的事实，不同的人可能会看到不同的事实。对于某件事情，在不同的观测角度下，会产生不同的事实。【真像】只能接近，而无法达到。</li><li>切忌，不能将自己的观察当做所有人的观察。</li></ul><p>2️⃣ <strong>感受和判断</strong></p><ul><li>【感受】是发自内心的</li><li>【判断】是对事件【下结论】</li></ul><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230117195850229.png" alt="image-20230117195850229" style="zoom:50%;"><p>一般来说，【观察】+【感受】是一个好的表达方式，下判断是引起争论的重要原因。</p><p>判断有三种主要形式：</p><ul><li>评价<ul><li>对于他人、他事使用的描述性语言</li></ul></li><li>比较<ul><li>令人不快的方式，尽量少用【不知道对方心中如何想的】</li></ul></li><li>归责<ul><li>将事情的责任引导到别的地方</li></ul></li></ul><p>3️⃣ <strong>请求和要求</strong></p><ul><li>互相有了请求，开始用利益交换满足互相需要的实际操作过程。</li></ul><p>提出请求的原则：</p><ul><li>请求要具体</li><li>请求没有满足，不能惩罚</li></ul><p>要求是是在请求后给出了惩罚，哪怕是负面评价。</p><hr><p><strong>应用模型</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>描述你的观察</mtext><mo>+</mo><mtext>表达你的感受</mtext><mo>+</mo><mtext>提出你的请求</mtext></mrow><annotation encoding="application/x-tex">描述你的观察+表达你的感受+提出你的请求</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">描述你的观察</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">表达你的感受</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">提出你的请求</span></span></span></span></span></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230117200656220.png" alt="image-20230117200656220" style="zoom:50%;"><p>过于强调主观、事实、判断，这是从立场出发，违反了我们最初的原则：谈【利益】不谈【立场】。</p><p>如果对方的表达带有比较强烈的事实和判断，我们可以通过提问和倾听的方式了解需求，这样才能真正解决问题。</p><p><strong>举个栗子</strong><br>阿伟昨天又通宵打游戏了，你作为阿婆想要劝劝他。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;阿伟，你又通宵打电动哦，这样对身体不好，赶紧关了&quot;</span></span><br><span class="line"><span class="string">&quot;豁，死了啦，都是你害的&quot;</span></span><br></pre></td></tr></table></figure><p>阿婆说的话是带有明显的判断和要求的，并不是一种好的对话。我们可以改成这样说：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;阿伟，我看你神色不太好，是不是昨天玩的太晚啦？我们可以白天打游戏嘛&quot;</span></span><br></pre></td></tr></table></figure><p>如果阿伟又是带有强烈主观判断的回答，我们可以通过问问题的方式，尝试挖掘出潜在的原因(需求)，从而解决问题。</p><hr><p><strong>课后练习</strong></p><p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230117202728911.png" alt="image-20230117202728911"></p><ul><li>A. 您好，这几天我看您每天都很早起来工作，现在的进度怎么样啦？因为我早上起的比较晚，您的施工时间会影响到我的睡眠，可以稍微晚一点吗？</li><li>B. 关你什么事。我啥时候施工是我的权利，你自己不能早点起？</li><li>A. 没事没事，我就是顺口一提，您是在赶工程吗？还是晚间有别的事情要做？</li><li>B. 哼，年关将近，我做不完你来帮我？</li><li>A. 啊，可以理解的。我觉得您要是在国家规定的时间段内施工，我们邻里都非常乐意帮助您的，别的时间段可能会让邻居们不满哦</li><li>B. 你是在威胁我？老子做事还要你教？</li><li>A. 俗话说远亲不如近邻嘛，都是邻里，平时有时还能帮衬帮衬，咱平常互相关照下嘛，大家都有难处，能在私下解决是最好不过了</li><li>B. 听你的意思，还想告我啊？去告啊？</li></ul><p>如何拜年引起的思考</p><p>总结一个对话的模型：</p><p>因为是十分客套的对话，并没有真正的利益和立场牵扯，所以下面这个模型就叫做废话模型。</p><p>1️⃣ 询问近况：做什么，吃了吗，身体怎么样，有什么需求，需要什么帮助</p><p>2️⃣ 表明来意：可以是新年快乐，祝您身体健康，万事如意</p><p>3️⃣ 婉转退场：可以是还有点事，可以是约个时间聚一下，可以是找机会探望</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">教你怎么说话</summary>
    
    
    
    <category term="梦时风月" scheme="http://example.com/categories/%E6%A2%A6%E6%97%B6%E9%A3%8E%E6%9C%88/"/>
    
    
    <category term="日常" scheme="http://example.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/12/28/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%88%98%E5%BD%AC%E5%8D%95%E8%AF%8D%E9%80%9F%E8%AE%B0/"/>
    <id>http://example.com/2022/12/28/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%88%98%E5%BD%AC%E5%8D%95%E8%AF%8D%E9%80%9F%E8%AE%B0/</id>
    <published>2022-12-28T11:12:03.332Z</published>
    <updated>2022-12-29T16:41:39.372Z</updated>
    
    <content type="html"><![CDATA[<h1>刘彬单词速记</h1><hr><h2 id="Chapter-1">Chapter 1.</h2><h3 id="词根">词根</h3><table><thead><tr><th style="text-align:center">词根</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-cess</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-ceed</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-cede</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-gress</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-grad</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-gred</td><td style="text-align:center">to go 走</td></tr></tbody></table><h3 id="前缀">前缀</h3><table><thead><tr><th style="text-align:center">前缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">pro-</td><td style="text-align:center">(动态的)forward，向前</td></tr><tr><td style="text-align:center">pre-</td><td style="text-align:center">（静态的)向前</td></tr><tr><td style="text-align:center">under-</td><td style="text-align:center">下面，下</td></tr><tr><td style="text-align:center">in-</td><td style="text-align:center">进入</td></tr><tr><td style="text-align:center">a-</td><td style="text-align:center">强调，加强</td></tr><tr><td style="text-align:center">a+辅音-</td><td style="text-align:center">强调，加强</td></tr><tr><td style="text-align:center">un-</td><td style="text-align:center">否定</td></tr><tr><td style="text-align:center">re-</td><td style="text-align:center">(1). 相反 (2).返回  (3).反复</td></tr><tr><td style="text-align:center">e-</td><td style="text-align:center">(1). 向外</td></tr><tr><td style="text-align:center">ex-</td><td style="text-align:center">(2). 出，超出</td></tr><tr><td style="text-align:center">es-</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">ac-</td><td style="text-align:center">朝…走 强调</td></tr></tbody></table><h3 id="后缀">后缀</h3><table><thead><tr><th style="text-align:center">后缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-or</td><td style="text-align:center">都是元音+<code>r</code>，结果相同。表示：(1). 名词：人，机</td></tr><tr><td style="text-align:center">-er</td><td style="text-align:center">(2). 形容词：…的</td></tr><tr><td style="text-align:center">-ar</td><td style="text-align:center">(3). 极少数: 动词</td></tr><tr><td style="text-align:center">-ur</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ion</td><td style="text-align:center">名词性后缀</td></tr><tr><td style="text-align:center">-ate</td><td style="text-align:center">(1). 动词：使得</td></tr><tr><td style="text-align:center">-ite</td><td style="text-align:center">(2). 形容词</td></tr><tr><td style="text-align:center">-ute</td><td style="text-align:center">(3). 少数： 名词</td></tr><tr><td style="text-align:center">-ive</td><td style="text-align:center">(1).形容词性后缀  表示多 (2). 名词：人，物</td></tr><tr><td style="text-align:center">-ent</td><td style="text-align:center">(1). 名词：人，物</td></tr><tr><td style="text-align:center">-ant</td><td style="text-align:center">(2). 形容词</td></tr><tr><td style="text-align:center">-ed</td><td style="text-align:center">形容词性</td></tr><tr><td style="text-align:center">-ence</td><td style="text-align:center">名词性后缀</td></tr><tr><td style="text-align:center">-ance</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ancy</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ency</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ible</td><td style="text-align:center">可以…的</td></tr><tr><td style="text-align:center">-ory</td><td style="text-align:center">名词性</td></tr></tbody></table><h3 id="连接符号">连接符号</h3><table><thead><tr><th style="text-align:center">连接符号</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-u</td><td style="text-align:center">用来连接前缀和后缀的</td></tr><tr><td style="text-align:center">-ul</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-ol</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-o</td><td style="text-align:center">–</td></tr></tbody></table><h3 id="单词">单词</h3><table><thead><tr><th style="text-align:center">单词</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><strong>process</strong></td><td style="text-align:center"><strong>进程，过程；加工，处理</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pro(向前)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 工厂机器加工处理矿泉水瓶</td></tr><tr><td style="text-align:center"><strong>processor</strong></td><td style="text-align:center"><strong>处理器</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">多了个后缀捏</td></tr><tr><td style="text-align:center"><strong>procession</strong></td><td style="text-align:center"><strong>队列，行列，一列，一排</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center"><code>ion</code>后缀，表示名词，一堆流程堆在队列里了</td></tr><tr><td style="text-align:center"><strong>graduate</strong></td><td style="text-align:center"><strong>毕业；本科毕业生</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">grad(前缀，走)+u(连接)+ate(名词后缀)</td></tr><tr><td style="text-align:center"><strong>undergraduate</strong></td><td style="text-align:center"><strong>未毕业</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">under(下面，未达到)+graduate</td></tr><tr><td style="text-align:center"><strong>ingredient</strong></td><td style="text-align:center"><strong>成分，原料，要素</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">in(进入)+gredi(走)+ent(名词后缀)</td></tr><tr><td style="text-align:center"><strong>aggress</strong></td><td style="text-align:center"><strong>侵略</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ag(强调)+gress(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 法西斯拿着枪压着犹太人</td></tr><tr><td style="text-align:center"><strong>aggressive</strong></td><td style="text-align:center"><strong>侵略性的，激进的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">aggress+ive(形容词性)</td></tr><tr><td style="text-align:center"><strong>aggression</strong></td><td style="text-align:center"><strong>侵略</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">aggress+ion(名词性)</td></tr><tr><td style="text-align:center"><strong>progress</strong></td><td style="text-align:center"><strong>前进，进步</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">注意与其他几位的辨别</td></tr><tr><td style="text-align:center"><strong>proceed</strong></td><td style="text-align:center"><strong>前进，进行，继续</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">注意与其他几位的辨别</td></tr><tr><td style="text-align:center"><strong>procedure</strong></td><td style="text-align:center"><strong>程序，步骤</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pro+ced+ure(名词性)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 向前走</td></tr><tr><td style="text-align:center"><strong>precede</strong></td><td style="text-align:center"><strong>领先于，优于</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pre(静态:向前)+cede(走)</td></tr><tr><td style="text-align:center"><strong>precedent</strong></td><td style="text-align:center"><strong>先例，前例；先前的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">precede+ent(名词后缀)</td></tr><tr><td style="text-align:center"><strong>unprecedented</strong></td><td style="text-align:center"><strong>史无前例的，空前</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">un(否定)+precedent+ed(形容词性)</td></tr><tr><td style="text-align:center"><strong>precedence</strong></td><td style="text-align:center"><strong>优先</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">precede+ence(名词性)</td></tr><tr><td style="text-align:center"><strong>priority</strong></td><td style="text-align:center">同义词，<strong>优先</strong></td></tr><tr><td style="text-align:center"><strong>access</strong></td><td style="text-align:center"><strong>接近，进入；使用、获取</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ac(加强语气)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走过去</td></tr><tr><td style="text-align:center"><strong>accessible</strong></td><td style="text-align:center"><strong>可接近的，可使用的，可获取的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">access+ible(可以…的)</td></tr><tr><td style="text-align:center"><strong>accessory</strong></td><td style="text-align:center"><strong>配件、附件、从犯</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">access+ory(名词性后缀)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 和主要的东西走在一起</td></tr><tr><td style="text-align:center"><strong>recession</strong></td><td style="text-align:center"><strong>衰退、后退、凹处、不景气</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">re(返回)+cess(走)+ion(名词性)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>返回走</td></tr><tr><td style="text-align:center"><strong>recede</strong></td><td style="text-align:center"><strong>衰退</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">recession的动词，注意变化</td></tr><tr><td style="text-align:center"><strong>excess</strong></td><td style="text-align:center"><strong>过度、过量、超过</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ex(向外，出去)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 超出了，过量</td></tr><tr><td style="text-align:center"><strong>excessive</strong></td><td style="text-align:center"><strong>形容词的过度、过量</strong></td></tr><tr><td style="text-align:center"><strong>exceed</strong></td><td style="text-align:center"><strong>超过，胜过</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">相较于<code>cess</code>，<code>ceed</code>似乎更热衷于扮演动词角色</td></tr><tr><td style="text-align:center"><strong>exceedingly</strong></td><td style="text-align:center"><strong>非常，极其</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">exceeding+ly(形容词性)</td></tr><tr><td style="text-align:center"><strong>cease</strong></td><td style="text-align:center"><strong>停止，终了</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ceas=cess, eas模仿<code>end</code>，走到尽头</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="核心内容">核心内容</h3><ul><li><p><code>s, t, d</code>可以互相转换</p></li><li><p>元音的互相组合并不影响含义，例如：<code>eat</code><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> <code>es/ed</code></p></li><li><p><code>co\con\com\col\cor</code> 是同一含义在不同语句中的同化音。表示的意思有：1. 一起，协同； 2. 强调</p></li></ul><h3 id="扩展内容">扩展内容</h3><p>⭐ <code>make a passing remark</code></p><p>🌟 简单评论下；顺带说一下</p><p>⭐ <code>Data processing</code></p><p>🌟 数据处理</p><p>⭐ <code>make a rapid progress</code></p><p>🌟 取得快速进步</p><p>⭐ <code>proceed with/ to</code></p><p>🌟 继续做 / 前往</p><p>⭐ <code>legal procedure</code></p><p>🌟 法律程序</p><p>⭐ <code>give priority/precedence to sth</code></p><p>🌟 优先考虑…</p><p>⭐ <code>have access to</code></p><p>🌟 使用，利用</p><p>⭐ <code>excess demand</code></p><p>🌟 过度需求</p><p>⭐ <code>cease fire</code></p><p>🌟 停火</p><img src="/2022/12/28/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%88%98%E5%BD%AC%E5%8D%95%E8%AF%8D%E9%80%9F%E8%AE%B0/image-20221229161950832.png" alt="image-20221229161950832" style="zoom:50%;"><hr><h2 id="Chapter-2">Chapter 2.</h2><h3 id="词根-v2">词根</h3><table><thead><tr><th style="text-align:center">词根</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="前缀-v2">前缀</h3><table><thead><tr><th style="text-align:center">前缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">sub-</td><td style="text-align:center">(1). 下,向下: subway</td></tr><tr><td style="text-align:center">sup-</td><td style="text-align:center">(2). 自底向上: submit</td></tr><tr><td style="text-align:center">suc-</td><td style="text-align:center">(3). 亚于，次于: suburban</td></tr><tr><td style="text-align:center">sus-</td><td style="text-align:center">（4). 后，后面: subsequent</td></tr><tr><td style="text-align:center">de-</td><td style="text-align:center">下</td></tr><tr><td style="text-align:center">com-</td><td style="text-align:center">(1). 共同，一起</td></tr><tr><td style="text-align:center">col-</td><td style="text-align:center">(2). 仅表示加强</td></tr><tr><td style="text-align:center">cor-</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">co-</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">con-</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">anc-</td><td style="text-align:center">(1). 以前，老；(2). 高</td></tr><tr><td style="text-align:center">ant-</td><td style="text-align:center">(1). 以前的 antique (2). anti- 反对</td></tr><tr><td style="text-align:center">abs-</td><td style="text-align:center">away 远离</td></tr><tr><td style="text-align:center">inter-</td><td style="text-align:center">在…之间</td></tr><tr><td style="text-align:center">trans-</td><td style="text-align:center">穿/转/传</td></tr></tbody></table><h3 id="后缀-v2">后缀</h3><table><thead><tr><th style="text-align:center">后缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-ful</td><td style="text-align:center">形容词性后缀</td></tr><tr><td style="text-align:center">-ly</td><td style="text-align:center">一般是副词性后缀</td></tr><tr><td style="text-align:center">-ry</td><td style="text-align:center">一般是名词性后缀</td></tr><tr><td style="text-align:center">-ary</td><td style="text-align:center">形容词性后缀</td></tr><tr><td style="text-align:center">-ity</td><td style="text-align:center">非常强烈的名词！</td></tr><tr><td style="text-align:center">-lity</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-ility</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-itate</td><td style="text-align:center">ite+ate复合而成，e不发音而省略</td></tr><tr><td style="text-align:center">-ate</td><td style="text-align:center">最多是做动词和形容词</td></tr><tr><td style="text-align:center">-ite</td><td style="text-align:center">最多的是做形容词</td></tr><tr><td style="text-align:center">-ute</td><td style="text-align:center">最多的是动词</td></tr><tr><td style="text-align:center">-ation</td><td style="text-align:center">-ate±ion复合而成，ion是名词性后缀</td></tr><tr><td style="text-align:center">-al</td><td style="text-align:center">形容词性后缀</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="连接符号-v2">连接符号</h3><table><thead><tr><th style="text-align:center">连接符号</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="单词-v2">单词</h3><table><thead><tr><th style="text-align:center">单词</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><strong>succeed</strong></td><td style="text-align:center"><strong>成功、继任、继承、兴旺</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">suc(自底向上)+ceed(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 成功；suc(在后面)+ceed<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 继承</td></tr><tr><td style="text-align:center"><strong>succeeding</strong></td><td style="text-align:center"><strong>随后的，以后的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">suc(后面)+ceed(走)+ing(形容词后缀)</td></tr><tr><td style="text-align:center"><strong>success</strong></td><td style="text-align:center"><strong>成功，胜利；成大事的人</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ceed更像是动词，cess更像是名词</td></tr><tr><td style="text-align:center"><strong>successful</strong></td><td style="text-align:center"><strong>成功的，一帆风顺的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ful这个是形容词性后缀</td></tr><tr><td style="text-align:center"><strong>successfully</strong></td><td style="text-align:center"><strong>成功地</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ly是副词性后缀啦</td></tr><tr><td style="text-align:center"><strong>successor</strong></td><td style="text-align:center"><strong>后继者，后继的事物</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">success用的是继承的词性+or表示人或物</td></tr><tr><td style="text-align:center"><strong>succession</strong></td><td style="text-align:center"><strong>连续、继位、接替</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ion表示名词</td></tr><tr><td style="text-align:center"><strong>successive</strong></td><td style="text-align:center"><strong>连续的、继承的、依次的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ive这个表示形容词性，有多`的额外含义</td></tr><tr><td style="text-align:center"><strong>predecessor</strong></td><td style="text-align:center"><strong>前辈，前任</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pre(前)+de(下)+cess(走)+or<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 之前的走下台的人</td></tr><tr><td style="text-align:center"><strong>necessary</strong></td><td style="text-align:center"><strong>必要的，必须的，必然的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ne(否定，不)+cess(走)+ary(adj.)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 不得不走的路</td></tr><tr><td style="text-align:center"><strong>necessarily</strong></td><td style="text-align:center"><strong>必须滴</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center"><code>ly</code>后缀</td></tr><tr><td style="text-align:center"><strong>necessity</strong></td><td style="text-align:center"><strong>必需品</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ity是强名词后缀</td></tr><tr><td style="text-align:center"><strong>necessitate</strong></td><td style="text-align:center"><strong>使成为必须；迫使</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ite+ate<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 复合后缀(itate)</td></tr><tr><td style="text-align:center"><strong>degrade</strong></td><td style="text-align:center"><strong>使…丢脸；使…降级；使…降</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">de(向下)+grade(级别)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 级别向下</td></tr><tr><td style="text-align:center"><strong>degradation</strong></td><td style="text-align:center"><strong>降级、堕落、退化</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ation是ate+ion复合而成的，很常见，表示名词性后缀</td></tr><tr><td style="text-align:center"><strong>upgrade</strong></td><td style="text-align:center"><strong>提升、升级、改良品种</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">up向上+grade(级别)</td></tr><tr><td style="text-align:center"><strong>gradual</strong></td><td style="text-align:center"><strong>逐渐的、逐步的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">grad(走)+u+al(形容词)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 一步一步走着：渐渐地</td></tr><tr><td style="text-align:center"><strong>gradually</strong></td><td style="text-align:center"><strong>渐渐地；逐步地</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">gradual+ly(副词性后缀)</td></tr><tr><td style="text-align:center"><strong>congress</strong></td><td style="text-align:center"><strong>国会、会议、社交、代表大会</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">con(一起，共同)+gress(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走到一起(开会)</td></tr><tr><td style="text-align:center"><strong>congressional</strong></td><td style="text-align:center"><strong>国会的、议会的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ion+al 复合后缀，以最后为准</td></tr><tr><td style="text-align:center"><strong>congressman</strong></td><td style="text-align:center"><strong>国会议员</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">Iroman！</td></tr><tr><td style="text-align:center"><strong>ancestor</strong></td><td style="text-align:center"><strong>祖先，始祖</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">anc(以前、老)+cest(走 cess std互通)+or$\to $之前走的人</td></tr><tr><td style="text-align:center"><strong>ancestral</strong></td><td style="text-align:center"><strong>祖传的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ancest+ral(形容词性)</td></tr><tr><td style="text-align:center"><strong>ancestry</strong></td><td style="text-align:center"><strong>祖先，血统</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ryyyy！</td></tr><tr><td style="text-align:center"><strong>concede</strong></td><td style="text-align:center"><strong>让步、退让、(勉强)承认</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">con(共同、一起)+cede(走)</td></tr><tr><td style="text-align:center"><strong>concession</strong></td><td style="text-align:center"><strong>让步、特许、承认、退位</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ion</td></tr><tr><td style="text-align:center"><strong>abscess</strong></td><td style="text-align:center"><strong>脓肿，脓疮</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">abs(=away 走开)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走不掉的</td></tr><tr><td style="text-align:center"><strong>accede</strong></td><td style="text-align:center"><strong>同意、加入、就任、就职</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ac(朝)+cede(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走到一起了</td></tr><tr><td style="text-align:center"><strong>accession</strong></td><td style="text-align:center"><strong>增加、就职、到达</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">access?其实是accede+ion啦</td></tr><tr><td style="text-align:center"><strong>antecede</strong></td><td style="text-align:center"><strong>在…之前、胜过、先前</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ante(以前)+cede(走)</td></tr><tr><td style="text-align:center"><strong>antecedent</strong></td><td style="text-align:center"><strong>先行词，先例，祖先</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">antecede+ent</td></tr><tr><td style="text-align:center"><strong>incessant</strong></td><td style="text-align:center"><strong>不断的，不停的，连续的</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">in(此时表示not)+cess(走，cease停止)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>+ant(adj.) 不要停止</td></tr><tr><td style="text-align:center"><strong>intercede</strong></td><td style="text-align:center"><strong>调解、调停、求情</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">intert(之间、相互)+cede(奔走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 奔走两人之间求情</td></tr><tr><td style="text-align:center"><strong>secede</strong></td><td style="text-align:center"><strong>（国家、大集团）退出、脱离</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">se(separate)+cede<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 分开走</td></tr><tr><td style="text-align:center"><strong>secession</strong></td><td style="text-align:center"><strong>脱离、分离</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">se+cess+ion</td></tr><tr><td style="text-align:center"><strong>digress</strong></td><td style="text-align:center"><strong>离题、岔道</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">di(dis分开)+gress(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走成Y字了</td></tr><tr><td style="text-align:center"><strong>regress</strong></td><td style="text-align:center"><strong>逆行，退回，复归</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">re(返回)+gress</td></tr><tr><td style="text-align:center"><strong>regression</strong></td><td style="text-align:center"><strong>退化；回归；逆行</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ion</td></tr><tr><td style="text-align:center"><strong>regressive</strong></td><td style="text-align:center"><strong>回归的、后退的、退化的</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ive</td></tr><tr><td style="text-align:center"><strong>ingress</strong></td><td style="text-align:center"><strong>进入，入口，入境</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">这是名词</td></tr><tr><td style="text-align:center"><strong>transgression</strong></td><td style="text-align:center"><strong>越界、违反</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">trans(穿过)+gress+ion</td></tr></tbody></table><h3 id="核心内容-v2">核心内容</h3><ul><li><p><code>sub</code>、<code>sup</code>、<code>suc</code>、<code>sus</code>本质上是一样的，只是在不同读音环境下的同化音罢了。<code>BPCS</code></p></li><li><p><code>-ive</code>后缀当形容词性有<code>多\大</code>的引申义，例如：<code>productive(多产的)</code>，<code>expensive(昂贵的)</code></p></li><li><p><code>-ive</code>当名词词性时，可以表示人、物，例如：<code>representive 发言人</code>，<code>relative 关系</code>， <code>insentive 刺激</code></p></li><li><p>复合后缀词性看最后</p></li></ul><h3 id="扩展内容-v2">扩展内容</h3><p>⭐ <code>succeed in (doing) sth.</code></p><p>🌟 成功做某事</p><p>⭐ <code>a succession of sth.</code></p><p>🌟 一连串的东西</p><p>⭐ <code>out of necessity</code></p><p>🌟 出于必要(out of : 出于)</p><p>⭐ <code>If you accede to someone's request, you do what they ask.</code></p><p>⭐ 往前走：<code>progress</code>，往后走：<code>regress</code></p><p>⭐ <code>A high seating position makes ingress and egress easy.</code></p><p>🌟 较高的座椅位置使入口和出口容易</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;刘彬单词速记&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Chapter-1&quot;&gt;Chapter 1.&lt;/h2&gt;
&lt;h3 id=&quot;词根&quot;&gt;词根&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;词根&lt;/th&gt;
&lt;th s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【QT】信号与槽</title>
    <link href="http://example.com/2022/12/24/%E3%80%90QT%E3%80%91%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%A7%BD/"/>
    <id>http://example.com/2022/12/24/%E3%80%90QT%E3%80%91%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%A7%BD/</id>
    <published>2022-12-24T12:57:00.996Z</published>
    <updated>2022-12-24T14:24:40.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="信号与槽">信号与槽</h2><p>**信号(Signal)<strong>与</strong>槽(Slot)**是Qt中对象之间的通信方式，可以用一个简单的栗子说明：当我们想要开灯时，按下开关发出指令，这就是信号；而灯泡接收到电流变化，发出光亮，这就是响应(槽)。</p><p>我们也可以换个称呼方式：</p><ul><li>信号：触发事件</li><li>槽：响应函数</li></ul><p>所有继承自QObject的类，都可以包含信号和槽。当对象的状态发生改变时，就会发出信号。当然，他并不关心是否有人接收到这个信号。</p><p>槽函数就是用来接收对象的一个方法或是接口，就跟信号发出去并不知道有没有槽接收一样，槽也不知道有没有信号来调动他，他只是个固有属性。</p><p>信号和槽之间的关系是开放多元的，你可以看见一个信号连接到好几个槽，也可以见到一个槽上有好几个信号。更诡异的是，甚至可以将一个信号插到另一个信号上。</p><p>Qt小组件有许多预定义的信号和槽，例如QAbstractButton有一个Clicked()的信号，QLineEdit有一个clear()的槽。一般通过信号的<code>connect()</code>方法，将信号与槽联系起来。例如：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">button=QToolButton()</span><br><span class="line">line_edit=QLineEdit()</span><br><span class="line">button.clicked.connect(line_edit.clear)</span><br></pre></td></tr></table></figure><p><code>connect()</code>将会翻译一个QMetaObject对象，该对象可以与<code>disconnect()</code>方法使用，以断开连接。</p><p>当然，除了预设的函数外，信号也可以连接到自由函数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QApplication,QPushButton</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The &#x27;function&#x27; has been called&quot;</span>)</span><br><span class="line"></span><br><span class="line">app=QApplication()</span><br><span class="line">button=QPushButton(<span class="string">&quot;Call function&quot;</span>)</span><br><span class="line">button.clicked.connect(function)</span><br><span class="line">button.show()</span><br><span class="line">sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><hr><h2 id="信号类">信号类</h2><p>信号类需要是<code>QtCore.Signal()</code>类的变量，一般我们定义信号，是在类方法的上面进行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Button</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">clicked=Signal(Qt.MouseButton)</span><br></pre></td></tr></table></figure><p>然后，我们就可以设置信号的发出：<code>emit</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self.event</span>):</span><br><span class="line">self.clicked.emit(event.button())</span><br></pre></td></tr></table></figure><p>完整代码如下，这个Button将返回按下的鼠标按键类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Button</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    clicked=Signal(Qt.MouseButton)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Button, self).__init__()</span><br><span class="line">        <span class="comment"># 绑定信号与槽</span></span><br><span class="line">        self.clicked.connect(self.PrintE)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @Slot()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PrintE</span>(<span class="params">self,arg</span>):</span><br><span class="line">        <span class="built_in">print</span>(arg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        <span class="comment"># 鼠标移动时，作为触发器发出信号</span></span><br><span class="line">        self.clicked.emit(event.button())</span><br><span class="line"></span><br><span class="line">App=QApplication()</span><br><span class="line">button=Button()</span><br><span class="line">button.show()</span><br><span class="line">sys.exit(App.<span class="built_in">exec</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2022/12/24/%E3%80%90QT%E3%80%91%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%A7%BD/image-20221224220327182.png" alt="image-20221224220327182" style="zoom:50%;"><p><code>Signal</code>的构造函数可以接收一个元组或者一个Python类型或是C类型的列表：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">signal1 = Signal(int)  # Python types</span><br><span class="line">signal2 = Signal(QUrl)  # Qt Types</span><br><span class="line">signal3 = Signal(int, str, int)  # more than one <span class="keyword">type</span></span><br><span class="line">signal4 = Signal((float,), (QDate,))  # optional types</span><br></pre></td></tr></table></figure><p>除此之外，它还可以接收定义信号名称的命名参数名。如果没有传递任何信息，则新信号将与赋值给它的变量具有相同的名称。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TODO</span></span><br><span class="line">signal5 = Signal(<span class="built_in">int</span>, name=<span class="string">&#x27;rangeChanged&#x27;</span>)</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">rangeChanged.emit(...)</span><br></pre></td></tr></table></figure><p><code>Signal</code>还带有可选参数，比如<code>sumResult=Signal(int,arguments=['sum'])</code></p><hr><h2 id="槽类">槽类</h2><p>QObject派生类中的slot应该由装饰器@QtCore.Slot()表示。同样，要定义<code>Signal</code>，只需传递类似QtCore.Signal()类的类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slot(<span class="params"><span class="built_in">str</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">slot_function</span>(<span class="params">self, s</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>Slot()也接受名称和结果关键字。result关键字定义了将返回的类型，可以是C或Python类型。name关键字的行为与Signal()中的相同。如果没有传递任何名称，则新插槽将具有与正在装饰的函数相同的名称。</p><hr><h2 id="重载信号与槽">重载信号与槽</h2><p>我们举个简单的栗子，来使用信号与槽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QApplication,QPushButton</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QObject,Signal,Slot</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Communicate</span>(<span class="title class_ inherited__">QObject</span>):</span><br><span class="line">    <span class="comment"># 创建两个新的信号，一个用于处理整数类型，一个处理字符串类型</span></span><br><span class="line">    speak=Signal((<span class="built_in">int</span>,),(<span class="built_in">str</span>,))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Communicate, self).__init__()</span><br><span class="line">        <span class="comment"># 将 信号1 连接到 槽函数</span></span><br><span class="line">        self.speak[<span class="built_in">int</span>].connect(self.say_something)</span><br><span class="line">        <span class="comment"># 将 信号2 连接到 槽函数</span></span><br><span class="line">        self.speak[<span class="built_in">str</span>].connect(self.say_something)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义一个新的槽函数，将会接收一个整形或者一个字符串</span></span><br><span class="line">    <span class="comment"># 并且打印他们的名字</span></span><br><span class="line"><span class="meta">    @Slot(<span class="params"><span class="built_in">int</span></span>)</span></span><br><span class="line"><span class="meta">    @Slot(<span class="params"><span class="built_in">str</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">say_something</span>(<span class="params">self,arg</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(arg,<span class="built_in">int</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;This is a number: &quot;</span>,arg)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(arg,<span class="built_in">str</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;This is a String: &quot;</span>,arg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app=QApplication(sys.argv)</span><br><span class="line">    someone=Communicate()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发送带有不同参数的&#x27;speak&#x27;信号</span></span><br><span class="line">    <span class="comment"># 当然，如果想要发射`str`类型的信号，必须指定，否则是以默认`int`类型进行的</span></span><br><span class="line">    someone.speak.emit(<span class="number">10</span>)</span><br><span class="line">    someone.speak[<span class="built_in">str</span>].emit(<span class="string">&quot;Hello everybody&quot;</span>)</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">信号与槽</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QChart</title>
    <link href="http://example.com/2022/12/23/%E3%80%90QT%E3%80%91QCharts/"/>
    <id>http://example.com/2022/12/23/%E3%80%90QT%E3%80%91QCharts/</id>
    <published>2022-12-23T14:23:09.884Z</published>
    <updated>2022-12-24T13:08:49.794Z</updated>
    
    <content type="html"><![CDATA[<p>1、QChart的设置</p><p>QChart是组合图表各部分、显示各种数据序列的绘图组件。QChart接口函数众多，其主要接口函数分类整理后见下表。对于一个属性，通常有一个设置函数和一个对应的读取函数，如setTitle()用于设置图表标题，对应的读取图表标题的函数为title()。</p><table><thead><tr><th>分组</th><th>函数名</th><th>功能描述</th></tr></thead><tbody><tr><td>图表外观</td><td>void setTitle()void setTitIeFont()void setTitleBrush()void setTheme()void setMargins()QLegend * legend()void setAnimationOptions()</td><td>设置图表标题.显示在图表上方，支持HTML格式设置图表标题字体设置图表标题画刷设置主题,主题是内置的UI设置,定义了图表的配色设置绘图区与图表边界的4个边距返回图表的图例设置序列或坐标轴的动画效果</td></tr><tr><td>数据序列</td><td>void addSeries()QList&lt; QAbstractSeries &gt; series()void removeSeries()void removeAIISeries()</td><td>添加序列返回图表拥有的序列的列表移除-个序列，但并不删除序列对象移除并删除图表的所有序列</td></tr><tr><td>坐标轴</td><td>void addAxis()QList axes() void setAxisX() void setAxisY() void removeAxis() void createDefaultAxes()</td><td>为图表的某个方向添加坐标轴 返回某个方向的坐标轴列表 设置某个序列的水平方向的坐标轴 设罝某个序列的垂直方向的坐标轴 移除一个坐标轴 根据己添加的序列的类型，创建缺省的坐标轴，前面已有的坐标轴会被删除</td></tr></tbody></table><p>图表的设置和曲线的设置如下图</p><p><img src="https://img-blog.csdnimg.cn/20210507110643793.png" alt="img"></p><p>setAnimationOptions(AnimationOptions options)函数设置图表的动画效果，输入参数是QChart::AnimationOptions枚举类型，有以下几种取值</p><p>QChart::NoAnimation---- 无动画效果</p><p>QChart::GridAxisAnimations---- 背景网格有动画效果：</p><p>QChart::SeriesAnimations---- 序列有动画效果：</p><p>QChart::AllAnimations—-—都有动画效果</p><p>主题是预定义的图表配色样式，是QChart::ChartTheme枚举类型，有多种取值，使图表具有 不同的配色效果</p><p>图例是一个QLegend类的对象，通过QChart::legend()可以获得图表的图例.图例是根据添加的序列自动生成的，但是可以修改图例的一些属性，如在图表中的显示位置、图例文字的字体等。例如，设置图例显示在图表的底部可用下面的语句：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ui.chartView-&gt;<span class="built_in">chart</span>()-&gt;<span class="built_in">legend</span>()-&gt;<span class="built_in">setAlignment</span>(Qt::AlignBottom);</span><br></pre></td></tr></table></figure><p>设置图例文字的字体的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_btnLegendFont_clicked</span><span class="params">()</span></span>&#123;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//图例的字体设置    </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    QFont font=ui-&gt;chartView-&gt;<span class="built_in">chart</span>()-&gt;<span class="built_in">legend</span>()-&gt;<span class="built_in">font</span>();    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> ok=<span class="literal">false</span>;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    font=QFontDialog::<span class="built_in">getFont</span>(&amp;ok,font);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ok)        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ui.chartView-&gt;<span class="built_in">chart</span>()-&gt;<span class="built_in">legend</span>()-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、 QLineSeries 序列的设置</p><p>QLineSeries的主要函数见下表</p><table><thead><tr><th>分组</th><th>函数</th><th>功能描述</th></tr></thead><tbody><tr><td>序列名称</td><td>void setName()</td><td>void setName()</td></tr><tr><td>图表</td><td>QChart* chart()</td><td>返回序列所属的图表对象</td></tr><tr><td>序列外观</td><td>void setVisibte()void show()void hide()void setColor()void setPen()void setBrush()void setOpacity()</td><td>设置序列可见性显示序列，使序列可见隐藏序列，使序列不可见设置序列线条的颜色设置绘制线条的颜色设置绘制数据点的画刷设置序列的透明度，0表示完全透明，1表示不透明</td></tr><tr><td>数据点</td><td>void setPointsVisible()void append()void insert()void replace()void clear()void remove()void removePoints()int count()QPointF&amp; at()QList<QPointF> points()QVetor<QPointF> pointsVector()</QPointF></QPointF></td><td>设置数据点的可见性添加一个数据点到序列在某个位置插入一个数据点替换某个数据点清除所有数据点删除某个数据点从某个位置开始，删除指定个数的数据点数据点的个数返回某个位置上的数据点返回数据点的列表返回数据点的列表，效率更高</td></tr><tr><td>数据点标签</td><td>void setPointLabeIsVisible()void setPointLabelsColor()void setPointLabelsFont()void setPointLabelsFormat()void setPointLabelsClipping()</td><td>设置数据点标签的可见性设置数据点标签的文字颜色设置数据点标签字体设置数据点标签格式设置标签的裁剪属性，缺省为True,即绘图区外的标签被裁剪掉</td></tr><tr><td>坐标轴</td><td>bool attachAxis()bool detachAxis()Qlist attachedAxes()</td><td>为序列附加-个坐标轴，通常需要一个X轴和一个Y轴解除一个附加的坐标轴返回附加的坐标轴的列表</td></tr></tbody></table><p>数据点标签的格式设置使用函数setPointLabelsFormat(),有两种数据可以在数据点标签中显示，有固定的标签：</p><p>@xPoint 数据点的X值；</p><p>@yPoint 数据点的Y值。</p><p>例如，使数据点标签只显示Y值，设置语句为：</p><p>curSeries-&gt;setPointLabelsFormat (‘’@yPoint&quot;);</p><p>如果使数据点标签显示(X,Y)值，设置语句为：</p><p>curSeries-&gt;setPointLabelsFormat(“(@xPoint,@yPoint)”);</p><p>为一个序列添加数据点，可以使用append()函数，也可以使用流操作符“&lt;</p><p>*series0&lt;</p><p>为序列指定坐标轴</p><p>chart-&gt;setAxisX(axisX, series0);//添加X坐标轴</p><p>chart-&gt;setAxisX(axisX, ;series1);//添加X坐标轴</p><p>chart-&gt;setAxisY(axisY, series0);//添加Y坐标轴</p><p>chart-&gt;setAxisY(axisY, series1);//添加Y坐标轴</p><p>QChart:: setAxisX()函数为序列指定X坐标轴，并将坐标轴添加到图表里；QChart::setAxisY() 函数为序列指定Y坐标轴，并将坐标轴添加到图表里。无需再调用序列的attachAxist)函数。若要 使用序列的attachAxis()函数，则实现上述功能的代码如下：</p><p>chart-&gt;addAxis(axisX,Qt::AlignBottom); //坐标轴添加到图表表，并指定方向</p><p>chart-&gt;addAxis(axisY,Qt::AlignLeft);</p><p>series0-&gt;attachAxis (axisX) ;//序列 series0 附加坐标轴</p><p>series0-&gt;attachAxis(axisY);</p><p>seriesl-&gt;attachAxis (axisX);//序列 seriesl 附加坐标轴</p><p>seriesl-&gt;attachAxis(axisY);</p><p>即先用QChart::addAxis()函数添加一个坐标轴到图表，并指定坐标轴的方向，然后用序列的 attachAxis()函数附加坐标轴对象。</p><p>3、QValueAxis坐标轴的设置</p><p>用QValueAxis类的坐标轴，这是数值型坐标轴，与QLineSeries正好配合使用</p><p>QValueAxis类的 主要函数见下表</p><table><thead><tr><th>分组</th><th>函数</th><th>功能描述</th></tr></thead><tbody><tr><td>坐标轴整体</td><td>void setVisible()Qt::Orientation orientation()void setMin()void setMax()void setRange()</td><td>设置坐标轴可见性返回坐标轴方向设置坐标轴最小值设置坐标轴最大值设置坐标轴最小最大值表示的范围</td></tr><tr><td>void setLabelFormat()  void setLabelsAngle()void setLabelsBrush()void setLabelsColor()  void setLabe!sFont()void setLabelsVisible()</td><td>void setLabelFormat()  void setLabelsAngle()void setLabelsBrush()void setLabelsColor()  void setLabe!sFont()void setLabelsVisible()</td><td>设置标签格式，例如可以设置显示的小数点位数设置标签的角度，单位为度设置标签的画刷设置标签文字颜色设置标签文字字体设置轴标签文字是否可见</td></tr><tr><td>轴线和刻度线</td><td>void setTickCount()void setLineVisible()void setLinePen()void setLinePenColor()</td><td>设置坐标轴主刻度的个数设置轴线和刻度线的可见性、设置轴线和刻度线的凼笔设置轴线和刻度线的颜色</td></tr><tr><td>主网格线</td><td>void setGridUneColor()  void setGridLinePen()  void setGridLineVisible()</td><td>设置网格线的颜色设置网格线的画笔设置网格线的可见性</td></tr><tr><td>次刻度线和次网格线</td><td>void setMinorTickCount()void setMinorGridLineColor()void setMinorGridLinePen()void setMinorGridLineVisible()</td><td>设置两个主刻度之间的次刻度的个数设置次网格线的颜色设置次网格线的画笔设置次网格线的可见性</td></tr></tbody></table><p>QValueAxis坐标轴有以下几个组成部分。</p><p>•坐标轴标题：是在坐标轴下方显示的文字，表示坐标轴的名称，图中X轴坐标轴的标题是 “time(secs)”。坐标轴标题除了可以设置文字内容，还可以设置字体、画刷和可见性。</p><p>•轴线和刻度线：轴线是图中从左到右的表示坐标轴的直线，刻度线是垂直于轴线的短线， 包括主刻度线和次刻度线，主刻度个数是tickCount(),每两个主刻度之间的次刻度的个数是 minorTickCount()。</p><p>•轴标签：在主刻度处显示的数值标签文字，可以控制其数值格式、文字颜色和字体等。</p><p>•主网格线：在绘图区与主刻度对应的网格线，可以设置其颜色、线条的pen属性、可见 性等。</p><p>•次网格线：在绘图区与次刻度对应的网格线，可以设置其颜色、线条的pen属性、可见 性等。</p><p>搞清楚坐标轴的这些组成部分后，对其进行属性读取或设置就只需调用相应的函数即可。</p><p><img src="https://img-blog.csdnimg.cn/20210507111520668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3NTI5OTEz,size_16,color_FFFFFF,t_70" alt="img"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">QSizePolicy</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
</feed>
