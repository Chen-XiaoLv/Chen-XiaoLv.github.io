<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岁染</title>
  <icon>https://www.gravatar.com/avatar/7228219e90ece9b38ea5921da1fcc500</icon>
  <subtitle>别来无恙，你在心上</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-02T15:57:46.024Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Kagura</name>
    <email>651421775@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/"/>
    <id>http://example.com/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/</id>
    <published>2023-06-02T15:57:46.023Z</published>
    <updated>2023-06-02T15:57:46.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LaSO-Label-Set-Operations-Networks-for-Multi-Label-Few-Shot-Learning">LaSO: Label-Set Operations Networks for Multi-Label Few-Shot Learning</h2><h3 id="1-研究问题">1 研究问题</h3><p>基于小样本的学习是时下比较热门的研究课题。主流的小样本学习方法一般是通过数据增强，或是利用生成式模型构建合成样本。这些合成样本可以用来改善少样本任务的泛化性能，但截止至本文发表前，目前所有关于小样本分类的工作都是基于单标签进行的。针对多标签任务和复杂场景，目前没有特别优秀的解决方案。</p><h3 id="2-主要贡献">2 主要贡献</h3><p>本文提出了一种在特征空间构建语义内容的神经网络，该网络通过在特征空间操纵语义的方式，生成感兴趣的多标签样本，从而填补了目前多标签小样本学习方面的空白。除此之外，本文为小样本多标签学习提供了一个新的基准，并附带了一系列性能评估方式和指标。</p><h3 id="3-解决方案和核心方法">3 解决方案和核心方法</h3><h4 id="3-1-标签集合操作">3.1 标签集合操作</h4><p>本文的核心思想在于通过构建一组特征空间的集合操作，从而在语义层面上获取新的合成数据。例如：样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>是一张在动物园拍摄的笼子+老虎照片，样本B是笼子+鸡照片，样本C是笼子+兔照片，通过网络挖掘特征空间上潜在的语义向量，可以将这些样本表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">{</mo><mtext>笼子，老虎</mtext><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">{</mo><mtext>笼子，鸡</mtext><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">{</mo><mtext>笼子，兔</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A\{笼子，老虎\},B\{笼子，鸡\},C\{笼子，兔\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">{</span><span class="mord cjk_fallback">笼子，老虎</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">{</span><span class="mord cjk_fallback">笼子，鸡</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">{</span><span class="mord cjk_fallback">笼子，兔</span><span class="mclose">}</span></span></span></span>。传统网络对这些样本进行训练，是很难生成大自然中的老虎的，但是通过一系列集合操作：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>−</mo><mo stretchy="false">(</mo><mi>B</mi><mo>∩</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A-(B\cap C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>，即可提取到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">{</mo><mtext>老虎</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A\{老虎\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">{</span><span class="mord cjk_fallback">老虎</span><span class="mclose">}</span></span></span></span>这一信息。</p><p>基于特征空间和标签集合操作，可以从图像中学习到隐式的语义信息，对数据集进行一定的增强，扩展了特征空间包含的语义信息。</p><img src="/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20230528161959386.png" alt="image-20230528161959386" style="zoom:25%;"><h4 id="3-2-网络架构">3.2 网络架构</h4><img src="/2023/06/02/LaSO%20Label-Set%20Operations%20Networks%20for%20Multi-Label%20Few-Shot%20Learning/Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20230528162113081.png" alt="image-20230528162113081" style="zoom:25%;"><p>本文的网络架构可分为特征提取网络、交集信息网络、并集信息网络、差分信息网络和分类器。</p><p>特征提取网络backbone由迁移的InceptionV3和ResNet-34构成，对于提取到的特征，进入三个子网络进行学习。这三个子网络均是由三层全连接层实现的，分别用于学习和提取集合描述特征。最终的结构将由特征提取网络学习到的特征加上集合描述特征进入多层感知机分类器获取。</p><h4 id="3-3-损失函数">3.3 损失函数</h4><p>本文的损失函数可分为多标签分类损失和重构损失。</p><h5 id="3-3-1-多标签分类损失">3.3.1 多标签分类损失</h5><p>该损失就是二元交叉熵损失函数，计算公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>l</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">BCE(s,l)=-\sum_i l_i\log \sigma(s_i)+(1-l_i)\log(1-\sigma(s_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p><p>考虑到特征提取器获得的特征信息<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">F_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>Y</mi></msub></mrow><annotation encoding="application/x-tex">F_Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，可计算分类损失：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow></msub><mo>=</mo><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{loss}=BCE(C(F_X),L(X))+BCE(C(F_Y),L(Y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>代表集合描述特征。整个LaSO网络集合提取模块的损失计算如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>a</mi><mi>S</mi><msub><mi>O</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow></msub><mo>=</mo><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mspace linebreak="newline"></mspace><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>∪</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mspace linebreak="newline"></mspace><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>s</mi><mi>u</mi><mi>b</mi></mrow></msub><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>−</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LaSO_{loss}=BCE(C(Z_{int},L(X)\cap L(Y))+\\BCE(C(Z_{uni},L(X)\cup L(Y))+\\BCE(C(Z_{sub},L(X)- L(Y))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">BCE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))</span></span></span></span></span></p><h5 id="3-3-2-重构损失">3.3.2 重构损失</h5><p>重构损失要求保证交集网络和并集网络的对称性，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>交换位置时，输出的结果不会改变。其误差计算如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>R</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow><mrow><mi>s</mi><mi>y</mi><mi>m</mi></mrow></msubsup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>+</mo><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">R_{loss}^{sym}=\frac{1}{n}||z_{int}-M_{int}(F_Y,F_X)||_2+\\\frac{1}{n}||z_{uni}-M_{uni}(F_Y,F_X)||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0836em;vertical-align:-0.3013em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3987em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>注：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>X</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>Y</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_{int}=M_{int}(F_X,F_Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>同时，对于差集特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo>−</mo><msub><mi>F</mi><mi>Y</mi></msub></mrow><annotation encoding="application/x-tex">F_X-F_Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和交集特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo>∩</mo><msub><mi>F</mi><mi>Y</mi></msub></mrow><annotation encoding="application/x-tex">F_X\cap F_Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这两应该可以还原得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub></mrow><annotation encoding="application/x-tex">F_X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>R</mi><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow><mi>m</mi></msubsup><mi>c</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mi>x</mi></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>Z</mi><mrow><mi>s</mi><mi>u</mi><mi>b</mi></mrow></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>+</mo><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>n</mi></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mi>Y</mi></msub><mo>−</mo><msub><mi>M</mi><mrow><mi>u</mi><mi>n</mi><mi>i</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>M</mi><mrow><mi>s</mi><mi>u</mi><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Y</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">R_{loss}^mc=\frac{1}{n}||F_x-M_{uni}(Z_{sub},z_{int})||_2+\\\frac{1}{n}||F_Y-M_{uni}(M_{sub}(F_Y,F_X),z_{int})||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9614em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oss</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">ni</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h4 id="结论">结论</h4><p>本文提出的基于特征空间上集合运算的多标签小样本学习填补了该领域的空白，与传统数据扩充方式有所不同的是，该方法并没有在图像层面上构建合成数据，而是在特征维度上进行扩充，通过已学习的小样本潜在语义之间的关系进行推理学习，从而起到了数据增强的作用。但本文依旧存在一些局限性，譬如当小样本数据语义信息较为单调，或是语义集合之间不存在交集，这可能导致模型学习到的数据产生一定的混淆，加大容量的同时可能效果提升不明显。本文使用了最简单的多层感知机作为集合网络和分类网络，这部分具有较大的改进空间，可以考虑采用先进的网络架构进行优化。特征层面上的集合操作取得了可行的解，是否也可以通过别的数学方法对数据语义进行扩充增广，也许是该架构可行的改进方案之一。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LaSO-Label-Set-Operations-Networks-for-Multi-Label-Few-Shot-Learning&quot;&gt;LaSO: Label-Set Operations Networks for Multi-Label Few-Shot L</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【数据分析实践】猫十二分类</title>
    <link href="http://example.com/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/"/>
    <id>http://example.com/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/</id>
    <published>2023-05-20T07:12:17.287Z</published>
    <updated>2023-05-25T15:16:07.152Z</updated>
    
    <content type="html"><![CDATA[<h1>【数据科学项目实践】基于ResNet和Inception v3的猫十二分类迁移学习</h1><h2 id="一、项目背景">一、项目背景</h2><p>本项目来源于飞浆平台的图像分类学习赛。<a href="https://aistudio.baidu.com/aistudio/competition/detail/136/0/introduction">指路链接</a></p><ul><li>代码和结果来源于我的小组同学，没有做任何的改动，我这边仅做一个总结归纳，以便学习和复盘</li></ul><p>简单把赛题Copy一下：</p><blockquote><p>本场比赛要求参赛选手对十二种猫进行分类，属于CV方向经典的图像分类任务。图像分类任务作为其他图像任务的基石，可以让大家更快上手计算机视觉。</p></blockquote><p><strong>数据集</strong></p><p>比赛数据集包含12种猫的图片，并划分为训练集与测试集。</p><p><strong>训练集：</strong> 提供高清彩色图片以及图片所属的分类，共有2160张猫的图片，含标注文件。</p><p><strong>测试集：</strong> 仅提供彩色图片，共有240张猫的图片，不含标注文件。</p><h2 id="二、Baseline">二、Baseline</h2><h3 id="2-1-准备阶段">2.1 准备阶段</h3><p>主要是导入一些要用到的模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> models,transforms</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader,Dataset</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch.optim <span class="keyword">import</span> lr_scheduler</span><br><span class="line"><span class="keyword">import</span> copy</span><br></pre></td></tr></table></figure><h3 id="2-2-数据读取阶段">2.2 数据读取阶段</h3><p>这个阶段就是如何将数据读取到模型中来，由于猫猫是图像数据，所以这边将其读取成数字图像一般是通过数组来存在内存中的，考虑到中间过程的可视化，我们通过<code>PIL</code>来读取<code>Image</code>类型的数据。这步可以写作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=np.fromfile(imgPath,dtype=np.float32) <span class="comment"># 读取成ndarray</span></span><br><span class="line">x=cv2.imdecode(x,<span class="number">1</span>) <span class="comment"># 将区间转化为[0,255]</span></span><br><span class="line">img=PIL.Image.fromarray(x) <span class="comment"># 读取成Image对象</span></span><br></pre></td></tr></table></figure><img src="/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/image-20230525222735963.png" alt="image-20230525222735963" style="zoom:50%;"><p>上图中，左边的是Image类型的数据，右边是cv读取的数据，可以发现发生了颜色通道的调换。实际上，读取到cv这部分就好了，可以调用多窗口的<code>imshow</code>进行数据可视化。</p><p>我们现在拿到了猫猫图像！那么接下来就要拿到猫猫的标签啦，一般情况下，我们会将数据跟标签记录在一个文档里，每一行对应一个数据(图片)路径和一个标签：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件标签</span></span><br><span class="line">filelist=<span class="string">r&quot;data_split_list.txt&quot;</span></span><br><span class="line">imgs,labels=[],[] <span class="comment"># 存储列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filelist) <span class="keyword">as</span> f:</span><br><span class="line">    lines=[_.strip() <span class="keyword">for</span> _ <span class="keyword">in</span> f] <span class="comment"># 去除空白</span></span><br><span class="line">    np.random.shuffle(lines) <span class="comment"># 随机打乱</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> lines:</span><br><span class="line">        img_path,label=l.split(<span class="string">&#x27;\t&#x27;</span>) <span class="comment"># 获取图片路径和标签</span></span><br><span class="line">        img=Image.fromarray(cv2.imdecode(np.fromfile(img_path,np.float32),<span class="number">1</span>))</span><br><span class="line">        imgs.append(img)</span><br><span class="line">        labels.append(label)</span><br></pre></td></tr></table></figure><p>我们将这部分工作封装成一个函数，就可以实现数据的读取了。</p><p>接下来的工作，就是将数据转化为<code>PyTorch</code>接受的格式啦。众所周知，<code>PyTorch</code>的模型训练跟推理一般是通过迭代一个<code>DataLoader</code>对象来进行的，而<code>DataLoader</code>对象的数据集是一个<code>DataSet</code>类。所以这里我们需要构建一个<code>Dataset</code>类啦：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(myData,self).__init__()</span><br><span class="line">        self.data=[]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.data[x]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.data)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>嗯，把上面三个函数填完就阔以啦。</p><p>对于图像数据，我们需要应用一个<code>transforms</code>，这里做最简单的变换：<code>转为Tensor，尺寸裁剪，标准化</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">self.transform=transforms.Compose(</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Resize((<span class="number">299</span>,<span class="number">299</span>)),</span><br><span class="line">    transforms.Normalize((<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>),(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>最终的Dataset如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,kind</span>):</span><br><span class="line">        <span class="built_in">super</span>(myData, self).__init__()</span><br><span class="line">        self.mode=kind</span><br><span class="line">        self.transform=transforms.Compose(</span><br><span class="line">            transforms.ToTensor(),</span><br><span class="line">            transforms.Resize((<span class="number">299</span>,<span class="number">299</span>)),</span><br><span class="line">            transforms.Normalize((<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>),(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>))</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> kind==<span class="string">&quot;test&quot;</span>:</span><br><span class="line">            self.imgs=self.load_origin_data()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.imgs,self.labels=self.load_origin_data()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="keyword">if</span> self.mode==<span class="string">&quot;test&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.transform(self.imgs[item])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.transform(self.imgs[item]),torch.tensor(self.labels[item])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.imgs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_origin_data</span>(<span class="params">self</span>):</span><br><span class="line">        filelist = <span class="string">&#x27;./data/%s_split_list.txt&#x27;</span> % self.mode</span><br><span class="line">        imgs,labels=[],[]</span><br><span class="line">        data_dir=os.getcwd()+<span class="string">&quot;/data&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.mode==<span class="string">&#x27;train&#x27;</span> <span class="keyword">or</span> self.mode==<span class="string">&#x27;val&#x27;</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(filelist) <span class="keyword">as</span> f:</span><br><span class="line">                lines=[_.strip() <span class="keyword">for</span> _ <span class="keyword">in</span> f]</span><br><span class="line">                <span class="keyword">if</span> self.mode==<span class="string">&#x27;train&#x27;</span>:</span><br><span class="line">                    np.random.shuffle(lines)</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> lines:</span><br><span class="line">                        img_path,label=l.split(<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                        img_path=os.path.join(data_dir,img_path)</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            img=Image.fromarray(cv2.imdecode(np.fromfile(img_path,dtype=np.float32),<span class="number">1</span>))</span><br><span class="line">                            imgs.append(img)</span><br><span class="line">                            labels.append(<span class="built_in">int</span>(label))</span><br><span class="line">                        <span class="keyword">except</span> Exception(<span class="string">&quot;The path %s&quot;</span>%img_path+<span class="string">&quot; may be wrong&quot;</span>) <span class="keyword">as</span> e:</span><br><span class="line">                            <span class="built_in">print</span>(e)</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">return</span> imgs,labels</span><br><span class="line">                <span class="keyword">elif</span> self.mode==<span class="string">&quot;test&quot;</span>:</span><br><span class="line">                    full_lines = os.listdir(<span class="string">&#x27;data/cat_12_test/&#x27;</span>)</span><br><span class="line">                    lines = [line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> full_lines]</span><br><span class="line">                    <span class="keyword">for</span> img_path <span class="keyword">in</span> lines:</span><br><span class="line">                        img_path = os.path.join(data_dir, <span class="string">&quot;cat_12_test/&quot;</span>, img_path)</span><br><span class="line">                        img = Image.<span class="built_in">open</span>(img_path)</span><br><span class="line">                        imgs.append(img)</span><br><span class="line">                    <span class="keyword">return</span> imgs</span><br></pre></td></tr></table></figure><h3 id="2-3-模型训练">2.3 模型训练</h3><p>我们刚刚说<code>PyTorch</code>的模型训练跟推理一般是通过迭代一个<code>DataLoader</code>对象来进行的，现在就是需要构建这个东西啦：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_Dataloader</span>():</span><br><span class="line">    img_datasets = &#123;x: myData(x) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>, <span class="string">&#x27;test&#x27;</span>]&#125;</span><br><span class="line">    dataset_sizes = &#123;x: <span class="built_in">len</span>(img_datasets[x]) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;val&#x27;</span>, <span class="string">&#x27;test&#x27;</span>]&#125;</span><br><span class="line"></span><br><span class="line">    train_loader = DataLoader(</span><br><span class="line">        dataset=img_datasets[<span class="string">&#x27;train&#x27;</span>],</span><br><span class="line">        batch_size=<span class="number">24</span>,</span><br><span class="line">        shuffle=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    val_loader = DataLoader(</span><br><span class="line">        dataset=img_datasets[<span class="string">&#x27;val&#x27;</span>],</span><br><span class="line">        batch_size=<span class="number">1</span>,</span><br><span class="line">        shuffle=<span class="literal">False</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    test_loader = DataLoader(</span><br><span class="line">        dataset=img_datasets[<span class="string">&#x27;test&#x27;</span>],</span><br><span class="line">        batch_size=<span class="number">1</span>,</span><br><span class="line">        shuffle=<span class="literal">False</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    dataloaders = &#123;</span><br><span class="line">        <span class="string">&#x27;train&#x27;</span>: train_loader,</span><br><span class="line">        <span class="string">&#x27;val&#x27;</span>: val_loader,</span><br><span class="line">        <span class="string">&#x27;test&#x27;</span>: test_loader</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dataset_sizes,dataloaders</span><br></pre></td></tr></table></figure><p>接下来就是单纯的训练过程了。步骤总结如下：</p><ul><li>参数设置阶段<ul><li>设置GPU</li><li>设置优化器、损失函数、学习策略</li></ul></li><li>训练过程<ul><li>迭代DataLoader</li><li>优化器梯度清零</li><li>模型推理</li><li>误差计算</li><li>反向传播</li><li>更新优化器、学习率</li></ul></li><li>模型评估<ul><li>计算每轮的误差累计值、精度</li><li>选择最优精度并进行模型保存</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Train</span>(<span class="params">model,criterion,optimizer,scheduler,num_epoches=<span class="number">25</span></span>):</span><br><span class="line">    dataset_sizes,dataloaders=get_Dataloader()</span><br><span class="line">    device=torch.device(<span class="string">&quot;cuda:0&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">    best_model_wts=copy.deepcopy(model.state_dict())</span><br><span class="line">    best_acc=<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epoches):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Epoch &#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(epoch+<span class="number">1</span>,num_epoches))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> phase <span class="keyword">in</span> [<span class="string">&#x27;train&#x27;</span>,<span class="string">&#x27;val&#x27;</span>]:</span><br><span class="line">            <span class="keyword">if</span> phase==<span class="string">&quot;train&quot;</span>:</span><br><span class="line">                model.train()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                model.<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line">            trian_loss=<span class="number">0.0</span></span><br><span class="line">            train_corrects=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> inputs,labels <span class="keyword">in</span> dataloaders[phase]:</span><br><span class="line">                inputs,labels=inputs.to(device),labels.to(device)</span><br><span class="line">                optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">with</span> torch.set_grad_enabled(phase==<span class="string">&quot;train&quot;</span>):</span><br><span class="line">                    <span class="comment"># 上下文管理器，参数是Bool，用于确定是否对Block内的语句进行求导</span></span><br><span class="line">                    y_pre=model(inputs)</span><br><span class="line">                    _,y_pre=torch.<span class="built_in">max</span>(y_pre,<span class="number">1</span>)</span><br><span class="line">                    loss=criterion(y_pre,labels)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> phase==<span class="string">&quot;train&quot;</span>:</span><br><span class="line">                        loss.backward()</span><br><span class="line">                        optimizer.step()</span><br><span class="line"></span><br><span class="line">                trian_loss+=loss.item()*inputs.size(<span class="number">0</span>)</span><br><span class="line">                train_corrects+=torch.<span class="built_in">sum</span>(y_pre==labels)</span><br><span class="line">            <span class="keyword">if</span> phase==<span class="string">&quot;train&quot;</span>:</span><br><span class="line">                scheduler.step()</span><br><span class="line"></span><br><span class="line">            epoch_loss=trian_loss/dataset_sizes[phase]</span><br><span class="line">            epoch_acc=train_corrects.<span class="built_in">float</span>()/dataset_sizes[phase]</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; Loss :&#123;:.4f&#125; Acc &#123;:.4&#125;&quot;</span>.<span class="built_in">format</span>(phase,epoch_loss,epoch_acc))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> phase==<span class="string">&quot;val&quot;</span> <span class="keyword">and</span> epoch_acc&gt;best_acc:</span><br><span class="line">                best_acc=epoch_acc</span><br><span class="line">                best_model_wts=copy.deepcopy(model.state_dict())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Best val Acc : &#123;:4f&#125;&quot;</span>.<span class="built_in">format</span>(best_acc))</span><br><span class="line">    model.load_state_dict(best_model_wts)</span><br><span class="line">    <span class="keyword">return</span> model</span><br></pre></td></tr></table></figure><h2 id="三、迁移学习">三、迁移学习</h2><p>迁移学习(Transfer Learning)就是利用预训练好的大模型参数去学习其他数据的分布。</p><p>这个过程我们一般不希望原始模型参数改变，因而一般需要做如下工作:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> model.parameters():</span><br><span class="line">    param.requires_grad=<span class="literal">False</span></span><br></pre></td></tr></table></figure><p>然后，我们需要构架最后一层全连接层，用来学习新的数据集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fc=nn.Linear(<span class="number">2048</span>,num_classes)</span><br></pre></td></tr></table></figure><p>也就是最后需要训练的就是这个全连接层了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Inception</span>(<span class="params">device</span>):</span><br><span class="line">    <span class="comment"># 用训练好的模型进行迁移</span></span><br><span class="line">    model_ft=models.inception_v3(pretrained=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># model_ft=models.resnet50(pretrained=True)</span></span><br><span class="line">    <span class="comment"># model_ft=models.alexnet(pretrained=True)</span></span><br><span class="line"></span><br><span class="line">    num_ftrs=model_ft.fc.in_features</span><br><span class="line">    model_ft.fc=nn.Linear(num_ftrs,<span class="number">12</span>) <span class="comment"># 设置全连接层最终结果</span></span><br><span class="line">    </span><br><span class="line">    model_ft=model_ft.to(device)</span><br><span class="line"></span><br><span class="line">    cirterion=nn.CrossEntropyLoss()</span><br><span class="line">    optimizer_ft=torch.optim.SGD(model_ft.parameters(),lr=<span class="number">0.001</span>,momentum=<span class="number">0.9</span>)</span><br><span class="line">    exp_lr_scheduler=lr_scheduler.StepLR(optimizer_ft,step_size=<span class="number">5</span>,gamma=<span class="number">0.1</span>)</span><br><span class="line">    model_ft=Train(model_ft,cirterion,optimizer_ft,exp_lr_scheduler,num_epoches=<span class="number">30</span>)</span><br></pre></td></tr></table></figure><h2 id="四、结果分析">四、结果分析</h2><ul><li><p>Inception</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Epoch 30/30</span><br><span class="line">train Loss: 0.1065 Acc: 0.9858</span><br><span class="line">val Loss: 0.3026 Acc: 0.8983</span><br><span class="line">Best val Acc: 0.918336</span><br></pre></td></tr></table></figure></li><li><p>AlexNet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Epoch 30/30</span><br><span class="line">train Loss: 0.1403 Acc: 0.9601</span><br><span class="line">val Loss: 0.6815 Acc: 0.7750</span><br><span class="line">Best val Acc: 0.779661</span><br></pre></td></tr></table></figure></li><li><p>ResNet50</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Epoch 30/30</span><br><span class="line">train Loss: 0.0480 Acc: 0.9973</span><br><span class="line">val Loss: 0.3157 Acc: 0.9060</span><br><span class="line">Best val Acc: 0.909091</span><br></pre></td></tr></table></figure></li></ul><p>中间部分特征图的结果如下：</p><img src="/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/image-20230525231256607.png" alt="image-20230525231256607" style="zoom:33%;"><p>特征图嘛，主打的就是一个抽象。可以发现同一张图经过不同的卷积核作用后，有了全新的高维特征，这些特征也主打的就是一个难以解释，反正就看个乐。</p><img src="/2023/05/20/%E3%80%90%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5%E3%80%91%E7%8C%AB%E5%8D%81%E4%BA%8C%E5%88%86%E7%B1%BB/image-20230525231541473.png" alt="image-20230525231541473" style="zoom:50%;"><p>基本上7个epoch就收敛了。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">基于ResNet的猫十二分类迁移学习</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="项目实践" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/05/10/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91GNN/"/>
    <id>http://example.com/2023/05/10/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91GNN/</id>
    <published>2023-05-09T18:02:46.083Z</published>
    <updated>2023-05-09T18:04:11.640Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GNN_Core</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,A,inC,outC</span>):</span><br><span class="line">        <span class="built_in">super</span>(GNN_Core, self).__init__()</span><br><span class="line">        <span class="comment"># Features Matrix X: [N,D]</span></span><br><span class="line">        <span class="comment"># Adjacent Matrix A: [N,D]</span></span><br><span class="line">        N=A.shape[<span class="number">0</span>]</span><br><span class="line">        self.self_adjecent=nn.Sequential(</span><br><span class="line">            nn.Linear(N,<span class="number">64</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">64</span>,N)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.adjacent=nn.Sequential(</span><br><span class="line">            nn.Linear(inC,<span class="number">32</span>),</span><br><span class="line">            nn.BatchNorm1d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">32</span>,outC)</span><br><span class="line">        )</span><br><span class="line">        self.A=A</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x,w</span>):</span><br><span class="line">        <span class="comment"># By the way, there is a small knowledge which about Diag</span></span><br><span class="line">        <span class="comment"># We can get Diag by torch.diag(M) and rebuild the dimension by torch.diag_embed(x)</span></span><br><span class="line">        <span class="comment"># by this approach, we also can easily make diag to 0.</span></span><br><span class="line">        <span class="comment"># Ori-torch.diag_embed(torch.diag(Ori)</span></span><br><span class="line">        sA=self.self_adjecent(torch.diag(x)) <span class="comment"># Only need to train the diag of matrix</span></span><br><span class="line">        A=self.adjacent(torch.bmm(self.A,x)) <span class="comment"># simulate the multiplication between A and X</span></span><br><span class="line">        A=w*A <span class="comment"># w means normalization function</span></span><br><span class="line">        <span class="comment"># A [B,N,O]</span></span><br><span class="line">        <span class="comment"># sA [N]</span></span><br><span class="line">        <span class="keyword">return</span> (A.T+sA).T</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,A,hidden_num,hidden_out</span>):</span><br><span class="line">        <span class="built_in">super</span>(GNN, self).__init__()</span><br><span class="line">        self.hiddens=nn.Sequential()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(hidden_num):</span><br><span class="line">            self.hiddens.append(GNN_Core(A,hidden_out[i],hidden_out[i+<span class="number">1</span>]))</span><br><span class="line">            <span class="keyword">if</span> i&lt;hidden_num-<span class="number">1</span>:</span><br><span class="line">                self.hiddens.append(nn.BatchNorm1d(hidden_out[i+<span class="number">1</span>]))</span><br><span class="line">                self.hiddens.append(nn.ReLU())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.hiddens(x)</span><br><span class="line">        <span class="keyword">return</span> F.softmax(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Loss</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Loss, self).__init__()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x,y</span>):</span><br><span class="line">        <span class="keyword">return</span> torch.<span class="built_in">sum</span>(y*np.log(x)+(<span class="number">1</span>-y)*np.log(<span class="number">1</span>-x))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>():</span><br><span class="line">    model=GNN(<span class="literal">None</span>,<span class="number">3</span>,<span class="number">128</span>)</span><br><span class="line">    loss_func=Loss()</span><br><span class="line"></span><br><span class="line">    optimizer=torch.optim.SGD()</span><br><span class="line">    data=<span class="literal">None</span></span><br><span class="line">    y=<span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 简单模拟下</span></span><br><span class="line">    y_pre=model(data)</span><br><span class="line">    optimizer.zero_grad()</span><br><span class="line">    loss=loss_func(y_pre,y)</span><br><span class="line">    loss.backward()</span><br><span class="line">    optimizer.step()</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>English Essay</title>
    <link href="http://example.com/2023/05/09/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91English%20Essay/"/>
    <id>http://example.com/2023/05/09/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91English%20Essay/</id>
    <published>2023-05-08T16:00:00.000Z</published>
    <updated>2023-05-09T16:01:42.411Z</updated>
    
    <content type="html"><![CDATA[<h3 id="The-Dissertation-Revision-Trap">The Dissertation Revision Trap</h3><blockquote><p>Imagine this common scenario: You’ve put your heart, blood, and time into creating and submitting an initial dissertation prospectus, concept paper, or dissertation proposal – only to receive a request for revision.</p></blockquote><p>想象一下这个常见的场景:你投入了心血和时间来创作和提交一份初步的论文大纲、概念论文或论文提案，结果却收到了修改的请求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">put your heart, blood, <span class="keyword">and</span> time into : 投身于</span><br></pre></td></tr></table></figure><blockquote><p>Now, it’s up to you to revise this thing and return it to your chair and/or committee members such that you can move forward. You make the revisions based upon your understanding of the requests being made. You resubmit. Then, it happens: You receive more request for revision.</p></blockquote><p>现在，由你来修改这个东西，并把它还给你的主席和/或委员会成员，以便你能继续前进。你根据你对所提要求的理解进行修改。你重新提交。然后，事情发生了： 你收到更多的修改要求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">it<span class="string">&#x27;s up to ：取决于</span></span><br><span class="line"><span class="string">such that ： 如此...以至于</span></span><br><span class="line"><span class="string">based upon : 取决于</span></span><br></pre></td></tr></table></figure><blockquote><p>It’s at this point where most candidates get stuck. It’s from this point that so many candidates will never advance. Such candidates are forever caught in the cycle of what I call “The Dissertation Revision Trap.”</p></blockquote><p>正是在这一点上，大多数候选人被卡住了。正是从这一点出发，许多候选人将永远无法前进。这些候选人永远陷入了我称之为 &quot;论文修改陷阱 &quot;的循环之中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">at this point : 在这时，在此处</span><br><span class="line">It<span class="string">&#x27;s at this point where ..... : xxx在这个地方</span></span><br><span class="line"><span class="string">get stuck : 卡住了</span></span><br><span class="line"><span class="string">be forever caught in the cycle of : 陷入循环</span></span><br></pre></td></tr></table></figure><blockquote><p>Here are reasons that candidates get stuck in this trap:</p><p>POISON #1 : They submit their work far too early.</p><p>Candidates sometimes submit their “draft” before it’s fully ready for chair and committee eyes. While checking in with one’s chair, asking for feedback about specific elements of one’s draft, and asking specific questions about executing specific section of one’s draft are great strategies to writing a great dissertation, submitting an all-out draft before you know that is fully meets the expectations of a finished draft is pretty unwise.</p></blockquote><p>以下是候选人陷入这个陷阱的原因：</p><p>POISON1：他们过早地提交了他们的工作。</p><p>候选人有时会在自己的 &quot;草稿 &quot;完全准备好供主席和委员会审阅之前就提交。虽然向主席了解情况，就草案的具体内容征求反馈意见，并就草案的具体部分提出具体问题，是写出一篇好论文的好策略，但在你知道完全满足完成草案的期望之前就提交一份全面的草案是非常不明智的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">specific : 特定的，明确的</span><br><span class="line">pretty unwise : 及其不明智</span><br></pre></td></tr></table></figure><blockquote><p>POISON #2 : They only address the revision request.</p><p>When you receive a request from a committee member, it’s natural to want to satisfy that revision. However, satisfying that revision request alone is not enough. Often you have to adjust other elements of your draft to satisfy the revision request AND address any paper-wide changes required to accommodate the request.</p><p>The antidote: Make the requested revision and examine how the draft needs to change around the revision. Carefully check your line of logic to make sure that it still holds with the new revision. In the event you don’t understand the revision request, call the requester on the phone or meet face-to-face to ask some questions.</p></blockquote><p>POISON2:它们只处理修改请求。</p><p>当你收到一个委员会成员的请求时，想要满足这个修改是很自然的。然而，仅仅满足修改要求是不够的。通常，你必须调整草稿的其他元素以满足修改要求，并处理为适应要求而需要进行的所有纸张更改。</p><p>解决方法:进行要求的修改，并检查草稿需要如何围绕修改进行更改。仔细检查你的逻辑线，以确保它仍然适用于新的修订。如果你不明白修改请求，打电话给请求者或面对面地问一些问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">address : 也有修订的意思</span><br><span class="line">accommodate : 容纳，满足，迁就</span><br><span class="line">it<span class="string">&#x27;s natural to do : 自然而然做</span></span><br><span class="line"><span class="string">antidote : 解毒药(矫正方法)</span></span><br><span class="line"><span class="string">make sure : 确保</span></span><br><span class="line"><span class="string">In the event : 假如，倘若</span></span><br></pre></td></tr></table></figure><blockquote><p>POISON #3: They go overboard in their revisions.</p><p>Sometimes, rarely, candidates will change their draft more than required. For example, if a revision request was made to augment a minute element of a single sentence and the candidate made unnecessary global changes to one’s literature review based upon that single request, that would be an overreaction.</p><p>The antidote: Ask careful questions to the person requesting the revision. Understand the extent of the change before you make it.</p></blockquote><p>POISON3:他们在修改中做得太过火了。</p><p>有时，很少，候选人会修改他们的草稿超过要求。例如，如果一个修改请求是为了增加一个句子的一个微小元素，而候选人根据这个请求对他的文献综述进行了不必要的全面修改，这将是反应过度。</p><p>解决方法:向要求修改的人仔细提问。在做出改变之前，要了解改变的程度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go overboard <span class="keyword">in</span> : 太过火了</span><br><span class="line">rarely : 很少</span><br><span class="line">the extent of : 程度</span><br></pre></td></tr></table></figure><hr><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;The-Dissertation-Revision-Trap&quot;&gt;The Dissertation Revision Trap&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Imagine this common scenario: You’ve put your he</summary>
      
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>【OpenCV】OpenCV基本操作</title>
    <link href="http://example.com/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2023-03-21T09:32:51.556Z</published>
    <updated>2023-03-21T16:38:41.557Z</updated>
    
    <content type="html"><![CDATA[<h1>OpenCV基本操作</h1><hr><p>OpenCV本质上还是C/C++架构，只不过我们可以通过Python的接口来调用底层代码。其中的模块大致如下：</p><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321173939350.png" alt="image-20230321173939350" style="zoom:50%;"><p><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321174122542.png" alt="image-20230321174122542"></p><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321174217314.png" alt="image-20230321174217314" style="zoom:50%;"><hr><h2 id="3-1-图像输入与输出">3.1 图像输入与输出</h2><p>处理图像之前，需要将图像文件从磁盘上读取到内存，处理完毕后再保存到内存。<code>imgproc</code>模块提供了这些全局函数，用来读取或保存图像文件。</p><h3 id="3-1-1-读取图像">3.1.1  读取图像</h3><p>函数<code>imread</code>用于读取图像文件或加载图像文件。其声明如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv.imread(filename[, flags])-&gt;retval</span><br></pre></td></tr></table></figure><p>这个<code>flags</code>参数表示读取模式，输入是一组枚举数据，取值如下：</p><ul><li><code>cv.IMREAD_ANYDEPTH:2</code>,若输入的图像深度是<code>16</code>或者<code>32</code>，就返回对应深度的图像，否则转换为<code>8</code>位图像返回。</li><li><code>cv.IMREAD_COLOR:1</code>，将输入图像转化为三通道彩色图像</li><li><code>cv.IMREAD_GRAYSCALE:0</code>，将图像转为一通道灰度图</li><li><code>cv.IMREAD_UNCHANGED:-1</code>，原封不动读取原图</li></ul><p>如果这个函数没有读取成功，则会返回<code>None</code>。值得注意的是，读取的结果是一个<code>Ndarray</code>数组，可以通过<code>Numpy</code>的方法对其进行处理。</p><p>除却<code>imread</code>外，我们还可以通过<code>imdecode</code>从缓存中读取图像。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv.imdecode(np.fromfile(imgpath,dtype=np.unint8),flag)</span><br></pre></td></tr></table></figure><h3 id="3-2-2-保存图像">3.2.2  保存图像</h3><p>我们现在用函数<code>imwrite</code>来保存图像。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imwrite(filename,img[.params])-&gt;retval</span><br></pre></td></tr></table></figure><p>好了，我们直接来看一个例子吧，<strong>读取并保存图像</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取一张图像</span></span><br><span class="line">img=cv.imread(<span class="string">&quot;./Files/img1.png&quot;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># 在namewindow(GUI)显示图像</span></span><br><span class="line">cv.imshow(<span class="string">&quot;window1&quot;</span>,img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.imwrite(<span class="string">&quot;./Files/img4.jpg&quot;</span>,img)</span><br><span class="line">cv.destroyWindow(<span class="string">&quot;window1&quot;</span>)</span><br></pre></td></tr></table></figure><p>当然除了通过namewindow显示图像外，我们也可以调用matplotlib的接口：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">img=cv.imread(<span class="string">&quot;./Files/img1.png&quot;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>如果我们手上有两幅图像，可以通过线性加和的方式将其<strong>混合</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图像混合</span></span><br><span class="line">alpha=<span class="number">0.5</span></span><br><span class="line">img1=cv.imread(<span class="string">&quot;./Files/img2.png&quot;</span>)</span><br><span class="line">img2=cv.imdecode(np.fromfile(<span class="string">&quot;./Files/img3.png&quot;</span>,dtype=np.uint8),-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> img1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    sys.exit(<span class="string">&quot;Could not read the image1&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> img2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    sys.exit(<span class="string">&quot;Could not read the image2&quot;</span>)</span><br><span class="line">img2=cv.resize(img2,(img1.shape[<span class="number">1</span>],img1.shape[<span class="number">0</span>]),interpolation=cv.INTER_LINEAR)</span><br><span class="line">i1,i2,i3=img2[:,:,<span class="number">0</span>],img2[:,:,<span class="number">1</span>],img2[:,:,<span class="number">2</span>]</span><br><span class="line">img2=cv.merge((i1,i2,i3))</span><br><span class="line">beta=(<span class="number">1.0</span>-alpha)</span><br><span class="line">dst=cv.addWeighted(img1,alpha,img2,beta,<span class="number">0.0</span>,<span class="number">0</span>)</span><br><span class="line">cv.imshow(<span class="string">&quot;result&quot;</span>,dst)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这段代码需要注意的是，有一个<code>cv.resize(img,(newH,newW),method)</code>方法，可以通过插值的方式对图像重新采样。不同通道的图像可以通过<code>ndarray</code>索引的方式进行拆分，并通过<code>cv.merge()</code>方法进行堆叠。</p><p><code>merge</code>方法等价于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataset=[np.random.randn(<span class="number">4</span>,<span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line">np.stack(dataset,axis=-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>然后图像线性加和函数<code>addWeighted(img,alpha,img,alpha,0.0,0)</code>，实际上也类似于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D=img1*alpha+img2*beta</span><br><span class="line">D=D.astype(<span class="built_in">int</span>)</span><br><span class="line">dst1=np.clip(D,<span class="number">0</span>,<span class="number">255</span>)</span><br></pre></td></tr></table></figure><p>我们再来看一个栗子，对多幅图像进行<strong>拼接</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多幅图像</span></span><br><span class="line">img1=cv.resize(img1,(<span class="number">100</span>,<span class="number">100</span>),interpolation=cv.INTER_LINEAR)</span><br><span class="line">img2=cv.resize(img2,(<span class="number">100</span>,<span class="number">100</span>),interpolation=cv.INTER_LINEAR)</span><br><span class="line">img=np.hstack((img1,img2))</span><br><span class="line">Img=np.vstack((img1,img2))</span><br><span class="line">cv.imshow(<span class="string">&quot;01&quot;</span>,img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>) <span class="comment"># 0不自动退出，否则正数代表毫秒</span></span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>这边值得注意的是，<code>hstack</code>和<code>vstack</code>分别会在<code>dim=0</code>和<code>dim=1</code>上操作。</p><p>如果想要<strong>调整GUI窗口大小</strong>，可以这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个窗口并调整大小</span></span><br><span class="line">cv.namedWindow(<span class="string">&quot;02&quot;</span>,cv.WINDOW_NORMAL)</span><br><span class="line">cv.resizeWindow(<span class="string">&quot;02&quot;</span>,Img.shape[<span class="number">1</span>],Img.shape[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># resizeWindow的逻辑顺序应该在imshow之前</span></span><br><span class="line"></span><br><span class="line">cv.imshow(<span class="string">&quot;02&quot;</span>,Img)</span><br><span class="line"></span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3 id="3-2-3-鼠标事件">3.2.3  鼠标事件</h3><p>这里我们要介绍<strong>回调函数</strong>(call back function)，一般情况下应用程序会通过应用编程接口调用系统库的函数，但有些库函数却要求应用程序传回一个函数，这样具有极大的灵活性。</p><p>OpenCV提供了<code>setMousecallback</code>接口，用来预先设置好回调函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetMouseCallback(WindowName,onMouse,param=<span class="literal">None</span>)-&gt;<span class="literal">None</span></span><br></pre></td></tr></table></figure><p>我们可以定义自己的回调函数，请注意，这个函数继承自<code>event</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">MouseCallback</span>(<span class="params">event,x,y,flags,param</span>)</span><br></pre></td></tr></table></figure><p><code>event</code>的枚举类型有：</p><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th style="text-align:center">Meaning</th></tr></thead><tbody><tr><td style="text-align:center">EVENT_MOUSEMOVE</td><td style="text-align:center">0</td><td style="text-align:center">滑动</td></tr><tr><td style="text-align:center">EVENT_LBUTTONDOWN</td><td style="text-align:center">1</td><td style="text-align:center">左键点击</td></tr><tr><td style="text-align:center">EVENT_RBUTTONDOWN</td><td style="text-align:center">2</td><td style="text-align:center">右键点击</td></tr><tr><td style="text-align:center">EVENT_MBUTTONDOWN</td><td style="text-align:center">3</td><td style="text-align:center">中键点击</td></tr><tr><td style="text-align:center">EVENT_LBUTTONUP</td><td style="text-align:center">4</td><td style="text-align:center">左键放开</td></tr><tr><td style="text-align:center">EVENT_RBUTTONUP</td><td style="text-align:center">5</td><td style="text-align:center">右键放开</td></tr><tr><td style="text-align:center">EVENT_MBUTTONUP</td><td style="text-align:center">6</td><td style="text-align:center">中键放开</td></tr><tr><td style="text-align:center">EVENT_LBUTTONBLCLK</td><td style="text-align:center">7</td><td style="text-align:center">左键双击</td></tr><tr><td style="text-align:center">EVENT_RBUTTONBLCLK</td><td style="text-align:center">8</td><td style="text-align:center">右键双击</td></tr><tr><td style="text-align:center">EVENT_MBUTTONBLCLK</td><td style="text-align:center">9</td><td style="text-align:center">中键双击</td></tr></tbody></table><p><code>flags</code>的类型有</p><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Value</th><th style="text-align:center">Meaning</th></tr></thead><tbody><tr><td style="text-align:center">EVENT_FLAG_LBUTTON</td><td style="text-align:center">1</td><td style="text-align:center">左键拖拽</td></tr><tr><td style="text-align:center">EVENT_FLAG_RBUTTON</td><td style="text-align:center">2</td><td style="text-align:center">右键拖拽</td></tr><tr><td style="text-align:center">EVENT_FLAG_MBUTTON</td><td style="text-align:center">4</td><td style="text-align:center">中键拖拽</td></tr><tr><td style="text-align:center">EVENT_FLAG_CTRLKEY</td><td style="text-align:center">8</td><td style="text-align:center">ctr</td></tr><tr><td style="text-align:center">EVENT_FLAG_SHIFTKEY</td><td style="text-align:center">16</td><td style="text-align:center">shift</td></tr><tr><td style="text-align:center">EVENT_FLAG_ALTKEY</td><td style="text-align:center">32</td><td style="text-align:center">alt</td></tr></tbody></table><p>现在我们来看个栗子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">img=np.zeros((<span class="number">500</span>,<span class="number">500</span>))</span><br><span class="line"><span class="comment"># 定义回调函数</span></span><br><span class="line">nx,ny=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_circle</span>(<span class="params">event,x,y,flags,param</span>):</span><br><span class="line">    <span class="keyword">global</span> nx,ny</span><br><span class="line">    <span class="keyword">if</span> event==cv.EVENT_LBUTTONDOWN:</span><br><span class="line">        <span class="comment"># 绘制圆</span></span><br><span class="line">        nx,ny=x,y</span><br><span class="line">    <span class="keyword">if</span> event==cv.EVENT_LBUTTONUP:</span><br><span class="line">        cv.circle(img,(nx,ny),<span class="built_in">int</span>(math.sqrt((x-nx)**<span class="number">2</span>+(y-ny)**<span class="number">2</span>)),<span class="number">255</span>,-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cv.namedWindow(<span class="string">&quot;IMG&quot;</span>)</span><br><span class="line">cv.setMouseCallback(<span class="string">&#x27;IMG&#x27;</span>,draw_circle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    cv.imshow(<span class="string">&#x27;IMG&#x27;</span>,img)</span><br><span class="line">    n=cv.waitKey(<span class="number">5</span>) <span class="comment"># 获取键盘输入</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> n==<span class="built_in">ord</span>(<span class="string">&#x27;s&#x27;</span>):</span><br><span class="line">        <span class="comment"># 保存</span></span><br><span class="line">        cv.imwrite(<span class="string">&quot;./Files/img5.png&quot;</span>,img)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Save successfully&quot;</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230321234107166.png" alt="image-20230321234107166" style="zoom:50%;"><h3 id="3-2-4-滑动条事件">3.2.4  滑动条事件</h3><p>在OpenCV中，滑动条一般是用来在视频播放帧中选择特定帧。我们一般需要给滑动条创建一个名字，并通过这个名字进行引用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateTrackbar(trackbarName,windowName,value,count,onChange)-&gt; None</span><br></pre></td></tr></table></figure><p>滑动条不会挡住父窗口的图像，只会让其变大。<code>value</code>表示当前滑动条的位置，<code>count</code>表示华东的最大值。<code>onChange</code>也是一个回调函数。</p><p>我们现在来看滑动条的回调函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_">TrackbarCallback</span><span class="params">(pos,userdata)</span></span><br></pre></td></tr></table></figure><p>其中，<code>pos</code>表示滑动块当前位置，<code>userdata</code>表示可选参数。如果不需要，就把<code>onChange</code>设置成<code>None</code>就行了。</p><p>如果我们想获取滑动块的位置，可以是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetTrackbarPos(Name,WindowName)-&gt;retval</span><br><span class="line"><span class="title function_">SetTrackbarPos</span><span class="params">(Name,WindowName,pos)</span>-&gt;None</span><br></pre></td></tr></table></figure><p>下面我们举个栗子来看如何通过滑动块调节亮度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">alpha=<span class="number">0.3</span></span><br><span class="line">beta=<span class="number">80</span></span><br><span class="line"></span><br><span class="line">img_path=<span class="string">r&quot;./Files/img2.png&quot;</span></span><br><span class="line">img=cv.imread(img_path)</span><br><span class="line">img2=cv.imread(img_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updateAlpha</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">global</span> alpha,img,img2</span><br><span class="line">    alpha=cv.getTrackbarPos(<span class="string">&#x27;Alpha&#x27;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    alpha*=<span class="number">0.01</span></span><br><span class="line">    img=np.uint8(np.clip((alpha*img2+beta),<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updateBeta</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">global</span> beta,img,img2</span><br><span class="line">    beta=cv.getTrackbarPos(<span class="string">&quot;Beta&quot;</span>,<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">    img=np.uint8(np.clip((alpha*img2+beta),<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建窗口</span></span><br><span class="line">cv.namedWindow(<span class="string">&quot;image&quot;</span>)</span><br><span class="line">cv.createTrackbar(<span class="string">&#x27;Alpha&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">0</span>,<span class="number">300</span>,updateAlpha)</span><br><span class="line">cv.createTrackbar(<span class="string">&#x27;Beta&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">0</span>,<span class="number">255</span>,updateBeta)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认值</span></span><br><span class="line">cv.setTrackbarPos(<span class="string">&#x27;Alpha&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">100</span>)</span><br><span class="line">cv.setTrackbarPos(<span class="string">&#x27;Beta&#x27;</span>,<span class="string">&#x27;image&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    cv.imshow(<span class="string">&#x27;image&#x27;</span>,img)</span><br><span class="line">    <span class="keyword">if</span> cv.waitKey(<span class="number">1</span>)==<span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><img src="/2023/03/21/%E3%80%90OpenCV%E3%80%91OpenCV%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20230322003836973.png" alt="image-20230322003836973" style="zoom:50%;"><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">哈哈哈哈哈哈</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="OpenCV" scheme="http://example.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>【OpenCV】计算机视觉概述</title>
    <link href="http://example.com/2023/03/20/%E3%80%90OpenCV%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2023/03/20/%E3%80%90OpenCV%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0/</id>
    <published>2023-03-20T15:14:01.415Z</published>
    <updated>2023-03-21T09:32:36.032Z</updated>
    
    <content type="html"><![CDATA[<h1>计算机视觉概述</h1><h2 id="1-图像的基本概念">1  图像的基本概念</h2><h3 id="1-1-图像和图形">1.1  图像和图形</h3><p>图像是摄影机、照相机等输入设备捕捉实际的画面产生的数字图像，是由像素构成的位图，是对客观世界的反映。</p><p>而图形呢？图形则是通过数学规则产生的、具有一定规则的团，一般是矢量图。图形通过一组指令集来描述内容，因而不会失真。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">图像</th><th style="text-align:center">图形</th></tr></thead><tbody><tr><td style="text-align:center">产生</td><td style="text-align:center">从真实世界记录</td><td style="text-align:center">由数学规则生成</td></tr><tr><td style="text-align:center">存储</td><td style="text-align:center">点阵值</td><td style="text-align:center">属性</td></tr><tr><td style="text-align:center">类型</td><td style="text-align:center">位图</td><td style="text-align:center">矢量图</td></tr><tr><td style="text-align:center">是否会失真</td><td style="text-align:center">是</td><td style="text-align:center">否</td></tr></tbody></table><hr><h3 id="1-2-数字图像及其特点">1.2  数字图像及其特点</h3><p>数字图像也叫做数码图像或者数位图像，存储方式一般是数组或者矩阵，光照位置和强度都是离散的。数字图像一般是由模拟图像数字化得到，以像素为基本单元。</p><p>一般我们对于数字图像的研究，就是研究其变换算法。</p><p>数字图像具有以下几个特点：</p><p>1️⃣ <strong>信息量大</strong></p><p>一幅图像一般有三个基本属性：长<code>h</code>、宽<code>w</code>、通道<code>c</code>。为了让数字图像逼近真实情况，我们还需要使用额外的空间存储它的色彩信息。例如<code>8-bit</code>图像就表示一个像素点的强度量将会由<code>8</code>个比特控制。所以一幅图像的数据大小为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>+</mo><mi>h</mi><mo>∗</mo><mi>w</mi><mo>∗</mo><mi>c</mi><mo>∗</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">O+h*w*c*b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>是其他信息，包括文件头、元数据等。</p><p>2️⃣ <strong>占用带宽大</strong></p><p>大的信息量当然要更大的带宽啦~普通电视的标准带宽为<code>6.5MHz</code>，是电话、传真等标准带宽的14倍。</p><p>3️⃣ <strong>相关性大</strong></p><p>图像之间的像素非常不独立，具有很大的相关性！这导致图像信息的压缩潜力非常大！</p><p>4️⃣ <strong>非客观性</strong></p><p>这个特性跟人有关系，最后对图像上的信息做解译的是人，一千个人眼中有一千个哈姆雷特。</p><hr><h3 id="1-3-相关名词介绍">1.3  相关名词介绍</h3><table><thead><tr><th style="text-align:center">名词</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">像素</td><td style="text-align:center">数字图像的基本离散单元</td></tr><tr><td style="text-align:center">分辨率</td><td style="text-align:center">每英寸图像内的像素点数(控制像元大小)</td></tr><tr><td style="text-align:center">灰度级</td><td style="text-align:center">按照对数关系将色彩分级</td></tr><tr><td style="text-align:center">灰度值</td><td style="text-align:center">用于量化图像的亮度</td></tr><tr><td style="text-align:center">深度</td><td style="text-align:center">图像深度指的是存储每个像素的位数，它确定了图像每个像素可能有的颜色数量会灰度级数</td></tr><tr><td style="text-align:center">通道</td><td style="text-align:center">即第三个维度，例如RGB就是三通道，高光谱则有上百个通道</td></tr></tbody></table><hr><h2 id="2-图像噪声">2  图像噪声</h2><p>所谓图像噪声，可以理解为妨碍人的视觉器官或系统传感器对所接受图像源信息进行理解或分析的各种因素。一般的噪声是不可预测的随机信号，可能出现在图像采集、图像处理的全过程。</p><p>图像噪声有很多种，主要有高斯噪声、瑞丽噪声、伽马、脉冲噪声。一般来说，脉冲噪声(椒盐噪声)是最常见的。产生噪声的原因有很多，譬如：</p><ul><li>光和电子的基本性质所引起的噪声</li><li>电器的机械运动产生的噪声</li><li>器材本身产生的噪声</li><li>系统内部产生的噪声</li></ul><blockquote><p>图像噪声的滤除</p></blockquote><p>一般来说，通过图像平滑可以有效减少和消除图像中的噪声，以改善图像质量，抽取对象特征进行分析。</p><p>通常图像滤波和平滑可以分为线性滤波和非线性滤波两种，线性滤波一般通过做离散卷积核来实现，非线性滤波譬如高斯滤波、中值滤波，显然并不对线性这个概念封闭(齐次、数乘)。中值滤波一般用来处理噪声，但也会改变未被噪声污染的像素(均摊了)。</p><h2 id="3-图像处理">3  图像处理</h2><p>图像作为人类感知世界的视觉基础，是人类获取信息、表达信息和传递信息的重要手段，计算机时代所说的图像处理通常是指数字图像处理，最早可以溯源到20世纪20年代，从伦敦通过海底电缆传到纽约的第一张压缩照片。这项技术可以帮助人们更加准确、客观地认识世界，获取更多的信息。</p><h3 id="3-1-图像处理的分类">3.1 图像处理的分类</h3><ul><li>光学模拟处理<ul><li>也称光信息处理，建立在傅里叶光学上</li></ul></li><li>电学模拟处理<ul><li>将光强度信号转化为电信号，成本投入相对较低，具有明显的优势，可以在短时间内完成滤波处理。</li></ul></li><li>计算机数字处理<ul><li>在计算机上，将连续的模拟图像信号转化为离散的数字图像进行处理。</li></ul></li></ul><h3 id="3-2-数字图像处理">3.2  数字图像处理</h3><p>数字图像处理的生命周期包括四个过程：</p><ul><li>图像信息的获取</li><li>图像信息的存储与交换</li><li>图像处理<ul><li>图像预处理</li><li>特征抽取</li><li>识别分析</li></ul></li><li>图像输出与显示</li></ul><h3 id="3-3-图像处理方法">3.3  图像处理方法</h3><p>这一小节我们会介绍图像变换、图像增强、图像分割、图像描述、图像分类和图像重建这几个热点领域。</p><hr><p><strong>图像变换</strong></p><p>进行图像变换的原因在于，离散图像占用的信息量是在太大，对其的操作十分费时和费内存。通过傅里叶变换、沃尔什变换、离散余弦变换等空间转换技术，可以将空域转为变换域处理。在减少计算量的同时，增加了可行的处理手段。</p><p>图像编码压缩也可以属于图像变换的一种，这种方式可以减少描述图像的数据量，节省图像传输、处理时间和占用存储的空间。</p><hr><p><strong>图像增强</strong></p><p>图像增强的目的在于提高图像的质量，比如去除噪声、提高清晰度等。一般来说，图像增强会突出研究人员所感兴趣的部分，例如通过高通滤波强化边缘、低通滤波减少噪声等。在深度学习中，往往需要使用图像增强来模拟多种视角、多种尺度的图像信息，从而提高模型的泛化能力。图像增强是图像预处理中不可或缺的一环，图像预处理的实质在于突出重点信息，抑制无用信息。</p><p>下图是图像增强的一些处理方法</p><img src="/2023/03/20/%E3%80%90OpenCV%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%A6%82%E8%BF%B0/image-20230321170750055.png" alt="image-20230321170750055" style="zoom:50%;"><hr><p><strong>图像分割</strong></p><p>图像分割是数字图像处理中的关键技术之一，它可以将图像中有意义的特征部分提取出来，包括图像中的边缘、区域，这是进一步进行图像识别、分析和理解的基础。</p><hr><p><strong>图像描述</strong></p><p>图像描述是图像识别和理解的前提。一般来说，图像的描述方法可以有边界描述、区域描述、体积描述、纹理描述、表面描述等。</p><hr><p><strong>图像分类(识别)</strong></p><p>图像分类识别属于模式识别的范畴，主要内容是图像经过预处理后进行图像分割和特征提取，从而进行判决分类。</p><hr><p><strong>图像重建</strong></p><p>对于一些三维物体，可以通过X射线、超声波等物理方法，获取物体内部结构数据，再讲这些数据进行处理而构成物体内部部位的图像。目前最成功的的栗子就是CT(计算机断层扫描成像技术)。</p><h2 id="4-计算机视觉概述">4  计算机视觉概述</h2><p>计算机视觉是一门研究机器如何“看”的科学，换句话说，就是通过摄影机等输入设备代替人眼、计算机代替视觉中枢，从而模拟人类对图像目标的识别与分析。</p><p>计算机视觉本质上是对生物视觉的模拟，核心任务在于对采集的图像或视频数据处理，以获得相应场景的信息。其最终的研究目标，在于使计算机能像人那样通过视觉观察和理解世界，具有自主适应环境的能力。</p><blockquote><p>与相关学科的区别</p></blockquote><ul><li>计算机视觉（Computer Vision）： 计算机视觉是研究如何让计算机模拟人类视觉系统进行处理、理解和解释数字图像或视频的科学。计算机视觉的目标是从视觉数据中提取有意义的信息，并为进一步的决策和处理提供依据。这一领域包括了诸如目标检测、目标跟踪、图像分割、三维重建等多个子领域。</li><li>图像处理（Image Processing）： 图像处理是研究如何对数字图像进行操作和分析的技术。图像处理主要关注对图像的预处理，以便更好地理解和分析图像。这包括图像增强、滤波、去噪、压缩和特征提取等技术。图像处理是计算机视觉的基础技术之一。</li><li>机器视觉（Machine Vision）： 机器视觉主要关注为工业自动化领域提供解决方案。机器视觉系统通常由图像采集设备（如摄像头）、光源、处理器和执行设备组成。机器视觉系统的目标是通过自动化的方式提取图像中的信息，以便用于检测、测量、识别、分类等工业应用。机器视觉通常包含计算机视觉和图像处理技术。</li><li>模式识别（Pattern Recognition）： 模式识别关注的是从原始数据中识别和分类特定模式的问题。模式识别可以应用于多种数据类型，如图像、音频、文本等。该领域主要研究如何设计和优化算法，以实现对不同数据类型中的模式进行识别。计算机视觉和机器视觉都可以看作是模式识别的具体应用场景。</li></ul><p>总结一下，计算机视觉、图像处理、机器视觉和模式识别都涉及到从数据中提取信息的过程，但它们关注的领域和应用场景有所不同。计算机视觉关注对视觉数据的理解和解释，图像处理关注对图像的操作和分析，机器视觉关注工业自动化领域的视觉系统，而模式识别关注从多种数据类型中识别和分类特定模式的问题。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">哈哈哈哈哈哈</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="OpenCV" scheme="http://example.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>【PyTorch】PyTorch自动求导</title>
    <link href="http://example.com/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/"/>
    <id>http://example.com/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/</id>
    <published>2023-03-19T14:41:40.452Z</published>
    <updated>2023-03-23T12:11:04.861Z</updated>
    
    <content type="html"><![CDATA[<h1>PyTorch自动求导</h1><hr><blockquote><p>PyTorch的自动求导在torch.autograd包中实现。torch.Tensor和torch.Function为autograd包中的两个核心类，他们互相连接并生成一个有向非循环图。</p></blockquote><h2 id="1-1-自动求导要点">1.1  自动求导要点</h2><p><code>autograd</code>包在自动求导时，需要考虑以下事项：</p><ul><li>创建叶子结点的<code>Tensor</code>,使用<code>requires_grad</code>参数指定是否记录对其的操作，以便之后利用<code>backward</code>函数求解。<code>requires_grad</code>参数默认为<code>False</code>，当其为<code>True</code>时，与这个节点相依赖的其他节点也会变成<code>True</code>(这条路径都被污染了)</li><li>通过<code>requires_grad_()</code>方法修改<code>Tensor</code>汇总的<code>requires_grad</code>属性，可以调用<code>.detach()</code>或者<code>with torch.no_grad()</code>不再计算张量的梯度，便于进行评估、测试模型。</li><li>通过运算创建的非叶子结点，会被自动赋予<code>grad_fn</code>属性，表示梯度函数，叶子结点的<code>grad_fn</code>为<code>None</code></li><li>对最后得到的<code>Tensor</code>执行<code>backward</code>函数(反向传播中作为根节点)，会自动计算各变量的梯度，并将累加结果放在<code>grad</code>属性中，当计算完成后，非叶子结点的<code>grad</code>属性会被自动释放</li><li><code>backward</code>函数接收参数，该参数应该与调用该函数的<code>Tensor</code>维度相同，或者是可以广播的维度。如果求导的<code>Tensor</code>是一个标量，<code>backward</code>中的参数可以省略掉</li><li>反向传播的中间缓存会被清空，如果需要进行多次传播，需要指定函数中的参数<code>retain_graph</code>为<code>True</code>。在多次反向传播过程中，梯度是累加的。</li><li>非叶子结点的梯度在被<code>backward()</code>函数调用后就会被清空。</li><li>可以通过<code>torch.no_grad()</code>包裹代码块来阻止<code>autograd</code>去跟踪哪些标记为<code>.requesgrad=True</code>的张量的历史记录。</li></ul><hr><h2 id="1-2-计算图">1.2  计算图</h2><p>在整个过程中，<code>PyTorch</code>采用计算图的形式进行组织，该计算图为动态图，它的计算图在每次正向传播过程中都将重新构建。而其他的架构(TF是后面才引进的)，一般都是静态图。</p><p>计算图是一种有向无环图(DAG)，用来表示算子与变量之间的关系，直观且高效。</p><p>一般来说，圆形表示变量，矩形表示算子。例如表达式<code>z=wx+b</code>，变量为<code>x, w, b</code>，这些变量是用户所创建的，不依赖于其他变量，因此是叶子结点。该表达式的计算图如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph BT;</span><br><span class="line">id1((dz))--&gt;id2[addBackward]</span><br><span class="line">id2--&gt;id3((db))</span><br><span class="line">id2--&gt;id4((dy))</span><br><span class="line">id4--&gt;id5[mulBackward]</span><br><span class="line">id5--&gt;id6((dx))</span><br><span class="line">id5--&gt;id7((dw))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">i1((x))--&gt;o1[mul]</span><br><span class="line">i2((w))--&gt;o1</span><br><span class="line">o1--&gt;i3((y))</span><br><span class="line">i4((b))--&gt;o2[add]</span><br><span class="line">i3--&gt;o2</span><br><span class="line">o2--&gt;i5((z))</span><br></pre></td></tr></table></figure><p><img src="/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/image-20230319231749030.png" alt="image-20230319231749030"></p><p>在这个过程中，叶子节点为<code>x,w,b</code>，非叶节点为<code>z, y</code>。</p><p>当嗲用<code>backward()</code>函数后，<code>autograd</code>会从根节点<code>z</code>进行反向溯源，并根据链式法则计算每个叶子结点的梯度，并<strong>累加</strong>到<code>grad</code>属性汇总。对于非叶子结点或算子的操作记录在<code>grad_fn</code>中，叶子结点的<code>grad_fn</code>为<code>None</code>。</p><hr><h2 id="1-3-反向传播">1.3  反向传播</h2><blockquote><p>标量反向</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">torch.autograd.backward(tensor,grad_tensors=<span class="literal">None</span>,retain_graph=<span class="literal">None</span>,create_graph=<span class="literal">False</span>,grad_variables=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># tensor 是用于计算的张良</span></span><br><span class="line"><span class="comment"># grad_tensors 是用来计算非标量的梯度，形状需要与tensor保持一致</span></span><br><span class="line"><span class="comment"># retain_graph 重复利用计算图</span></span><br><span class="line"><span class="comment"># create_graph 计算更高阶段梯度</span></span><br></pre></td></tr></table></figure><p>对标量的<code>backward</code>无需指定参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">x=torch.Tensor([<span class="number">2</span>])</span><br><span class="line">w=torch.randn(<span class="number">1</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">b=torch.randn(<span class="number">1</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">y=torch.matmul(w,x)</span><br><span class="line">z=torch.add(y,b)</span><br><span class="line"></span><br><span class="line">z.backward()</span><br><span class="line"><span class="built_in">print</span>(w.grad)</span><br><span class="line"><span class="built_in">print</span>(b.grad)</span><br></pre></td></tr></table></figure><blockquote><p>非标量反向</p></blockquote><p>PyTorch不允许张量对张量求导，需要采用标量对张量进行求导，因此，如果目标张量对一个非标量调用<code>backward</code>，需要传入一个<code>gradient</code>参数，该参数也是张量，形状要跟调用<code>backward</code>的张量相同。</p><p>这个参数负责乘以需要求导参数的雅可比矩阵。</p><p>举个例子，我们有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mn>3</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><mn>3</mn><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=(x_1=2,x_2=3),y=(y_1=x^2_1+3x_2,y_2=x_2^2+2x_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>那么对张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>求雅可比矩阵(一阶偏导)，得到的结果为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">ȷ</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\jmath=\begin{vmatrix}\frac{\partial y_1}{\partial x_1} &amp; \frac{\partial y_1}{\partial x_2}\\\frac{\partial y_2}{\partial x_1}&amp;\frac{\partial y_2}{\partial x_2}\end{vmatrix}=\begin{vmatrix}2x_1&amp;3\\2&amp;2x_2\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.012em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.762em;"><span style="top:-2.566em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.164em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.816em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1816" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z"/></svg></span></span><span style="top:-4.972em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6273em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3178em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1273em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6273em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3178em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1273em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.762em;"><span style="top:-2.566em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.164em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.816em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1816" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1816 H145z M145 0 H188 V1816 H145z"/></svg></span></span><span style="top:-4.972em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>当<code>x=[2,3]</code>时，有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">ȷ</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><msup><mi mathvariant="normal">ȷ</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\jmath=\begin{vmatrix}4&amp;3\\2&amp;6\end{vmatrix}\\\\\jmath^T=\begin{vmatrix}4&amp;2\\3&amp;6\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0858em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal"></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>由于不支持Tensor对Tensor的求导，所以我们借助额外的向量，将其转化为标量对向量的求导。例如向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">[0,1]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，我们可以得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ȷ</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mn>2</mn><mo separator="true">,</mo><mn>6</mn><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\jmath[1]=[2 ,6]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal"></span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，这表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>求导的梯度。同样，采用向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">[1,0]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>的梯度。</p><p>用个例子看一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x=torch.tensor([[<span class="number">2</span>,<span class="number">3</span>]],dtype=torch.<span class="built_in">float</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">j=torch.zeros(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">y=torch.zeros(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">y[<span class="number">0</span>,<span class="number">0</span>]=x[<span class="number">0</span>][<span class="number">0</span>]**<span class="number">2</span>+<span class="number">3</span>*x[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">y[<span class="number">0</span>,<span class="number">1</span>]=x[<span class="number">0</span>][<span class="number">1</span>]**<span class="number">2</span>+<span class="number">2</span>*x[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算y_1梯度</span></span><br><span class="line">y.backward(torch.Tensor([[<span class="number">1</span>,<span class="number">0</span>]]),retain_graph=<span class="literal">True</span>) <span class="comment"># 不释放图，咱等会还要用</span></span><br><span class="line">j[<span class="number">0</span>]=x.grad</span><br><span class="line">x.grad=torch.zeros_like(x.grad)</span><br><span class="line"></span><br><span class="line">y.backward(torch.Tensor([[<span class="number">0</span>,<span class="number">1</span>]]))</span><br><span class="line">j[<span class="number">1</span>]=x.grad</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(j)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor([[4., 3.],</span></span><br><span class="line"><span class="string">        [2., 6.]])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><hr><h2 id="1-4-生命周期">1.4  生命周期</h2><img src="/2023/03/19/%E3%80%90PyTorch%E3%80%91PyTorch%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/image-20230323200359329.png" alt="image-20230323200359329" style="zoom:50%;"><hr><h2 id="1-5-切断分支的反向传播">1.5  切断分支的反向传播</h2><p>训练过程中，有时候我们想保持一部分的网络参数不变，而支队其中一部分的参数进行调整，只训练部分分支，那么这时候就可以通过<code>detach()</code>函数来切断一些分支的反向传播。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">detach_()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将节点设置为叶子，requires_grad=False grad_fn=None</span></span><br></pre></td></tr></table></figure><p>这个怎么说呢，比如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">y=x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi>y</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">z=yx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">x</span></span></span></span>，此时我们想把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>视为常数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>，也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial x}=c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>，可以用以下的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x=torch.ones(<span class="number">2</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">y=x**<span class="number">2</span>+<span class="number">3</span></span><br><span class="line">c=y.detach_()</span><br><span class="line">z=y*x</span><br><span class="line">z.<span class="built_in">sum</span>().backward()</span><br><span class="line"><span class="built_in">print</span>(x.grad==c)</span><br><span class="line"><span class="built_in">print</span>(x.grad)</span><br><span class="line"></span><br><span class="line">tensor([<span class="literal">True</span>, <span class="literal">True</span>])</span><br><span class="line">tensor([<span class="number">4.</span>, <span class="number">4.</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果我们不用detach，得到的结果就应该是：<code>3*2+3=6</code>了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x=torch.ones(<span class="number">2</span>,requires_grad=<span class="literal">True</span>)</span><br><span class="line">y=x**<span class="number">2</span>+<span class="number">3</span></span><br><span class="line"><span class="comment"># c=y.detach_()</span></span><br><span class="line">z=y*x</span><br><span class="line">z.<span class="built_in">sum</span>().backward()</span><br><span class="line"><span class="built_in">print</span>(x.grad)</span><br><span class="line"></span><br><span class="line">tensor([<span class="number">6.</span>, <span class="number">6.</span>])</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">PyTorch自动求导</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PyTorch" scheme="http://example.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>Pandas写入多个Sheet以及np.mat用法</title>
    <link href="http://example.com/2023/02/08/%E3%80%90Python%E3%80%91%E5%90%8C%E6%97%B6%E5%A1%AB%E5%85%A5SheetName/"/>
    <id>http://example.com/2023/02/08/%E3%80%90Python%E3%80%91%E5%90%8C%E6%97%B6%E5%A1%AB%E5%85%A5SheetName/</id>
    <published>2023-02-07T16:01:03.170Z</published>
    <updated>2023-02-07T16:06:54.764Z</updated>
    
    <content type="html"><![CDATA[<p>原生的<code>pd.to_excel</code>会覆写，我们需要用到<code>pd.ExcelWriter</code>。</p><p>like：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> pd.ExcelWriter(p,mode=<span class="string">&quot;a&quot;</span>,engine=<span class="string">&quot;openpyxl&quot;</span>) <span class="keyword">as</span> writer:</span><br><span class="line">    df=[pd.DataFrame(i) <span class="keyword">for</span> i <span class="keyword">in</span> Record_List]</span><br><span class="line">    <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(years):</span><br><span class="line">        df[i].to_excel(writer,sheet_name=<span class="built_in">str</span>(j))</span><br></pre></td></tr></table></figure><p>当然，在之前必须保证这个文件的存在。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pandas.core.frame <span class="keyword">import</span> DataFrame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># urban_pop,rural_pop,NF,CF为m*1矩阵,</span></span><br><span class="line"><span class="comment"># urban_prot,rural_pop,ncf,Redi为数值,</span></span><br><span class="line"><span class="comment"># AN,WP,CP,CA为m*n矩阵,</span></span><br><span class="line"><span class="comment"># ANI,ANI,ANO,PW,NF,PC为n*1矩阵。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">caculate_NANI</span>(<span class="params">urban_pop,rural_pop,urban_prot,rural_prot,AN,ANI,ANO,Redi,CP,PC,NF,CF,rN,CA,Ndep</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Map</span>(<span class="params">x</span>):</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">float</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">    Nhc = urban_pop.T*urban_prot+rural_pop.T*rural_prot</span><br><span class="line">    Nlc = np.dot(AN*(<span class="number">10e5</span>), ANI)</span><br><span class="line">    Nlp = np.dot(AN*(<span class="number">10e5</span>), (ANI-ANO))*Redi</span><br><span class="line">    Ncp = np.dot(CP*(<span class="number">10e5</span>), PC)</span><br><span class="line">    Nfer = N*(<span class="number">10e5</span>) + CF*(<span class="number">10e5</span>)*rN</span><br><span class="line">    Ncro = np.dot(CA*<span class="number">10</span>, NF)</span><br><span class="line">    Nim = Nhc + Nlc - Nlp - Ncp</span><br><span class="line">    NANI = Nim+Nfer+Ncro+Ndep</span><br><span class="line">    <span class="keyword">return</span> NANI,&#123;<span class="string">&quot;Nhc&quot;</span>:<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="built_in">float</span>(x),Nhc)),<span class="string">&quot;Nlc&quot;</span>:<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="built_in">float</span>(x),Nlc)),</span><br><span class="line">                 <span class="string">&quot;Nlp&quot;</span>:Map(Nlp),<span class="string">&quot;Ncp&quot;</span>:Map(Ncp),<span class="string">&quot;Nfer&quot;</span>:Map(Nfer),<span class="string">&quot;Ncro&quot;</span>:Map(Ncro),<span class="string">&quot;Nim&quot;</span>:Map(Nim),<span class="string">&quot;NANI&quot;</span>:Map(NANI)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    years = [<span class="number">1990</span>, <span class="number">2000</span>, <span class="number">2010</span>, <span class="number">2020</span>]</span><br><span class="line">    <span class="comment"># years = [1990,2000]</span></span><br><span class="line">    root = <span class="string">r&#x27;C:\Users\lenovo\Documents\Tencent Files\651421775\FileRecv\新建文件夹 (2)\\&#x27;</span>  <span class="comment"># 数据存放目录路径</span></span><br><span class="line">    Record_path=<span class="string">r&quot;G:\\&quot;</span> <span class="comment"># 中间变量输出位置</span></span><br><span class="line">    file_paths = [os.path.join(root,<span class="built_in">str</span>(i))+<span class="string">&quot;.xlsx&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> years]</span><br><span class="line">    all_list = []</span><br><span class="line">    urban_prot = <span class="number">4.77</span></span><br><span class="line">    rural_prot = <span class="number">4.31</span></span><br><span class="line">    Redi = <span class="number">0.9</span></span><br><span class="line">    rN = <span class="number">0.1285</span></span><br><span class="line">    ANI = np.mat([<span class="number">66.75</span>, <span class="number">44.80</span>, <span class="number">18.00</span>, <span class="number">18.00</span>, <span class="number">9.5</span>, <span class="number">14.5</span>, <span class="number">14.4</span>]).T</span><br><span class="line">    ANO = np.mat([<span class="number">58.51</span>, <span class="number">40.00</span>, <span class="number">15.15</span>, <span class="number">9.59</span>, <span class="number">7.21</span>, <span class="number">5.69</span>, <span class="number">5.69</span>]).T</span><br><span class="line">    PC = np.mat([<span class="number">12.6</span>, <span class="number">21.3</span>, <span class="number">13.0</span>, <span class="number">66.2</span>, <span class="number">2.0</span>, <span class="number">39.7</span>, <span class="number">12.2</span>, <span class="number">2.8</span>, <span class="number">1.5</span>, <span class="number">1.8</span>]).T</span><br><span class="line">    NF = np.mat([<span class="number">3700</span>, <span class="number">9600</span>, <span class="number">8000</span>, <span class="number">1500</span>, <span class="number">1500</span>]).T</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(p:=(Record_path+<span class="string">&quot;process.xlsx&quot;</span>)):</span><br><span class="line">        os.remove(p)</span><br><span class="line"></span><br><span class="line">    pd.DataFrame([]).to_excel(p)</span><br><span class="line">    Record_List=[]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(file_paths)):</span><br><span class="line"></span><br><span class="line">        data = pd.read_excel(file_paths[i])</span><br><span class="line">        urban_pop, rural_pop = np.mat(data[<span class="string">&#x27;城镇人口&#x27;</span>]), np.mat(data[<span class="string">&#x27;农村人口&#x27;</span>])</span><br><span class="line">        AN, CP, CA = np.mat(data.values[:, <span class="number">4</span>:<span class="number">11</span>]), np.mat(data.values[:, <span class="number">11</span>:<span class="number">21</span>]), np.mat(data.values[:, <span class="number">23</span>:<span class="number">28</span>])</span><br><span class="line">        N = np.mat(data[<span class="string">&#x27;氮肥&#x27;</span>]).T</span><br><span class="line">        CF = np.mat(data[<span class="string">&#x27;复合肥&#x27;</span>]).T</span><br><span class="line">        Ndep = np.mat(data[<span class="string">&#x27;大气氮沉降&#x27;</span>]).T</span><br><span class="line">        NANI,Record = caculate_NANI(urban_pop,rural_pop,urban_prot,rural_prot,AN,ANI,ANO,Redi,CP,PC,NF,CF,rN,CA,Ndep)</span><br><span class="line">        NANI_list=[<span class="built_in">float</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> NANI]</span><br><span class="line">        Record_List.append(Record)</span><br><span class="line">        all_list.append(NANI_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> pd.ExcelWriter(p,mode=<span class="string">&quot;a&quot;</span>,engine=<span class="string">&quot;openpyxl&quot;</span>) <span class="keyword">as</span> writer:</span><br><span class="line">        df=[pd.DataFrame(i) <span class="keyword">for</span> i <span class="keyword">in</span> Record_List]</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(years):</span><br><span class="line">            df[i].to_excel(writer,sheet_name=<span class="built_in">str</span>(j))</span><br><span class="line"></span><br><span class="line">    df_data = &#123;<span class="string">&quot;省域&quot;</span>: <span class="built_in">list</span>(data[<span class="string">&#x27;省域&#x27;</span>]), <span class="string">&quot;1990&quot;</span>: all_list[<span class="number">0</span>], <span class="string">&quot;2000&quot;</span>: all_list[<span class="number">1</span>], <span class="string">&quot;2010&quot;</span>: all_list[<span class="number">2</span>], <span class="string">&quot;2020&quot;</span>: all_list[<span class="number">3</span>]&#125;</span><br><span class="line">    df = DataFrame(df_data)</span><br><span class="line">    df.to_excel(<span class="string">r&quot;G:\new.xlsx&quot;</span>)  <span class="comment"># 保存结果路径</span></span><br></pre></td></tr></table></figure><p>Numpy的矩阵乘法用于处理数据时，一般是这样操作：</p><ul><li>读取列<code>A=np.mat(data.values[:,5:15])</code></li><li>写入权重或者对应矩阵<code>w=[i for i in range(10)]</code></li><li>做矩阵乘法<code>np.dot(A,w.T)</code>，也就是<code>Aw=b</code></li><li>这样每一列都被乘上了权重。</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Pandas写入多个Sheet以及np.mat用法</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Typora】绘制流程图</title>
    <link href="http://example.com/2023/02/03/%E3%80%90Typora%E3%80%91SVG%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%94%BB%E6%B3%95/"/>
    <id>http://example.com/2023/02/03/%E3%80%90Typora%E3%80%91SVG%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%94%BB%E6%B3%95/</id>
    <published>2023-02-03T04:49:52.988Z</published>
    <updated>2023-03-23T07:53:59.219Z</updated>
    
    <content type="html"><![CDATA[<p>说是画图，但并不像其他专业的绘图软件那样，通过拖拖拽拽一些元素，画出流程图、<a href="https://so.csdn.net/so/search?q=%E6%97%B6%E5%BA%8F%E5%9B%BE&amp;spm=1001.2101.3001.7020">时序图</a>等。Typora 的制图功能是由 Mermaid 强力驱动，如果你使用过 PlantUML，那么 Mermaid 也非常容易上手。</p><h3 id="Mermaid"><strong>Mermaid</strong></h3><p><strong>Mermaid[1]</strong> 是一种简单的类似 Markdown 的脚本语言，通过 JavaScript 编程语言，将文本转换为图片。因此，真正实现画图功能的并不是 Typora 本身，它只是内置了对 Mermaid 的支持。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ef6bb6e35dd37db59166f9a8539abccf.png" alt="ef6bb6e35dd37db59166f9a8539abccf.png"></p><p>Mermaid 支持绘制非常多种类的图，常见的有时序图、流程图、类图、甘特图等等。下面分享一下如何绘制这些图，语法非常容易掌握。</p><p>先在 Typora 中，输入 <strong>```mermaid</strong> 然后敲击回车，即可初始化一张空白图。</p><h3 id="流程图"><strong>流程图</strong></h3><p>语法解释：<code>graph</code> 关键字就是声明一张流程图，<code>TD</code> 表示的是方向，这里的含义是 Top-Down 由上至下。</p><table><thead><tr><th style="text-align:center">Key</th><th style="text-align:center">Direction</th></tr></thead><tbody><tr><td style="text-align:center">TB</td><td style="text-align:center">from Top to Bottom</td></tr><tr><td style="text-align:center">BT</td><td style="text-align:center">from Bottom to Top</td></tr><tr><td style="text-align:center">RL</td><td style="text-align:center">from Right to Left</td></tr><tr><td style="text-align:center">LR</td><td style="text-align:center">from Left to Right</td></tr></tbody></table><p><strong>节点形状</strong></p><table><thead><tr><th style="text-align:center">节点形状</th><th style="text-align:center">如何添加</th></tr></thead><tbody><tr><td style="text-align:center">矩形节点</td><td style="text-align:center">A[Description]</td></tr><tr><td style="text-align:center">圆角矩形</td><td style="text-align:center">A(Description)</td></tr><tr><td style="text-align:center">圆形节点</td><td style="text-align:center">A((Description))</td></tr><tr><td style="text-align:center">右向旗帜/非对称</td><td style="text-align:center">A&gt;Description]</td></tr><tr><td style="text-align:center">菱形节点</td><td style="text-align:center">E{Description}</td></tr></tbody></table><p><strong>节点间连线</strong></p><table><thead><tr><th style="text-align:center">形状</th><th style="text-align:center">格式</th></tr></thead><tbody><tr><td style="text-align:center">— 或 --&gt;</td><td style="text-align:center">单线</td></tr><tr><td style="text-align:center">–文本— 或 --文本–&gt;</td><td style="text-align:center">单线文字</td></tr><tr><td style="text-align:center">===或==&gt;</td><td style="text-align:center">粗线</td></tr><tr><td style="text-align:center">==text=== 或==text==&gt;</td><td style="text-align:center">粗线文字</td></tr><tr><td style="text-align:center">-.- 或-.-&gt;</td><td style="text-align:center">虚线</td></tr><tr><td style="text-align:center">-.text- 或-.text.-&gt;</td><td style="text-align:center">虚线文字</td></tr></tbody></table><p><strong>子图表</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subgraph 子图表名称</span><br><span class="line">    子图表中的描述语句...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    id1(圆角矩形)--普通线--&gt;id2[矩形]</span><br><span class="line">    subgraph 子图表名称</span><br><span class="line">        id2==粗线==&gt;id3&#123;菱形&#125;</span><br><span class="line">        id3-.虚线.-&gt;id4&gt;右向旗帜]</span><br><span class="line">        id3--无箭头---id5((圆形))</span><br><span class="line">        id3--有箭头---&gt;id6((你好))</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    A--&gt;C;</span><br><span class="line">    B--&gt;D;</span><br><span class="line">    D==&gt;A;</span><br></pre></td></tr></table></figure><h3 id="时序图"><strong>时序图</strong></h3><p>语法解释：<code>-&gt;&gt;</code> 代表实线箭头，<code>--&gt;&gt;</code> 则代表虚线。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line"></span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    </span><br><span class="line">    Alice--&gt;&gt;Tom: Hey</span><br></pre></td></tr></table></figure><h3 id="状态图"><strong>状态图</strong></h3><p>语法解释：<code>[*]</code> 表示开始或者结束，如果在箭头右边则表示结束。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stateDiagram</span><br><span class="line"></span><br><span class="line">    [*] --&gt; s1</span><br><span class="line">    s1 --&gt; [*]</span><br></pre></td></tr></table></figure><h3 id="类图"><strong>类图</strong></h3><p>语法解释：<code>&lt;|--</code> 表示继承，<code>+</code> 表示 <code>public</code>，<code>-</code> 表示 <code>private</code>，学过 Java 的应该都知道。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line"></span><br><span class="line">      Animal &lt;|-- Duck</span><br><span class="line"></span><br><span class="line">      Animal &lt;|-- Fish</span><br><span class="line">      Animal &lt;|-- Zebra</span><br><span class="line">      Animal : +int age</span><br><span class="line">      Animal : +String gender</span><br><span class="line">      Animal: +isMammal()</span><br><span class="line">      Animal: +mate()</span><br><span class="line"></span><br><span class="line">      class Duck&#123;</span><br><span class="line">          +String beakColor</span><br><span class="line">          +swim()</span><br><span class="line">          +quack()</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      class Fish&#123;</span><br><span class="line">          -int sizeInFeet</span><br><span class="line">          -canEat()</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      class Zebra&#123;</span><br><span class="line">          +bool is_wild</span><br><span class="line">          +run()</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="甘特图"><strong>甘特图</strong></h3><p>甘特图一般用来表示项目的计划排期，目前在工作中经常会用到。</p><p>语法也非常简单，从上到下依次是图片标题、日期格式、项目、项目细分的任务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line"></span><br><span class="line">    title 工作计划</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    section Section</span><br><span class="line">    A task           :a1, 2020-01-01, 30d</span><br><span class="line">    Another task     :after a1  , 20d</span><br><span class="line">    section Another</span><br><span class="line">    Task in sec      :a2,2020-01-12  , 12d</span><br><span class="line">    another task      :a3,2020-01-14,24d</span><br></pre></td></tr></table></figure><h3 id="饼图"><strong>饼图</strong></h3><p>饼图使用 <code>pie</code> 表示，标题下面分别是区域名称及其百分比。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    title Key elements in Product X</span><br><span class="line">    &quot;Calcium&quot; : 42.96</span><br><span class="line">    &quot;Potassium&quot; : 50.05</span><br><span class="line">    &quot;Magnesium&quot; : 10.01</span><br><span class="line">    &quot;Iron&quot; :  5</span><br></pre></td></tr></table></figure><h3 id="导出"><strong>导出</strong></h3><p>绘制好的图片可以选择菜单/文件/导出，导出为图片或者网页格式。在网页中图片是以 SVG 格式渲染的，你可以复制 SVG 内容，导入到 SVG 的图片编辑器中进一步操作。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1066ef81c868ffaad8bc991d781e0cb0.png" alt="1066ef81c868ffaad8bc991d781e0cb0.png"></p><p>Mermaid 官方有一个在线的工具，可以导出 SVG 和 PNG。</p><p>Mermaid live <a href="http://editormermaid-js.github.io">editormermaid-js.github.io</a></p><h3 id="Flow语法绘制流程图">Flow语法绘制流程图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Typora绘制流程图</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>Git入门到精通</title>
    <link href="http://example.com/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/"/>
    <id>http://example.com/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/</id>
    <published>2023-02-01T17:31:35.577Z</published>
    <updated>2023-04-23T08:23:27.568Z</updated>
    
    <content type="html"><![CDATA[<h1>Chapter 1. Git 概述</h1><p>Git 是一个<strong>开源分布式版本控制工具</strong>，其特点有：</p><ul><li>占地面积小</li><li>易于学习</li><li>性能极快</li></ul><p>GIt具有廉价的本地库，方便的暂存区域和多个工作流分支等特性，其性能优于Subversion、CVS等版本控制工具。</p><h2 id="1-1-版本控制">1.1 版本控制</h2><p>所谓版本控制，就是<strong>记录文件内容变化</strong>，以便将来查阅特定版本修订情况的系统。</p><blockquote><p>就是相当于文档的存档点啦</p></blockquote><p>其最重要的内容在于可以记录文件修改的<strong>历史记录</strong>，让用户查看历史版本，方便版本切换。</p><blockquote><p>方便由单打独斗转换到团队协作</p></blockquote><h2 id="1-2-版本控制工具">1.2  版本控制工具</h2><p>⭐ <strong>集中式版本控制工具</strong></p><p>例如CVS、SVN，都有一个单一的集中管理的服务器，保存所有文件的修订版本，用户想要修改文件呢，就需要先用客户端连接到服务器，取出文件来更新。</p><p>这种方式的好处在于：</p><ul><li>工作可视化(每个人都能看到别人在做啥)</li><li>吧管控权限(管理员)</li><li>更容易维护</li></ul><p>缺点在于：</p><ul><li>服务器容易炸，炸了就干不了活，赚不了钱</li></ul><p>🌟 <strong>分布式版本控制工具</strong></p><p>例如Git、Darcs、Bazaar等，客户端提取的不是最新版本的文件快照，而是将代码仓库完整地镜像下来。这样无论那一处的文件发生故障，事后都可以用其他客户端的本地仓库进行恢复。</p><p>相较于集中式版本控制工具，其又是在于：</p><ul><li>断网情况也可以进行开发(版本控制是在本地进行的，Git登录页面： everything-is-local)</li><li>每个客户端保存的也是整个完整的项目</li></ul><h2 id="1-3-Git简史">1.3  Git简史</h2><p>开发者：Linus(也是Linux的开发者)，2005年用C语言开发了这个版本控制系统。2008年GitHub上线。</p><h2 id="1-4-Git工作机制">1.4  Git工作机制</h2><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202020631353.png" alt="image-20230202020631353" style="zoom:50%;"><p>历史版本是没办法删除的，这是因为下一个版本是依托于上一个版本生成的。</p><h2 id="1-5-Git和代码托管中心">1.5  Git和代码托管中心</h2><p>代码托管中心是基于网络服务器的远程代码仓库，一般称为远程库。</p><p><strong>局域网</strong></p><ul><li>GitLab</li></ul><p><strong>互联网</strong></p><ul><li>GitHub</li><li>Gitee</li></ul><hr><h1>Chapter 2.  Git 安装</h1><p>略</p><hr><h1>Chapter 3. GIt 常用命令</h1><table><thead><tr><th style="text-align:center">命令名称</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">git config --global <a href="http://user.name">user.name</a> 用户名</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git config --global user.email 邮箱</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git init</td><td style="text-align:center">初始化本地库</td></tr><tr><td style="text-align:center">git status</td><td style="text-align:center">查看本地库状态</td></tr><tr><td style="text-align:center">git add 文件名</td><td style="text-align:center">添加到暂存区</td></tr><tr><td style="text-align:center">git commit -m “日志信息” 文件名</td><td style="text-align:center">提交到本地库</td></tr><tr><td style="text-align:center">git reflog</td><td style="text-align:center">查看历史记录</td></tr><tr><td style="text-align:center">git reset --hard 版本号</td><td style="text-align:center">版本穿梭</td></tr></tbody></table><h2 id="3-1-设置用户签名">3.1  设置用户签名</h2><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202110415257.png" alt="image-20230202110415257" style="zoom:50%;"><h2 id="3-2-初始化本地库">3.2  初始化本地库</h2><blockquote><p>在对应项目文件夹下，使用 git init</p></blockquote><p>查看本地库的状态，只需要使用：</p><blockquote><p>git status</p></blockquote><p>我们新增一个文件后再查看本地库状态：</p><blockquote><p>vim hello.txt</p></blockquote><p>vim 是一款文本编辑器，这样能生成一个新的文本文件。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202111837307.png" alt="image-20230202111837307" style="zoom:50%;"><p>这个意思表示，该文件现在仅放在工作区，还没有被追踪过。那么按照之前的思路，应该将这个文件添加到暂存区了。</p><p>我们使用命令：</p><blockquote><p>git add hello.txt</p></blockquote><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202112302182.png" alt="image-20230202112302182" style="zoom:50%;"><p>此时，已经放到暂存区了，可以被Git追踪到。</p><p>我们可以删掉暂存区的文件，但对工作区和本地库没有影响：</p><blockquote><p>$ git rm --cached hello.txt</p></blockquote><p>那最后呢，也就是操作的最后一步，我们需要提交到本地库。</p><blockquote><p>$ git commit -m “My first version” hello.txt</p></blockquote><p>该命令原始的格式是：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;日志信息&quot; 文件名</span><br></pre></td></tr></table></figure><p>如果成功提交了，那么会显示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[master (root-commit) 6bf530b] My first version</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">8</span> insertions(+)</span><br><span class="line"> create mode <span class="number">100644</span> hello.txt</span><br></pre></td></tr></table></figure><p>这个七位字符码 6bf530b 就是控制的版本号。</p><p>我们可以再次查看本地库的状态。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202113511221.png" alt="image-20230202113511221" style="zoom:50%;"><p>查看版本信息：</p><blockquote><p>git reflog 版本信息</p><p>git log 详细信息</p></blockquote><h2 id="3-3-修改文件">3.3  修改文件</h2><p>如果我们这时候修改了文件信息，这时候再次查看本地库状态，会提示文件被修改过。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes <span class="keyword">not</span> staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   hello.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><p>那还是三板斧，我们把他提交到本地库。</p><p>那来查看下日志信息吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">267de41 (HEAD -&gt; master) HEAD@&#123;<span class="number">0</span>&#125;: commit: Second <span class="comment"># head是指针</span></span><br><span class="line">6bf530b HEAD@&#123;<span class="number">1</span>&#125;: commit (initial): My first version</span><br></pre></td></tr></table></figure><p>git的运作方式是比对两个版本的异同，对行直接进行增加或是删除。</p><p>其底层的机制在于移动指针。</p><h2 id="3-4-版本穿梭">3.4  版本穿梭</h2><p>一般来说，我们先用命令<code>git reflog</code>获取版本信息，然后再用命令：</p><blockquote><p>git reset --hard Ver.</p></blockquote><p>穿越版本。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard  6bf530b</span><br><span class="line">HEAD <span class="keyword">is</span> now at 6bf530b My first version</span><br></pre></td></tr></table></figure><p>可以发现，指针已经被移动了。</p><p>我们也可以在日志上看到这步的操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6bf530b (HEAD -&gt; master) HEAD@&#123;<span class="number">0</span>&#125;: reset: moving to 6bf530b</span><br><span class="line">267de41 HEAD@&#123;<span class="number">1</span>&#125;: commit: Second</span><br><span class="line">6bf530b (HEAD -&gt; master) HEAD@&#123;<span class="number">2</span>&#125;: commit (initial): My first version</span><br></pre></td></tr></table></figure><p>此时查看文件，发现已经发生了版本变化。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202115218012.png" alt="image-20230202115218012" style="zoom:67%;"><p>指针信息记录在.git文件夹里，一个是指向文件夹的指针，一个是指向版本的指针。</p><hr><h1>Chapter 4. Git 分支操作</h1><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202140252357.png" alt="image-20230202140252357" style="zoom:50%;"><p>上面这张图：一个分支用来开发，一个分支用来测试，一个分支用来使用。Be like 镜像副本</p><h2 id="4-1-什么是分支">4.1  什么是分支</h2><p>在版本控制过程汇总，有时候需要同时推进多个任务，可以为每个任务创建单独的分支，这意味着每个组开发自己的功能的时候，不会影响到主线分支的运行。</p><blockquote><p>实际上分支底层也是指针的引用。</p></blockquote><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202140901961.png" alt="image-20230202140901961" style="zoom:50%;"><p>可以发现，各个功能的分支都是从主线分支引用出去，当开发完成时，又会合并到主线分支。</p><h2 id="4-2-分支的好处">4.2  分支的好处</h2><ul><li>同时并行推进开发多个功能，提高工作效率</li><li>各个分支在开发过程中，如果某个分支开发失败，并不会导致其他分支出现问题。</li></ul><h2 id="4-3-分支的操作">4.3  分支的操作</h2><table><thead><tr><th style="text-align:center">命令名称</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">git branch 分支名</td><td style="text-align:center">创建分支</td></tr><tr><td style="text-align:center">git branch -v</td><td style="text-align:center">查看分支</td></tr><tr><td style="text-align:center">git checkout 分支名</td><td style="text-align:center">切换分支</td></tr><tr><td style="text-align:center">git merge 分支名</td><td style="text-align:center">将指定分支合并到当前分支上</td></tr></tbody></table><h3 id="4-3-1-查看分支">4.3.1  查看分支</h3><p>我们使用语句</p><blockquote><p>git branch -v</p></blockquote><p>查看分支：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -v</span><br><span class="line">* master 267de41 Second</span><br></pre></td></tr></table></figure><h3 id="4-3-2-创建分支">4.3.2  创建分支</h3><p>使用代码：</p><blockquote><p>git branch 分支名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch hotfix</span><br><span class="line">git branch -v</span><br><span class="line"></span><br><span class="line">  hotfix 267de41 Second</span><br><span class="line">* master 267de41 Second</span><br></pre></td></tr></table></figure><h3 id="4-3-3-修改和切换分支">4.3.3  修改和切换分支</h3><p>切换分支的话，我们使用语句：</p><blockquote><p>git checkout 分支名</p></blockquote><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202150649367.png" alt="image-20230202150649367" style="zoom:50%;"><p>注意别把branch打进去了！</p><p>在分支上修改后，还是三板斧放进去。本质上Git的版本控制还是通过底层指针进行的。</p><h3 id="4-3-4-合并分支">4.3.4  合并分支</h3><p>我们先切换回<code>Master</code>分支，不难发现，这个文档回到了没有修改前的样子。</p><p>那我们现在试着把之前的修改合并上去。</p><p>注意，要在某个分支上合并其他分支，必须用指针指向当前分支。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git merge hotfix</span><br><span class="line">Updating 267de41.<span class="number">.00</span>bea41</span><br><span class="line">Fast-forward</span><br><span class="line"> hello.txt | <span class="number">1</span> +</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">1</span> insertion(+)</span><br></pre></td></tr></table></figure><p>此时，已经完成了分支合并。我们来查看下文件，发现<code>hello.txt</code>已经变成了hotfix的模样</p><h3 id="4-3-5-合并分支">4.3.5  合并分支</h3><p>合并分支时，两个分支如果在同一个文件同一个位置有两套完全不同的修改，Git无法决定使用哪一个，必须人为决定新代码的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git merge hotfix</span><br><span class="line">Auto-merging hello.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> hello.txt</span><br><span class="line">Automatic merge failed; fix conflicts <span class="keyword">and</span> then commit the result.</span><br></pre></td></tr></table></figure><p>那怎么办呢？</p><p>打开文件，发现Git给我们标出来冲突的代码了：</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202153343351.png" alt="image-20230202153343351" style="zoom:50%;"><p>我们重新修改后提交，注意，这时候！</p><p>对于冲突文件，不再需要文件名！！</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202153942669.png" alt="image-20230202153942669" style="zoom:50%;"><p>此时状态已经从Meging转化为常态了。</p><p>对于分支HotFix，是不会修改的。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202154216255.png" alt="image-20230202154216255" style="zoom:50%;"><p>master、hotfix实际上都是指向具体版本记录的指针，当前用户所在的分支则是由<code>Head</code>所决定的。</p><hr><h1>Chapter 5. Git 团队协作机制</h1><p>团队协作依托于远程库</p><p>团队内合作</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202190033989.png" alt="image-20230202190033989" style="zoom:50%;"><p>多团队合作</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202190131225.png" alt="image-20230202190131225" style="zoom:50%;"><p>名词解释：</p><ul><li><code>pull</code> 拉取，对更新后的代码进行修正</li><li><code>push</code> 推送，从本地库到远程库</li><li><code>clone</code> 克隆，获取远程库副本</li><li><code>fork</code> 叉子，从一个远程库拷贝到另一个远程库</li></ul><hr><h1>Chaptert 6.  GitHub操作</h1><p>在GitHub中创建一个远程仓库后，我们就可以对远程库进行操作啦。</p><h2 id="仓库别名">仓库别名</h2><p>主要是为了便捷操作，我们可以为我们的仓库创建一个别名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote -v <span class="comment"># 查看当前所有远程地址别名</span></span><br><span class="line">git remote add 别名 远程地址 <span class="comment"># 为其添加别名</span></span><br><span class="line">git remote <span class="built_in">set</span>-url 别名 Url <span class="comment"># 设置新地址</span></span><br></pre></td></tr></table></figure><p>我们现在在https://github.com/Torture03/GitDemo.git上创建了一个空白仓库，试着为其添加一个别名吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add git-demo https://github.com/Torture03/GitDemo.git</span><br></pre></td></tr></table></figure><p>接着可以查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">Torture  (fetch)</span><br><span class="line">Torture  (push)</span><br><span class="line">git-demo        https://github.com/Torture03/GitDemo.git (fetch)</span><br><span class="line">git-demo        https://github.com/Torture03/GitDemo.git (push)</span><br></pre></td></tr></table></figure><p>一个是push别名，另一个是clone别名。</p><h2 id="推送远程库">推送远程库</h2><p>下面我们来将本地仓库推送到远程库。</p><blockquote><p>git push 别名 分支</p></blockquote><p>我们当前的本地库有两个分支，这里需要选择分支进行推送。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ git push Git-Demo_C master</span><br><span class="line"></span><br><span class="line">warning: ----------------- SECURITY WARNING ----------------</span><br><span class="line">warning: | TLS certificate verification has been disabled! |</span><br><span class="line">warning: ---------------------------------------------------</span><br><span class="line">warning: HTTPS connections may <span class="keyword">not</span> be secure. See https://aka.ms/gcm/tlsverify <span class="keyword">for</span> more information.</span><br><span class="line">warning: ----------------- SECURITY WARNING ----------------</span><br><span class="line">warning: | TLS certificate verification has been disabled! |</span><br><span class="line">warning: ---------------------------------------------------</span><br><span class="line">warning: HTTPS connections may <span class="keyword">not</span> be secure. See https://aka.ms/gcm/tlsverify <span class="keyword">for</span> more information.</span><br><span class="line">Enumerating objects: <span class="number">21</span>, done.</span><br><span class="line">Counting objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), done.</span><br><span class="line">Delta compression using up to <span class="number">16</span> threads</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">14</span>/<span class="number">14</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), <span class="number">1.56</span> KiB | <span class="number">799.00</span> KiB/s, done.</span><br><span class="line">Total <span class="number">21</span> (delta <span class="number">7</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span></span><br><span class="line">remote: Resolving deltas: <span class="number">100</span>% (<span class="number">7</span>/<span class="number">7</span>), done.</span><br><span class="line">To https://github.com/Chen-XiaoLv/Git-Demo.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样，就成功实现了推送。</p><h2 id="拉取远程库">拉取远程库</h2><p>有了推送后，当然要拉取啦</p><blockquote><p>git pull 别名 分支</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git pull Git-Demo_C master</span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: <span class="number">5</span>, done.</span><br><span class="line">remote: Counting objects: <span class="number">100</span>% (<span class="number">5</span>/<span class="number">5</span>), done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">remote: Total <span class="number">3</span> (delta <span class="number">1</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span></span><br><span class="line">Unpacking objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), <span class="number">670</span> <span class="built_in">bytes</span> | <span class="number">74.00</span> KiB/s, done.</span><br><span class="line">From https://github.com/Chen-XiaoLv/Git-Demo</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line">   cacd9ae.<span class="number">.5217</span>c64  master     -&gt; Git-Demo_C/master</span><br><span class="line">Updating cacd9ae.<span class="number">.5217</span>c64</span><br><span class="line">Fast-forward</span><br><span class="line"> hello.txt | <span class="number">3</span> ++-</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">2</span> insertions(+), <span class="number">1</span> deletion(-)</span><br></pre></td></tr></table></figure><p>我们也能在GitHub上看到之前的版本信息。</p><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202203611826.png" alt="image-20230202203611826"></p><h2 id="克隆远程库">克隆远程库</h2><p>前面的pull是基于远程库对本地库的更新，而克隆则是直接搞个新的捏。</p><p>我们新建个文件夹。</p><p>然后需要获取远程库的位置。</p><p>注意的是，如果我们想换个账号，需要在Windows凭据中管理。(Windows只能记录一个账号)</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202210103013.png" alt="image-20230202210103013" style="zoom:50%;"><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202210147853.png" alt="image-20230202210147853" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Chen-XiaoLv/Git-Demo.git</span><br><span class="line">Cloning into <span class="string">&#x27;Git-Demo&#x27;</span>...</span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: <span class="number">27</span>, done.</span><br><span class="line">remote: Counting objects: <span class="number">100</span>% (<span class="number">27</span>/<span class="number">27</span>), done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">11</span>/<span class="number">11</span>), done.</span><br><span class="line">remote: Total <span class="number">27</span> (delta <span class="number">8</span>), reused <span class="number">23</span> (delta <span class="number">7</span>), pack-reused <span class="number">0</span></span><br><span class="line">Receiving objects: <span class="number">100</span>% (<span class="number">27</span>/<span class="number">27</span>), done.</span><br><span class="line">Resolving deltas: <span class="number">100</span>% (<span class="number">8</span>/<span class="number">8</span>), done.</span><br></pre></td></tr></table></figure><p>克隆的话不需要账号。</p><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202211240795.png" alt="image-20230202211240795"></p><p>此时我们可以发现，已经克隆下来了。</p><p><code>clone</code>会做三件事：</p><ul><li>拉取代码</li><li>初始化本地库</li><li>创建别名</li></ul><h2 id="团队内协作">团队内协作</h2><p>如果想要往别人的仓库扔代码，那么就需要团队协作。需要仓库创建者邀请。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202213100375.png" alt="image-20230202213100375" style="zoom:50%;"><p>在这里添加管理成员。</p><p>这里获取邀请函地址。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202213203970.png" alt="image-20230202213203970" style="zoom:50%;"><p>登录新成员的账号，直接在浏览器中输入邀请链接即可接收邀请或者婉拒(Decline)</p><h2 id="跨团队协作">跨团队协作</h2><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202213900447.png" alt="image-20230202213900447"></p><p>Fork，类似于加入收藏夹。想要改别人的东西，那就可以fork一下。</p><p>然后呢，可以使用<code>pull request</code>拉取请求，通过审查后，就能push到对方的远程库了。对方在审查后，可以Merge pull request对代码进行更新了。</p><p><strong>SSH免密登录</strong></p><p>SSH(Secure Shell Protocol) 是一种加密远程传输协议，我们可以添加SSH key 进行免密登录。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202215635870.png" alt="image-20230202215635870" style="zoom:50%;"><p>删除Window自带的.ssh文件，打开Git Bash</p><blockquote><p>$ ssh-keygen -t rsa -C <a href="mailto:651421775@qq.com">651421775@qq.com</a></p></blockquote><p>-t 表示加密协议, rsa是著名的非对称加密协议</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202215846874.png" alt="image-20230202215846874" style="zoom:50%;"><p>回车即可。此时会生成新的.ssh密令，</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202215914462.png" alt="image-20230202215914462" style="zoom:50%;"><p>一个是私钥，一个是公钥。</p><p>我们在./ssh下取得公钥：</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202220029497.png" alt="image-20230202220029497" style="zoom:50%;"><p>嗯，在这里添加公钥。</p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230202220204384.png" alt="image-20230202220204384" style="zoom:50%;"><p>现在就能用账号免密登录了…可以用SSH连接进行拉取了。</p><hr><h1>Chapter 7.  PyCharm环境集成Git</h1><hr><p>当我们在<a href="https://git-scm.com/">官网</a>下载好Git后，按照要求进行安装，就可以通过快捷方式对本地仓库进行版本控制啦。但是这种方式处理整个工作环境还是比较麻烦的，接下来，我们将在PyCharm环境中配置Git。</p><h2 id="基础配置">基础配置</h2><p>在设置中，选择版本控制(Version Control)，选择Git(一般来说，Git正常安装后就可以在这里显示插件)</p><img src="https://img-blog.csdnimg.cn/939486cb28054dd882efc8c684a0d3c8.png#pic_center" alt="image-20230203125354082" width="50%"><hr><img src="https://img-blog.csdnimg.cn/77f5106794744cc29e3849bc2d169744.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>我们需要找到Git的可执行文件，如果不知道它在哪，可以打开Git Bash，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where git</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/8b9a6716e5d443f9ac2f922e29f1e044.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>选择文件的位置即可。</p><img src="https://img-blog.csdnimg.cn/5671b889a6d94608adc7f07d10a8635d.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>当然我们也可以添加GitHub账号或者Gitee账号，Gitee需要安装对应的Plugin。</p><img src="https://img-blog.csdnimg.cn/8bdf35c1578a400daf6ac92dd680cc96.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h2 id="简单使用">简单使用</h2><p>通过上面的步骤，我们已经在PyCharm中定位了GIt的路径，下面我们将做一些简单的使用操作。</p><h3 id="Step-1-创建Git仓库">Step 1. 创建Git仓库</h3><p>在VCS选项卡中可以找到。</p><img src="https://img-blog.csdnimg.cn/27f5c31a29a74a6f82b9edb2d13fb156.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>创建仓库后，不出意外的话，当前项目下的文件都会是红色的，也就是modify状态，我们需要将他们提交到本地库。</p><img src="https://img-blog.csdnimg.cn/1f8984d8dd954384920f6fa03bb18225.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>此时我们会发现，VCS选项卡暂时变成了Git选项。在这里就可以执行我们的操作啦。</p><h3 id="Step-2-提交本地库">Step 2. 提交本地库</h3><p>直接选择commit即可</p><img src="https://img-blog.csdnimg.cn/969e4b9882fd428db4050fe10a00cb6d.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在Commit Message中可以输入版本信息，建议详细输入。</p><img src="https://img-blog.csdnimg.cn/9b5e09fd877948c2aa6d2bf49d98816a.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-3-创建分支">Step 3. 创建分支</h3><p>我们可以在Git选项卡中，或是右下角进行分支创建。</p><img src="https://img-blog.csdnimg.cn/21d9fe2f9b9047398484f62396777010.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>此时对代码内容进行修改，发现绿色侧边栏，说明这段代码相较于上一个版本是修改过的。</p><img src="https://img-blog.csdnimg.cn/721acd0886c44a27ae1e8c51dcbd3170.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在左下角的Git选项中，我们可以查看当前的日志信息。</p><p>此时创建出了两个分支，每个分支对应一个指针，黄色指针表示当前HEAD指针的位置。</p><img src="https://img-blog.csdnimg.cn/b872c99f1f0e49508431e64d37d3b6aa.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-4-切换分支">Step 4. 切换分支</h3><p>只需要选择对应分支，然后签出(Checkout)即可。</p><img src="https://img-blog.csdnimg.cn/7ebd759babcb4e22b3365ba320fb5e6d.png#pic_centerr" alt="image-20230203125354082" width="50%"><hr><p>如果此时两个分支的内容不一致，我们就可以在日志信息中看到，分支发生了方向不同的生长。</p><img src="https://img-blog.csdnimg.cn/7712fd6a96bf443fa7ccf02ffc4b98fb.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-5-合并分支">Step 5. 合并分支</h3><p>在当前分支下，可以选择合并其他分支，或者是将当前分支变基到其他分支。</p><img src="https://img-blog.csdnimg.cn/7e08914cf6c94e3f8390ad0bb1576b31.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>当两个分支的内容出现冲突时，就需要我们手动修改。</p><img src="https://img-blog.csdnimg.cn/64bc75a8031247429839f5089ed2fb88.png#pic_center" alt="image-20230203125354082" width="50%"><hr><img src="https://img-blog.csdnimg.cn/27b94ce537d44fe9b5c2f8d43df5c98a.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>合并后，两个分支节点又回到了一个。</p><img src="https://img-blog.csdnimg.cn/49b7d1c298b94a4bae7ff4aa04f777e4.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>我们也可以回到之前的版本。</p><img src="https://img-blog.csdnimg.cn/9ee158ede7b74a07bf3b345d38fb2b5b.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-6-Push本地库">Step 6. Push本地库</h3><p>还是菜单栏的Git选项卡，选择Push，此时我们需要一个远程仓库。</p><img src="https://img-blog.csdnimg.cn/a5a7dd94460d4447b99c9f4596e32c2f.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在GitHub、Gitee、GitLab等远程托管中心下创建一个仓库后，复制HTTPS或是SSH连接，为我们当前本地库的分支选择一个远程库。</p><img src="https://img-blog.csdnimg.cn/f93a795c5cf148f9b6088c3d948b8d75.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>别名的话一般不建议修改，origin就阔以了。</p><img src="https://img-blog.csdnimg.cn/7c6f685cc05f4a7c891882eb5beabde8.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>成功Push后，我们可以看到此时多了一个远程库的指针。</p><img src="https://img-blog.csdnimg.cn/7ef671d09562402f8e5800dd34d67319.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>在远程库中，我们也能看到本地库已经被推送上来了。</p><img src="https://img-blog.csdnimg.cn/0c61989cce80405696c596c52060e2db.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-7-Pull远程库">Step 7. Pull远程库</h3><p>如果远程库发生了版本变化：</p><img src="https://img-blog.csdnimg.cn/2ea996bc812a4630931376c8aa813fbe.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>我们就可以用Pull选项拉取新的版本了。</p><img src="https://img-blog.csdnimg.cn/172d29b8c746412ba6fc4aa8d5993ba2.png#pic_center" alt="image-20230203125354082" width="50%"><hr><img src="https://img-blog.csdnimg.cn/d859c524ea1940ecace2795c428341ba.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h3 id="Step-8-Clone远程库">Step 8. Clone远程库</h3><p>在新建项目这里，选择从VCS获取。</p><img src="https://img-blog.csdnimg.cn/d34a5b8260bf43e389eddca10f400bc8.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>如果之前添加了远程托管中心的账号，就可以直接Clone自己的项目啦。</p><img src="https://img-blog.csdnimg.cn/3121d93ad6364c3e94388d50e2e07ceb.png#pic_center" alt="image-20230203125354082" width="50%"><hr><p>Clone别人的项目就需要输入链接地址。</p><img src="https://img-blog.csdnimg.cn/e06db0a892c54a66ae850815f2f2c163.png#pic_center" alt="image-20230203125354082" width="50%"><hr><h1>Chapter 8. 常见命令</h1><p><img src="/2023/02/02/%E3%80%90Git%E3%80%91%E5%B0%9A%E7%A1%85%E8%B0%B7Git/image-20230203125203152.png" alt="image-20230203125203152">那个 你</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Git</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
    <category term="开发工具" scheme="http://example.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关键对话20讲</title>
    <link href="http://example.com/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/"/>
    <id>http://example.com/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/</id>
    <published>2023-01-15T09:23:14.379Z</published>
    <updated>2023-01-22T09:26:17.984Z</updated>
    
    <content type="html"><![CDATA[<h1>Chapter 1.  基础体系与核心理念</h1><h2 id="1-1-【体系篇】对话能力的组成模块和进阶路径">1.1  【体系篇】对话能力的组成模块和进阶路径</h2><p>🌟 <strong>关键对话的目标</strong></p><p>关键对话的目标在于【双方互相确定需求，交换调整实现利益】</p><p>在进行关键对话前，必须明确自己的需求，了解对方的需求，这样才有可能达到共赢。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">我的需求</th><th style="text-align:center">对方需求</th></tr></thead><tbody><tr><td style="text-align:center">必须达到的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">可以交换的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>🌟 <strong>关键对话的能力</strong></p><p>1️⃣ <strong>表达能力</strong></p><p>2️⃣ <strong>思维能力</strong></p><p>3️⃣ <strong>认知能力</strong></p><p>4️⃣ <strong>交换和创造价值的能力</strong></p><p>5️⃣ <strong>策略运用能力</strong></p><p>6️⃣ <strong>外交能力</strong></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230115181947191.png" alt="image-20230115181947191" style="zoom:50%;"><p>提高关键对话的能力关键在于：</p><blockquote><p>知识、态度、能力</p></blockquote><p>获取知识，更新认知，改变态度，勤加练习，提升能力。</p><p>而这一切的关键在于练习，需要正确的重复。</p><hr><p><strong>课后习题</strong></p><ul><li>画一个关键对话六边形能力图</li><li>请思考下，还有哪些是你需要的能力，是像关键对话一样的复合能力。</li></ul><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230115184042438.png" alt="image-20230115184042438" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">// Schema:</span><br><span class="line">// date,AQIindex,PM2<span class="number">.5</span>,PM10,CO,NO2,SO2</span><br><span class="line">const dataBJ = [</span><br><span class="line">  [<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">const lineStyle = &#123;</span><br><span class="line">  width: <span class="number">1</span>,</span><br><span class="line">  opacity: <span class="number">0.5</span></span><br><span class="line">&#125;;</span><br><span class="line">option = &#123;</span><br><span class="line">  backgroundColor: <span class="string">&#x27;#161627&#x27;</span>,</span><br><span class="line">  title: &#123;</span><br><span class="line">    text: <span class="string">&#x27;关键对话能力&#x27;</span>,</span><br><span class="line">    left: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">    textStyle: &#123;</span><br><span class="line">      color: <span class="string">&#x27;#eee&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  legend: &#123;</span><br><span class="line">    bottom: <span class="number">5</span>,</span><br><span class="line">    data: [<span class="string">&#x27;关键对话能力&#x27;</span>,],</span><br><span class="line">    itemGap: <span class="number">20</span>,</span><br><span class="line">    textStyle: &#123;</span><br><span class="line">      color: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">      fontSize: <span class="number">14</span></span><br><span class="line">    &#125;,</span><br><span class="line">    selectedMode: <span class="string">&#x27;single&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  radar: &#123;</span><br><span class="line">    indicator: [</span><br><span class="line">      &#123; name: <span class="string">&#x27;表达能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;思维能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;认知能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;交换和创造价值能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;策略应用能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;,</span><br><span class="line">      &#123; name: <span class="string">&#x27;外交能力&#x27;</span>, <span class="built_in">max</span>: <span class="number">10</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    shape: <span class="string">&#x27;circle&#x27;</span>,</span><br><span class="line">    splitNumber: <span class="number">5</span>,</span><br><span class="line">    axisName: &#123;</span><br><span class="line">      color: <span class="string">&#x27;rgb(238, 197, 102)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    splitLine: &#123;</span><br><span class="line">      lineStyle: &#123;</span><br><span class="line">        color: [</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.1)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.2)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.4)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.6)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 0.8)&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;rgba(238, 197, 102, 1)&#x27;</span></span><br><span class="line">        ].reverse()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitArea: &#123;</span><br><span class="line">      show: false</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLine: &#123;</span><br><span class="line">      lineStyle: &#123;</span><br><span class="line">        color: <span class="string">&#x27;rgba(238, 197, 102, 0.5)&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;关键对话能力&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;radar&#x27;</span>,</span><br><span class="line">      lineStyle: lineStyle,</span><br><span class="line">      data: dataBJ,</span><br><span class="line">      symbol: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">      itemStyle: &#123;</span><br><span class="line">        color: <span class="string">&#x27;#F9713C&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      areaStyle: &#123;</span><br><span class="line">        opacity: <span class="number">0.1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>关于其他的能力：</p><ul><li>我想，在对话中保持专注、抓住细节并给予一定的反馈是十分必要的，因而专注力、敏感力也是需要进行训练的。除此之外，知识的积累量也能成为博弈中的胜负手。</li></ul><hr><h2 id="1-2-【核心理念】别让立场掩盖了利益">1.2  【核心理念】别让立场掩盖了利益</h2><p>如何剥开立场看利益？</p><p>通过探求的口吻与想解决问题的语气来问问题，反问与质问都是不可取的。</p><p><strong>【模型】</strong></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230116194720737.png" alt="image-20230116194720737" style="zoom:50%;"><p><strong>【第一原则】</strong></p><p>我们的关注应该在<strong>利益</strong>，而不是<strong>立场</strong>。</p><p><strong>【第二原则】</strong></p><p>始终坚持<strong>共同利益</strong>。只要是在对话中的双方，永远都有共同利益。</p><p>避免损失，也是共同利益。</p><p>那么要如何寻找共同利益？可以采用<strong>逆向思维</strong>、<strong>长期主义思维</strong></p><p>情绪和自我感受往往会让人难以走出立场，看到利益。不是不可以有情绪，而是需要学会不被情绪所驾驭。</p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230116200629816.png" alt="image-20230116200629816" style="zoom:50%;"><hr><p><strong>课后思考题</strong></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230116201105332.png" alt="image-20230116201105332" style="zoom:50%;"><hr><h1>Chapter 2. 关键对话：技能和为思维模型</h1><h2 id="2-1-表达能力：“会说”的关键在于“会听”">2.1  表达能力：“会说”的关键在于“会听”</h2><p>首先需要明确对话双方的<strong>关系</strong>，谈话是【当下】场合的艺术。</p><p>在不同时空、不同关系下的对话，往往有着不同的含义。我们需要学会在关系里【听需求】。</p><p>表达可以分成三对概念：</p><ul><li>观察和事实</li><li>感受和判断</li><li>请求和要求</li></ul><p>1️⃣ <strong>观察和事实</strong></p><ul><li>观察是观察者所认为的事实，不同的人可能会看到不同的事实。对于某件事情，在不同的观测角度下，会产生不同的事实。【真像】只能接近，而无法达到。</li><li>切忌，不能将自己的观察当做所有人的观察。</li></ul><p>2️⃣ <strong>感受和判断</strong></p><ul><li>【感受】是发自内心的</li><li>【判断】是对事件【下结论】</li></ul><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230117195850229.png" alt="image-20230117195850229" style="zoom:50%;"><p>一般来说，【观察】+【感受】是一个好的表达方式，下判断是引起争论的重要原因。</p><p>判断有三种主要形式：</p><ul><li>评价<ul><li>对于他人、他事使用的描述性语言</li></ul></li><li>比较<ul><li>令人不快的方式，尽量少用【不知道对方心中如何想的】</li></ul></li><li>归责<ul><li>将事情的责任引导到别的地方</li></ul></li></ul><p>3️⃣ <strong>请求和要求</strong></p><ul><li>互相有了请求，开始用利益交换满足互相需要的实际操作过程。</li></ul><p>提出请求的原则：</p><ul><li>请求要具体</li><li>请求没有满足，不能惩罚</li></ul><p>要求是是在请求后给出了惩罚，哪怕是负面评价。</p><hr><p><strong>应用模型</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>描述你的观察</mtext><mo>+</mo><mtext>表达你的感受</mtext><mo>+</mo><mtext>提出你的请求</mtext></mrow><annotation encoding="application/x-tex">描述你的观察+表达你的感受+提出你的请求</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">描述你的观察</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">表达你的感受</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">提出你的请求</span></span></span></span></span></p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230117200656220.png" alt="image-20230117200656220" style="zoom:50%;"><p>过于强调主观、事实、判断，这是从立场出发，违反了我们最初的原则：谈【利益】不谈【立场】。</p><p>如果对方的表达带有比较强烈的事实和判断，我们可以通过提问和倾听的方式了解需求，这样才能真正解决问题。</p><p><strong>举个栗子</strong><br>阿伟昨天又通宵打游戏了，你作为阿婆想要劝劝他。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;阿伟，你又通宵打电动哦，这样对身体不好，赶紧关了&quot;</span></span><br><span class="line"><span class="string">&quot;豁，死了啦，都是你害的&quot;</span></span><br></pre></td></tr></table></figure><p>阿婆说的话是带有明显的判断和要求的，并不是一种好的对话。我们可以改成这样说：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;阿伟，我看你神色不太好，是不是昨天玩的太晚啦？我们可以白天打游戏嘛&quot;</span></span><br></pre></td></tr></table></figure><p>如果阿伟又是带有强烈主观判断的回答，我们可以通过问问题的方式，尝试挖掘出潜在的原因(需求)，从而解决问题。</p><hr><p><strong>课后练习</strong></p><p><img src="/2023/01/15/%E3%80%90%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2%E3%80%91%E5%85%B3%E9%94%AE%E5%AF%B9%E8%AF%9D20%E8%AE%B2/image-20230117202728911.png" alt="image-20230117202728911"></p><ul><li>A. 您好，这几天我看您每天都很早起来工作，现在的进度怎么样啦？因为我早上起的比较晚，您的施工时间会影响到我的睡眠，可以稍微晚一点吗？</li><li>B. 关你什么事。我啥时候施工是我的权利，你自己不能早点起？</li><li>A. 没事没事，我就是顺口一提，您是在赶工程吗？还是晚间有别的事情要做？</li><li>B. 哼，年关将近，我做不完你来帮我？</li><li>A. 啊，可以理解的。我觉得您要是在国家规定的时间段内施工，我们邻里都非常乐意帮助您的，别的时间段可能会让邻居们不满哦</li><li>B. 你是在威胁我？老子做事还要你教？</li><li>A. 俗话说远亲不如近邻嘛，都是邻里，平时有时还能帮衬帮衬，咱平常互相关照下嘛，大家都有难处，能在私下解决是最好不过了</li><li>B. 听你的意思，还想告我啊？去告啊？</li></ul><p>如何拜年引起的思考</p><p>总结一个对话的模型：</p><p>因为是十分客套的对话，并没有真正的利益和立场牵扯，所以下面这个模型就叫做废话模型。</p><p>1️⃣ 询问近况：做什么，吃了吗，身体怎么样，有什么需求，需要什么帮助</p><p>2️⃣ 表明来意：可以是新年快乐，祝您身体健康，万事如意</p><p>3️⃣ 婉转退场：可以是还有点事，可以是约个时间聚一下，可以是找机会探望</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">教你怎么说话</summary>
    
    
    
    <category term="梦时风月" scheme="http://example.com/categories/%E6%A2%A6%E6%97%B6%E9%A3%8E%E6%9C%88/"/>
    
    
    <category term="日常" scheme="http://example.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/12/28/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%88%98%E5%BD%AC%E5%8D%95%E8%AF%8D%E9%80%9F%E8%AE%B0/"/>
    <id>http://example.com/2022/12/28/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%88%98%E5%BD%AC%E5%8D%95%E8%AF%8D%E9%80%9F%E8%AE%B0/</id>
    <published>2022-12-28T11:12:03.332Z</published>
    <updated>2022-12-29T16:41:39.372Z</updated>
    
    <content type="html"><![CDATA[<h1>刘彬单词速记</h1><hr><h2 id="Chapter-1">Chapter 1.</h2><h3 id="词根">词根</h3><table><thead><tr><th style="text-align:center">词根</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-cess</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-ceed</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-cede</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-gress</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-grad</td><td style="text-align:center">to go 走</td></tr><tr><td style="text-align:center">-gred</td><td style="text-align:center">to go 走</td></tr></tbody></table><h3 id="前缀">前缀</h3><table><thead><tr><th style="text-align:center">前缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">pro-</td><td style="text-align:center">(动态的)forward，向前</td></tr><tr><td style="text-align:center">pre-</td><td style="text-align:center">（静态的)向前</td></tr><tr><td style="text-align:center">under-</td><td style="text-align:center">下面，下</td></tr><tr><td style="text-align:center">in-</td><td style="text-align:center">进入</td></tr><tr><td style="text-align:center">a-</td><td style="text-align:center">强调，加强</td></tr><tr><td style="text-align:center">a+辅音-</td><td style="text-align:center">强调，加强</td></tr><tr><td style="text-align:center">un-</td><td style="text-align:center">否定</td></tr><tr><td style="text-align:center">re-</td><td style="text-align:center">(1). 相反 (2).返回  (3).反复</td></tr><tr><td style="text-align:center">e-</td><td style="text-align:center">(1). 向外</td></tr><tr><td style="text-align:center">ex-</td><td style="text-align:center">(2). 出，超出</td></tr><tr><td style="text-align:center">es-</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">ac-</td><td style="text-align:center">朝…走 强调</td></tr></tbody></table><h3 id="后缀">后缀</h3><table><thead><tr><th style="text-align:center">后缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-or</td><td style="text-align:center">都是元音+<code>r</code>，结果相同。表示：(1). 名词：人，机</td></tr><tr><td style="text-align:center">-er</td><td style="text-align:center">(2). 形容词：…的</td></tr><tr><td style="text-align:center">-ar</td><td style="text-align:center">(3). 极少数: 动词</td></tr><tr><td style="text-align:center">-ur</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ion</td><td style="text-align:center">名词性后缀</td></tr><tr><td style="text-align:center">-ate</td><td style="text-align:center">(1). 动词：使得</td></tr><tr><td style="text-align:center">-ite</td><td style="text-align:center">(2). 形容词</td></tr><tr><td style="text-align:center">-ute</td><td style="text-align:center">(3). 少数： 名词</td></tr><tr><td style="text-align:center">-ive</td><td style="text-align:center">(1).形容词性后缀  表示多 (2). 名词：人，物</td></tr><tr><td style="text-align:center">-ent</td><td style="text-align:center">(1). 名词：人，物</td></tr><tr><td style="text-align:center">-ant</td><td style="text-align:center">(2). 形容词</td></tr><tr><td style="text-align:center">-ed</td><td style="text-align:center">形容词性</td></tr><tr><td style="text-align:center">-ence</td><td style="text-align:center">名词性后缀</td></tr><tr><td style="text-align:center">-ance</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ancy</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ency</td><td style="text-align:center">—</td></tr><tr><td style="text-align:center">-ible</td><td style="text-align:center">可以…的</td></tr><tr><td style="text-align:center">-ory</td><td style="text-align:center">名词性</td></tr></tbody></table><h3 id="连接符号">连接符号</h3><table><thead><tr><th style="text-align:center">连接符号</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-u</td><td style="text-align:center">用来连接前缀和后缀的</td></tr><tr><td style="text-align:center">-ul</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-ol</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-o</td><td style="text-align:center">–</td></tr></tbody></table><h3 id="单词">单词</h3><table><thead><tr><th style="text-align:center">单词</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><strong>process</strong></td><td style="text-align:center"><strong>进程，过程；加工，处理</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pro(向前)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 工厂机器加工处理矿泉水瓶</td></tr><tr><td style="text-align:center"><strong>processor</strong></td><td style="text-align:center"><strong>处理器</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">多了个后缀捏</td></tr><tr><td style="text-align:center"><strong>procession</strong></td><td style="text-align:center"><strong>队列，行列，一列，一排</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center"><code>ion</code>后缀，表示名词，一堆流程堆在队列里了</td></tr><tr><td style="text-align:center"><strong>graduate</strong></td><td style="text-align:center"><strong>毕业；本科毕业生</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">grad(前缀，走)+u(连接)+ate(名词后缀)</td></tr><tr><td style="text-align:center"><strong>undergraduate</strong></td><td style="text-align:center"><strong>未毕业</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">under(下面，未达到)+graduate</td></tr><tr><td style="text-align:center"><strong>ingredient</strong></td><td style="text-align:center"><strong>成分，原料，要素</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">in(进入)+gredi(走)+ent(名词后缀)</td></tr><tr><td style="text-align:center"><strong>aggress</strong></td><td style="text-align:center"><strong>侵略</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ag(强调)+gress(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 法西斯拿着枪压着犹太人</td></tr><tr><td style="text-align:center"><strong>aggressive</strong></td><td style="text-align:center"><strong>侵略性的，激进的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">aggress+ive(形容词性)</td></tr><tr><td style="text-align:center"><strong>aggression</strong></td><td style="text-align:center"><strong>侵略</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">aggress+ion(名词性)</td></tr><tr><td style="text-align:center"><strong>progress</strong></td><td style="text-align:center"><strong>前进，进步</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">注意与其他几位的辨别</td></tr><tr><td style="text-align:center"><strong>proceed</strong></td><td style="text-align:center"><strong>前进，进行，继续</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">注意与其他几位的辨别</td></tr><tr><td style="text-align:center"><strong>procedure</strong></td><td style="text-align:center"><strong>程序，步骤</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pro+ced+ure(名词性)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 向前走</td></tr><tr><td style="text-align:center"><strong>precede</strong></td><td style="text-align:center"><strong>领先于，优于</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pre(静态:向前)+cede(走)</td></tr><tr><td style="text-align:center"><strong>precedent</strong></td><td style="text-align:center"><strong>先例，前例；先前的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">precede+ent(名词后缀)</td></tr><tr><td style="text-align:center"><strong>unprecedented</strong></td><td style="text-align:center"><strong>史无前例的，空前</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">un(否定)+precedent+ed(形容词性)</td></tr><tr><td style="text-align:center"><strong>precedence</strong></td><td style="text-align:center"><strong>优先</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">precede+ence(名词性)</td></tr><tr><td style="text-align:center"><strong>priority</strong></td><td style="text-align:center">同义词，<strong>优先</strong></td></tr><tr><td style="text-align:center"><strong>access</strong></td><td style="text-align:center"><strong>接近，进入；使用、获取</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ac(加强语气)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走过去</td></tr><tr><td style="text-align:center"><strong>accessible</strong></td><td style="text-align:center"><strong>可接近的，可使用的，可获取的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">access+ible(可以…的)</td></tr><tr><td style="text-align:center"><strong>accessory</strong></td><td style="text-align:center"><strong>配件、附件、从犯</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">access+ory(名词性后缀)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 和主要的东西走在一起</td></tr><tr><td style="text-align:center"><strong>recession</strong></td><td style="text-align:center"><strong>衰退、后退、凹处、不景气</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">re(返回)+cess(走)+ion(名词性)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>返回走</td></tr><tr><td style="text-align:center"><strong>recede</strong></td><td style="text-align:center"><strong>衰退</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">recession的动词，注意变化</td></tr><tr><td style="text-align:center"><strong>excess</strong></td><td style="text-align:center"><strong>过度、过量、超过</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ex(向外，出去)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 超出了，过量</td></tr><tr><td style="text-align:center"><strong>excessive</strong></td><td style="text-align:center"><strong>形容词的过度、过量</strong></td></tr><tr><td style="text-align:center"><strong>exceed</strong></td><td style="text-align:center"><strong>超过，胜过</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">相较于<code>cess</code>，<code>ceed</code>似乎更热衷于扮演动词角色</td></tr><tr><td style="text-align:center"><strong>exceedingly</strong></td><td style="text-align:center"><strong>非常，极其</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">exceeding+ly(形容词性)</td></tr><tr><td style="text-align:center"><strong>cease</strong></td><td style="text-align:center"><strong>停止，终了</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ceas=cess, eas模仿<code>end</code>，走到尽头</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="核心内容">核心内容</h3><ul><li><p><code>s, t, d</code>可以互相转换</p></li><li><p>元音的互相组合并不影响含义，例如：<code>eat</code><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> <code>es/ed</code></p></li><li><p><code>co\con\com\col\cor</code> 是同一含义在不同语句中的同化音。表示的意思有：1. 一起，协同； 2. 强调</p></li></ul><h3 id="扩展内容">扩展内容</h3><p>⭐ <code>make a passing remark</code></p><p>🌟 简单评论下；顺带说一下</p><p>⭐ <code>Data processing</code></p><p>🌟 数据处理</p><p>⭐ <code>make a rapid progress</code></p><p>🌟 取得快速进步</p><p>⭐ <code>proceed with/ to</code></p><p>🌟 继续做 / 前往</p><p>⭐ <code>legal procedure</code></p><p>🌟 法律程序</p><p>⭐ <code>give priority/precedence to sth</code></p><p>🌟 优先考虑…</p><p>⭐ <code>have access to</code></p><p>🌟 使用，利用</p><p>⭐ <code>excess demand</code></p><p>🌟 过度需求</p><p>⭐ <code>cease fire</code></p><p>🌟 停火</p><img src="/2022/12/28/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%88%98%E5%BD%AC%E5%8D%95%E8%AF%8D%E9%80%9F%E8%AE%B0/image-20221229161950832.png" alt="image-20221229161950832" style="zoom:50%;"><hr><h2 id="Chapter-2">Chapter 2.</h2><h3 id="词根-v2">词根</h3><table><thead><tr><th style="text-align:center">词根</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="前缀-v2">前缀</h3><table><thead><tr><th style="text-align:center">前缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">sub-</td><td style="text-align:center">(1). 下,向下: subway</td></tr><tr><td style="text-align:center">sup-</td><td style="text-align:center">(2). 自底向上: submit</td></tr><tr><td style="text-align:center">suc-</td><td style="text-align:center">(3). 亚于，次于: suburban</td></tr><tr><td style="text-align:center">sus-</td><td style="text-align:center">（4). 后，后面: subsequent</td></tr><tr><td style="text-align:center">de-</td><td style="text-align:center">下</td></tr><tr><td style="text-align:center">com-</td><td style="text-align:center">(1). 共同，一起</td></tr><tr><td style="text-align:center">col-</td><td style="text-align:center">(2). 仅表示加强</td></tr><tr><td style="text-align:center">cor-</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">co-</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">con-</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">anc-</td><td style="text-align:center">(1). 以前，老；(2). 高</td></tr><tr><td style="text-align:center">ant-</td><td style="text-align:center">(1). 以前的 antique (2). anti- 反对</td></tr><tr><td style="text-align:center">abs-</td><td style="text-align:center">away 远离</td></tr><tr><td style="text-align:center">inter-</td><td style="text-align:center">在…之间</td></tr><tr><td style="text-align:center">trans-</td><td style="text-align:center">穿/转/传</td></tr></tbody></table><h3 id="后缀-v2">后缀</h3><table><thead><tr><th style="text-align:center">后缀</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">-ful</td><td style="text-align:center">形容词性后缀</td></tr><tr><td style="text-align:center">-ly</td><td style="text-align:center">一般是副词性后缀</td></tr><tr><td style="text-align:center">-ry</td><td style="text-align:center">一般是名词性后缀</td></tr><tr><td style="text-align:center">-ary</td><td style="text-align:center">形容词性后缀</td></tr><tr><td style="text-align:center">-ity</td><td style="text-align:center">非常强烈的名词！</td></tr><tr><td style="text-align:center">-lity</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-ility</td><td style="text-align:center">–</td></tr><tr><td style="text-align:center">-itate</td><td style="text-align:center">ite+ate复合而成，e不发音而省略</td></tr><tr><td style="text-align:center">-ate</td><td style="text-align:center">最多是做动词和形容词</td></tr><tr><td style="text-align:center">-ite</td><td style="text-align:center">最多的是做形容词</td></tr><tr><td style="text-align:center">-ute</td><td style="text-align:center">最多的是动词</td></tr><tr><td style="text-align:center">-ation</td><td style="text-align:center">-ate±ion复合而成，ion是名词性后缀</td></tr><tr><td style="text-align:center">-al</td><td style="text-align:center">形容词性后缀</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="连接符号-v2">连接符号</h3><table><thead><tr><th style="text-align:center">连接符号</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="单词-v2">单词</h3><table><thead><tr><th style="text-align:center">单词</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><strong>succeed</strong></td><td style="text-align:center"><strong>成功、继任、继承、兴旺</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">suc(自底向上)+ceed(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 成功；suc(在后面)+ceed<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 继承</td></tr><tr><td style="text-align:center"><strong>succeeding</strong></td><td style="text-align:center"><strong>随后的，以后的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">suc(后面)+ceed(走)+ing(形容词后缀)</td></tr><tr><td style="text-align:center"><strong>success</strong></td><td style="text-align:center"><strong>成功，胜利；成大事的人</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ceed更像是动词，cess更像是名词</td></tr><tr><td style="text-align:center"><strong>successful</strong></td><td style="text-align:center"><strong>成功的，一帆风顺的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ful这个是形容词性后缀</td></tr><tr><td style="text-align:center"><strong>successfully</strong></td><td style="text-align:center"><strong>成功地</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ly是副词性后缀啦</td></tr><tr><td style="text-align:center"><strong>successor</strong></td><td style="text-align:center"><strong>后继者，后继的事物</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">success用的是继承的词性+or表示人或物</td></tr><tr><td style="text-align:center"><strong>succession</strong></td><td style="text-align:center"><strong>连续、继位、接替</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ion表示名词</td></tr><tr><td style="text-align:center"><strong>successive</strong></td><td style="text-align:center"><strong>连续的、继承的、依次的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ive这个表示形容词性，有多`的额外含义</td></tr><tr><td style="text-align:center"><strong>predecessor</strong></td><td style="text-align:center"><strong>前辈，前任</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">pre(前)+de(下)+cess(走)+or<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 之前的走下台的人</td></tr><tr><td style="text-align:center"><strong>necessary</strong></td><td style="text-align:center"><strong>必要的，必须的，必然的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ne(否定，不)+cess(走)+ary(adj.)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 不得不走的路</td></tr><tr><td style="text-align:center"><strong>necessarily</strong></td><td style="text-align:center"><strong>必须滴</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center"><code>ly</code>后缀</td></tr><tr><td style="text-align:center"><strong>necessity</strong></td><td style="text-align:center"><strong>必需品</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ity是强名词后缀</td></tr><tr><td style="text-align:center"><strong>necessitate</strong></td><td style="text-align:center"><strong>使成为必须；迫使</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ite+ate<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 复合后缀(itate)</td></tr><tr><td style="text-align:center"><strong>degrade</strong></td><td style="text-align:center"><strong>使…丢脸；使…降级；使…降</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">de(向下)+grade(级别)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 级别向下</td></tr><tr><td style="text-align:center"><strong>degradation</strong></td><td style="text-align:center"><strong>降级、堕落、退化</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ation是ate+ion复合而成的，很常见，表示名词性后缀</td></tr><tr><td style="text-align:center"><strong>upgrade</strong></td><td style="text-align:center"><strong>提升、升级、改良品种</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">up向上+grade(级别)</td></tr><tr><td style="text-align:center"><strong>gradual</strong></td><td style="text-align:center"><strong>逐渐的、逐步的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">grad(走)+u+al(形容词)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 一步一步走着：渐渐地</td></tr><tr><td style="text-align:center"><strong>gradually</strong></td><td style="text-align:center"><strong>渐渐地；逐步地</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">gradual+ly(副词性后缀)</td></tr><tr><td style="text-align:center"><strong>congress</strong></td><td style="text-align:center"><strong>国会、会议、社交、代表大会</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">con(一起，共同)+gress(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走到一起(开会)</td></tr><tr><td style="text-align:center"><strong>congressional</strong></td><td style="text-align:center"><strong>国会的、议会的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ion+al 复合后缀，以最后为准</td></tr><tr><td style="text-align:center"><strong>congressman</strong></td><td style="text-align:center"><strong>国会议员</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">Iroman！</td></tr><tr><td style="text-align:center"><strong>ancestor</strong></td><td style="text-align:center"><strong>祖先，始祖</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">anc(以前、老)+cest(走 cess std互通)+or$\to $之前走的人</td></tr><tr><td style="text-align:center"><strong>ancestral</strong></td><td style="text-align:center"><strong>祖传的</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ancest+ral(形容词性)</td></tr><tr><td style="text-align:center"><strong>ancestry</strong></td><td style="text-align:center"><strong>祖先，血统</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ryyyy！</td></tr><tr><td style="text-align:center"><strong>concede</strong></td><td style="text-align:center"><strong>让步、退让、(勉强)承认</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">con(共同、一起)+cede(走)</td></tr><tr><td style="text-align:center"><strong>concession</strong></td><td style="text-align:center"><strong>让步、特许、承认、退位</strong></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:center">ion</td></tr><tr><td style="text-align:center"><strong>abscess</strong></td><td style="text-align:center"><strong>脓肿，脓疮</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">abs(=away 走开)+cess(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走不掉的</td></tr><tr><td style="text-align:center"><strong>accede</strong></td><td style="text-align:center"><strong>同意、加入、就任、就职</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ac(朝)+cede(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走到一起了</td></tr><tr><td style="text-align:center"><strong>accession</strong></td><td style="text-align:center"><strong>增加、就职、到达</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">access?其实是accede+ion啦</td></tr><tr><td style="text-align:center"><strong>antecede</strong></td><td style="text-align:center"><strong>在…之前、胜过、先前</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ante(以前)+cede(走)</td></tr><tr><td style="text-align:center"><strong>antecedent</strong></td><td style="text-align:center"><strong>先行词，先例，祖先</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">antecede+ent</td></tr><tr><td style="text-align:center"><strong>incessant</strong></td><td style="text-align:center"><strong>不断的，不停的，连续的</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">in(此时表示not)+cess(走，cease停止)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>+ant(adj.) 不要停止</td></tr><tr><td style="text-align:center"><strong>intercede</strong></td><td style="text-align:center"><strong>调解、调停、求情</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">intert(之间、相互)+cede(奔走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 奔走两人之间求情</td></tr><tr><td style="text-align:center"><strong>secede</strong></td><td style="text-align:center"><strong>（国家、大集团）退出、脱离</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">se(separate)+cede<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 分开走</td></tr><tr><td style="text-align:center"><strong>secession</strong></td><td style="text-align:center"><strong>脱离、分离</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">se+cess+ion</td></tr><tr><td style="text-align:center"><strong>digress</strong></td><td style="text-align:center"><strong>离题、岔道</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">di(dis分开)+gress(走)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 走成Y字了</td></tr><tr><td style="text-align:center"><strong>regress</strong></td><td style="text-align:center"><strong>逆行，退回，复归</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">re(返回)+gress</td></tr><tr><td style="text-align:center"><strong>regression</strong></td><td style="text-align:center"><strong>退化；回归；逆行</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ion</td></tr><tr><td style="text-align:center"><strong>regressive</strong></td><td style="text-align:center"><strong>回归的、后退的、退化的</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">ive</td></tr><tr><td style="text-align:center"><strong>ingress</strong></td><td style="text-align:center"><strong>进入，入口，入境</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">这是名词</td></tr><tr><td style="text-align:center"><strong>transgression</strong></td><td style="text-align:center"><strong>越界、违反</strong></td></tr><tr><td style="text-align:center">⭐</td><td style="text-align:center">trans(穿过)+gress+ion</td></tr></tbody></table><h3 id="核心内容-v2">核心内容</h3><ul><li><p><code>sub</code>、<code>sup</code>、<code>suc</code>、<code>sus</code>本质上是一样的，只是在不同读音环境下的同化音罢了。<code>BPCS</code></p></li><li><p><code>-ive</code>后缀当形容词性有<code>多\大</code>的引申义，例如：<code>productive(多产的)</code>，<code>expensive(昂贵的)</code></p></li><li><p><code>-ive</code>当名词词性时，可以表示人、物，例如：<code>representive 发言人</code>，<code>relative 关系</code>， <code>insentive 刺激</code></p></li><li><p>复合后缀词性看最后</p></li></ul><h3 id="扩展内容-v2">扩展内容</h3><p>⭐ <code>succeed in (doing) sth.</code></p><p>🌟 成功做某事</p><p>⭐ <code>a succession of sth.</code></p><p>🌟 一连串的东西</p><p>⭐ <code>out of necessity</code></p><p>🌟 出于必要(out of : 出于)</p><p>⭐ <code>If you accede to someone's request, you do what they ask.</code></p><p>⭐ 往前走：<code>progress</code>，往后走：<code>regress</code></p><p>⭐ <code>A high seating position makes ingress and egress easy.</code></p><p>🌟 较高的座椅位置使入口和出口容易</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;刘彬单词速记&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Chapter-1&quot;&gt;Chapter 1.&lt;/h2&gt;
&lt;h3 id=&quot;词根&quot;&gt;词根&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;词根&lt;/th&gt;
&lt;th s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【QT】信号与槽</title>
    <link href="http://example.com/2022/12/24/%E3%80%90QT%E3%80%91%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%A7%BD/"/>
    <id>http://example.com/2022/12/24/%E3%80%90QT%E3%80%91%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%A7%BD/</id>
    <published>2022-12-24T12:57:00.996Z</published>
    <updated>2022-12-24T14:24:40.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="信号与槽">信号与槽</h2><p>**信号(Signal)<strong>与</strong>槽(Slot)**是Qt中对象之间的通信方式，可以用一个简单的栗子说明：当我们想要开灯时，按下开关发出指令，这就是信号；而灯泡接收到电流变化，发出光亮，这就是响应(槽)。</p><p>我们也可以换个称呼方式：</p><ul><li>信号：触发事件</li><li>槽：响应函数</li></ul><p>所有继承自QObject的类，都可以包含信号和槽。当对象的状态发生改变时，就会发出信号。当然，他并不关心是否有人接收到这个信号。</p><p>槽函数就是用来接收对象的一个方法或是接口，就跟信号发出去并不知道有没有槽接收一样，槽也不知道有没有信号来调动他，他只是个固有属性。</p><p>信号和槽之间的关系是开放多元的，你可以看见一个信号连接到好几个槽，也可以见到一个槽上有好几个信号。更诡异的是，甚至可以将一个信号插到另一个信号上。</p><p>Qt小组件有许多预定义的信号和槽，例如QAbstractButton有一个Clicked()的信号，QLineEdit有一个clear()的槽。一般通过信号的<code>connect()</code>方法，将信号与槽联系起来。例如：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">button=QToolButton()</span><br><span class="line">line_edit=QLineEdit()</span><br><span class="line">button.clicked.connect(line_edit.clear)</span><br></pre></td></tr></table></figure><p><code>connect()</code>将会翻译一个QMetaObject对象，该对象可以与<code>disconnect()</code>方法使用，以断开连接。</p><p>当然，除了预设的函数外，信号也可以连接到自由函数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QApplication,QPushButton</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The &#x27;function&#x27; has been called&quot;</span>)</span><br><span class="line"></span><br><span class="line">app=QApplication()</span><br><span class="line">button=QPushButton(<span class="string">&quot;Call function&quot;</span>)</span><br><span class="line">button.clicked.connect(function)</span><br><span class="line">button.show()</span><br><span class="line">sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><hr><h2 id="信号类">信号类</h2><p>信号类需要是<code>QtCore.Signal()</code>类的变量，一般我们定义信号，是在类方法的上面进行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Button</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">clicked=Signal(Qt.MouseButton)</span><br></pre></td></tr></table></figure><p>然后，我们就可以设置信号的发出：<code>emit</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self.event</span>):</span><br><span class="line">self.clicked.emit(event.button())</span><br></pre></td></tr></table></figure><p>完整代码如下，这个Button将返回按下的鼠标按键类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Button</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    clicked=Signal(Qt.MouseButton)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Button, self).__init__()</span><br><span class="line">        <span class="comment"># 绑定信号与槽</span></span><br><span class="line">        self.clicked.connect(self.PrintE)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @Slot()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PrintE</span>(<span class="params">self,arg</span>):</span><br><span class="line">        <span class="built_in">print</span>(arg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        <span class="comment"># 鼠标移动时，作为触发器发出信号</span></span><br><span class="line">        self.clicked.emit(event.button())</span><br><span class="line"></span><br><span class="line">App=QApplication()</span><br><span class="line">button=Button()</span><br><span class="line">button.show()</span><br><span class="line">sys.exit(App.<span class="built_in">exec</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2022/12/24/%E3%80%90QT%E3%80%91%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%A7%BD/image-20221224220327182.png" alt="image-20221224220327182" style="zoom:50%;"><p><code>Signal</code>的构造函数可以接收一个元组或者一个Python类型或是C类型的列表：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">signal1 = Signal(int)  # Python types</span><br><span class="line">signal2 = Signal(QUrl)  # Qt Types</span><br><span class="line">signal3 = Signal(int, str, int)  # more than one <span class="keyword">type</span></span><br><span class="line">signal4 = Signal((float,), (QDate,))  # optional types</span><br></pre></td></tr></table></figure><p>除此之外，它还可以接收定义信号名称的命名参数名。如果没有传递任何信息，则新信号将与赋值给它的变量具有相同的名称。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TODO</span></span><br><span class="line">signal5 = Signal(<span class="built_in">int</span>, name=<span class="string">&#x27;rangeChanged&#x27;</span>)</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">rangeChanged.emit(...)</span><br></pre></td></tr></table></figure><p><code>Signal</code>还带有可选参数，比如<code>sumResult=Signal(int,arguments=['sum'])</code></p><hr><h2 id="槽类">槽类</h2><p>QObject派生类中的slot应该由装饰器@QtCore.Slot()表示。同样，要定义<code>Signal</code>，只需传递类似QtCore.Signal()类的类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slot(<span class="params"><span class="built_in">str</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">slot_function</span>(<span class="params">self, s</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>Slot()也接受名称和结果关键字。result关键字定义了将返回的类型，可以是C或Python类型。name关键字的行为与Signal()中的相同。如果没有传递任何名称，则新插槽将具有与正在装饰的函数相同的名称。</p><hr><h2 id="重载信号与槽">重载信号与槽</h2><p>我们举个简单的栗子，来使用信号与槽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QApplication,QPushButton</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QObject,Signal,Slot</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Communicate</span>(<span class="title class_ inherited__">QObject</span>):</span><br><span class="line">    <span class="comment"># 创建两个新的信号，一个用于处理整数类型，一个处理字符串类型</span></span><br><span class="line">    speak=Signal((<span class="built_in">int</span>,),(<span class="built_in">str</span>,))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Communicate, self).__init__()</span><br><span class="line">        <span class="comment"># 将 信号1 连接到 槽函数</span></span><br><span class="line">        self.speak[<span class="built_in">int</span>].connect(self.say_something)</span><br><span class="line">        <span class="comment"># 将 信号2 连接到 槽函数</span></span><br><span class="line">        self.speak[<span class="built_in">str</span>].connect(self.say_something)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义一个新的槽函数，将会接收一个整形或者一个字符串</span></span><br><span class="line">    <span class="comment"># 并且打印他们的名字</span></span><br><span class="line"><span class="meta">    @Slot(<span class="params"><span class="built_in">int</span></span>)</span></span><br><span class="line"><span class="meta">    @Slot(<span class="params"><span class="built_in">str</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">say_something</span>(<span class="params">self,arg</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(arg,<span class="built_in">int</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;This is a number: &quot;</span>,arg)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(arg,<span class="built_in">str</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;This is a String: &quot;</span>,arg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app=QApplication(sys.argv)</span><br><span class="line">    someone=Communicate()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发送带有不同参数的&#x27;speak&#x27;信号</span></span><br><span class="line">    <span class="comment"># 当然，如果想要发射`str`类型的信号，必须指定，否则是以默认`int`类型进行的</span></span><br><span class="line">    someone.speak.emit(<span class="number">10</span>)</span><br><span class="line">    someone.speak[<span class="built_in">str</span>].emit(<span class="string">&quot;Hello everybody&quot;</span>)</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">信号与槽</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QChart</title>
    <link href="http://example.com/2022/12/23/%E3%80%90QT%E3%80%91QCharts/"/>
    <id>http://example.com/2022/12/23/%E3%80%90QT%E3%80%91QCharts/</id>
    <published>2022-12-23T14:23:09.884Z</published>
    <updated>2022-12-24T13:08:49.794Z</updated>
    
    <content type="html"><![CDATA[<p>1、QChart的设置</p><p>QChart是组合图表各部分、显示各种数据序列的绘图组件。QChart接口函数众多，其主要接口函数分类整理后见下表。对于一个属性，通常有一个设置函数和一个对应的读取函数，如setTitle()用于设置图表标题，对应的读取图表标题的函数为title()。</p><table><thead><tr><th>分组</th><th>函数名</th><th>功能描述</th></tr></thead><tbody><tr><td>图表外观</td><td>void setTitle()void setTitIeFont()void setTitleBrush()void setTheme()void setMargins()QLegend * legend()void setAnimationOptions()</td><td>设置图表标题.显示在图表上方，支持HTML格式设置图表标题字体设置图表标题画刷设置主题,主题是内置的UI设置,定义了图表的配色设置绘图区与图表边界的4个边距返回图表的图例设置序列或坐标轴的动画效果</td></tr><tr><td>数据序列</td><td>void addSeries()QList&lt; QAbstractSeries &gt; series()void removeSeries()void removeAIISeries()</td><td>添加序列返回图表拥有的序列的列表移除-个序列，但并不删除序列对象移除并删除图表的所有序列</td></tr><tr><td>坐标轴</td><td>void addAxis()QList axes() void setAxisX() void setAxisY() void removeAxis() void createDefaultAxes()</td><td>为图表的某个方向添加坐标轴 返回某个方向的坐标轴列表 设置某个序列的水平方向的坐标轴 设罝某个序列的垂直方向的坐标轴 移除一个坐标轴 根据己添加的序列的类型，创建缺省的坐标轴，前面已有的坐标轴会被删除</td></tr></tbody></table><p>图表的设置和曲线的设置如下图</p><p><img src="https://img-blog.csdnimg.cn/20210507110643793.png" alt="img"></p><p>setAnimationOptions(AnimationOptions options)函数设置图表的动画效果，输入参数是QChart::AnimationOptions枚举类型，有以下几种取值</p><p>QChart::NoAnimation---- 无动画效果</p><p>QChart::GridAxisAnimations---- 背景网格有动画效果：</p><p>QChart::SeriesAnimations---- 序列有动画效果：</p><p>QChart::AllAnimations—-—都有动画效果</p><p>主题是预定义的图表配色样式，是QChart::ChartTheme枚举类型，有多种取值，使图表具有 不同的配色效果</p><p>图例是一个QLegend类的对象，通过QChart::legend()可以获得图表的图例.图例是根据添加的序列自动生成的，但是可以修改图例的一些属性，如在图表中的显示位置、图例文字的字体等。例如，设置图例显示在图表的底部可用下面的语句：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ui.chartView-&gt;<span class="built_in">chart</span>()-&gt;<span class="built_in">legend</span>()-&gt;<span class="built_in">setAlignment</span>(Qt::AlignBottom);</span><br></pre></td></tr></table></figure><p>设置图例文字的字体的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_btnLegendFont_clicked</span><span class="params">()</span></span>&#123;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//图例的字体设置    </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    QFont font=ui-&gt;chartView-&gt;<span class="built_in">chart</span>()-&gt;<span class="built_in">legend</span>()-&gt;<span class="built_in">font</span>();    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> ok=<span class="literal">false</span>;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    font=QFontDialog::<span class="built_in">getFont</span>(&amp;ok,font);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ok)        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ui.chartView-&gt;<span class="built_in">chart</span>()-&gt;<span class="built_in">legend</span>()-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、 QLineSeries 序列的设置</p><p>QLineSeries的主要函数见下表</p><table><thead><tr><th>分组</th><th>函数</th><th>功能描述</th></tr></thead><tbody><tr><td>序列名称</td><td>void setName()</td><td>void setName()</td></tr><tr><td>图表</td><td>QChart* chart()</td><td>返回序列所属的图表对象</td></tr><tr><td>序列外观</td><td>void setVisibte()void show()void hide()void setColor()void setPen()void setBrush()void setOpacity()</td><td>设置序列可见性显示序列，使序列可见隐藏序列，使序列不可见设置序列线条的颜色设置绘制线条的颜色设置绘制数据点的画刷设置序列的透明度，0表示完全透明，1表示不透明</td></tr><tr><td>数据点</td><td>void setPointsVisible()void append()void insert()void replace()void clear()void remove()void removePoints()int count()QPointF&amp; at()QList<QPointF> points()QVetor<QPointF> pointsVector()</QPointF></QPointF></td><td>设置数据点的可见性添加一个数据点到序列在某个位置插入一个数据点替换某个数据点清除所有数据点删除某个数据点从某个位置开始，删除指定个数的数据点数据点的个数返回某个位置上的数据点返回数据点的列表返回数据点的列表，效率更高</td></tr><tr><td>数据点标签</td><td>void setPointLabeIsVisible()void setPointLabelsColor()void setPointLabelsFont()void setPointLabelsFormat()void setPointLabelsClipping()</td><td>设置数据点标签的可见性设置数据点标签的文字颜色设置数据点标签字体设置数据点标签格式设置标签的裁剪属性，缺省为True,即绘图区外的标签被裁剪掉</td></tr><tr><td>坐标轴</td><td>bool attachAxis()bool detachAxis()Qlist attachedAxes()</td><td>为序列附加-个坐标轴，通常需要一个X轴和一个Y轴解除一个附加的坐标轴返回附加的坐标轴的列表</td></tr></tbody></table><p>数据点标签的格式设置使用函数setPointLabelsFormat(),有两种数据可以在数据点标签中显示，有固定的标签：</p><p>@xPoint 数据点的X值；</p><p>@yPoint 数据点的Y值。</p><p>例如，使数据点标签只显示Y值，设置语句为：</p><p>curSeries-&gt;setPointLabelsFormat (‘’@yPoint&quot;);</p><p>如果使数据点标签显示(X,Y)值，设置语句为：</p><p>curSeries-&gt;setPointLabelsFormat(“(@xPoint,@yPoint)”);</p><p>为一个序列添加数据点，可以使用append()函数，也可以使用流操作符“&lt;</p><p>*series0&lt;</p><p>为序列指定坐标轴</p><p>chart-&gt;setAxisX(axisX, series0);//添加X坐标轴</p><p>chart-&gt;setAxisX(axisX, ;series1);//添加X坐标轴</p><p>chart-&gt;setAxisY(axisY, series0);//添加Y坐标轴</p><p>chart-&gt;setAxisY(axisY, series1);//添加Y坐标轴</p><p>QChart:: setAxisX()函数为序列指定X坐标轴，并将坐标轴添加到图表里；QChart::setAxisY() 函数为序列指定Y坐标轴，并将坐标轴添加到图表里。无需再调用序列的attachAxist)函数。若要 使用序列的attachAxis()函数，则实现上述功能的代码如下：</p><p>chart-&gt;addAxis(axisX,Qt::AlignBottom); //坐标轴添加到图表表，并指定方向</p><p>chart-&gt;addAxis(axisY,Qt::AlignLeft);</p><p>series0-&gt;attachAxis (axisX) ;//序列 series0 附加坐标轴</p><p>series0-&gt;attachAxis(axisY);</p><p>seriesl-&gt;attachAxis (axisX);//序列 seriesl 附加坐标轴</p><p>seriesl-&gt;attachAxis(axisY);</p><p>即先用QChart::addAxis()函数添加一个坐标轴到图表，并指定坐标轴的方向，然后用序列的 attachAxis()函数附加坐标轴对象。</p><p>3、QValueAxis坐标轴的设置</p><p>用QValueAxis类的坐标轴，这是数值型坐标轴，与QLineSeries正好配合使用</p><p>QValueAxis类的 主要函数见下表</p><table><thead><tr><th>分组</th><th>函数</th><th>功能描述</th></tr></thead><tbody><tr><td>坐标轴整体</td><td>void setVisible()Qt::Orientation orientation()void setMin()void setMax()void setRange()</td><td>设置坐标轴可见性返回坐标轴方向设置坐标轴最小值设置坐标轴最大值设置坐标轴最小最大值表示的范围</td></tr><tr><td>void setLabelFormat()  void setLabelsAngle()void setLabelsBrush()void setLabelsColor()  void setLabe!sFont()void setLabelsVisible()</td><td>void setLabelFormat()  void setLabelsAngle()void setLabelsBrush()void setLabelsColor()  void setLabe!sFont()void setLabelsVisible()</td><td>设置标签格式，例如可以设置显示的小数点位数设置标签的角度，单位为度设置标签的画刷设置标签文字颜色设置标签文字字体设置轴标签文字是否可见</td></tr><tr><td>轴线和刻度线</td><td>void setTickCount()void setLineVisible()void setLinePen()void setLinePenColor()</td><td>设置坐标轴主刻度的个数设置轴线和刻度线的可见性、设置轴线和刻度线的凼笔设置轴线和刻度线的颜色</td></tr><tr><td>主网格线</td><td>void setGridUneColor()  void setGridLinePen()  void setGridLineVisible()</td><td>设置网格线的颜色设置网格线的画笔设置网格线的可见性</td></tr><tr><td>次刻度线和次网格线</td><td>void setMinorTickCount()void setMinorGridLineColor()void setMinorGridLinePen()void setMinorGridLineVisible()</td><td>设置两个主刻度之间的次刻度的个数设置次网格线的颜色设置次网格线的画笔设置次网格线的可见性</td></tr></tbody></table><p>QValueAxis坐标轴有以下几个组成部分。</p><p>•坐标轴标题：是在坐标轴下方显示的文字，表示坐标轴的名称，图中X轴坐标轴的标题是 “time(secs)”。坐标轴标题除了可以设置文字内容，还可以设置字体、画刷和可见性。</p><p>•轴线和刻度线：轴线是图中从左到右的表示坐标轴的直线，刻度线是垂直于轴线的短线， 包括主刻度线和次刻度线，主刻度个数是tickCount(),每两个主刻度之间的次刻度的个数是 minorTickCount()。</p><p>•轴标签：在主刻度处显示的数值标签文字，可以控制其数值格式、文字颜色和字体等。</p><p>•主网格线：在绘图区与主刻度对应的网格线，可以设置其颜色、线条的pen属性、可见 性等。</p><p>•次网格线：在绘图区与次刻度对应的网格线，可以设置其颜色、线条的pen属性、可见 性等。</p><p>搞清楚坐标轴的这些组成部分后，对其进行属性读取或设置就只需调用相应的函数即可。</p><p><img src="https://img-blog.csdnimg.cn/20210507111520668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3NTI5OTEz,size_16,color_FFFFFF,t_70" alt="img"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">QSizePolicy</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
  <entry>
    <title>【QT】QSizePolicy</title>
    <link href="http://example.com/2022/12/23/%E3%80%90QT%E3%80%91QSizePolicy/"/>
    <id>http://example.com/2022/12/23/%E3%80%90QT%E3%80%91QSizePolicy/</id>
    <published>2022-12-23T13:50:17.668Z</published>
    <updated>2022-12-23T13:52:43.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、描述">一、描述</h2><p>QSizePolicy 类是布局属性，描述了水平和垂直大小调整策略。</p><p>QWidget 的大小策略是其调整大小意愿的表达，并影响布局引擎如何处理小部件。每个小部件都返回一个 QSizePolicy，描述其布局时首选的水平和垂直大小调整策略。</p><p>QSizePolicy包含两个独立的QSizePolicy::Policy值和两个拉伸因子；一个描述小部件的水平尺寸策略，另一个描述小部件的垂直尺寸策略。它还包含一个标志，用于指示其首选大小的高度和宽度是否相关。</p><hr><h2 id="二、类型成员">二、类型成员</h2><p>1、QSizePolicy::ControlType：设置与应用大小策略的小部件关联的控件类型，一些样式（特别是QMacStyle）使用它在小部件之间插入适当的间距。</p><p><strong>QSizePolicy</strong>::DefaultType：默认类型，没有指定时。<br><strong>QSizePolicy</strong>::ButtonBox：QDialogButtonBox 实例。<br><strong>QSizePolicy</strong>::CheckBox：QCheckBox 实例。<br><strong>QSizePolicy</strong>::ComboBox：QComboBox 实例。<br><strong>QSizePolicy</strong>::Frame：QFrame 实例。<br><strong>QSizePolicy</strong>::GroupBox：QGroupBox 实例。<br><strong>QSizePolicy</strong>::Label：QLabel 实例。<br><strong>QSizePolicy</strong>::Line：具有 QFrame::HLine 或 QFrame::VLine 的 QFrame 实例。<br><strong>QSizePolicy</strong>::LineEdit：QLineEdit 实例。<br><strong>QSizePolicy</strong>::PushButton：QPushButton 实例。<br><strong>QSizePolicy</strong>::RadioButton：QRadioButton 实例。<br><strong>QSizePolicy</strong>::Slider：QAbstractSlider 实例。<br>QSizePolicy::SpinBox：QAbstractSpinBox 实例。<br><strong>QSizePolicy</strong>::TabWidget：QTabWidget 实例。<br><strong>QSizePolicy</strong>::ToolButton：QToolButton 实例。<br>2、<strong>QSizePolicy::Policy</strong>。策略。描述了构造QSizePolicy时使用的各种尺寸调整类型。</p><p><strong>Fixed</strong>：size固定为QWidget::sizeHint()。<br><strong>Minimum</strong>：size不能小于 sizeHint() 提供的大小。<br><strong>Maximum</strong>：size不能大于 sizeHint() 提供的大小。<br><strong>Preferred</strong>：最佳size为 sizeHint()。<br><strong>Expanding</strong>：sizeHint()为推荐的size，但尽可能地获得更大的空间。<br><strong>MinimumExpanding</strong>：sizeHint()是最小的size，但尽可能地获得更大的空间。<br><strong>Ignored</strong>：sizeHint()被忽略。小部件将获得尽可能多的空间。<br>3、<strong>QSizePolicy::PolicyFlag</strong>。策略标志，这些标志组成了策略值。</p><p><strong>GrowFlag</strong>：如果需要，小部件可以扩展到超出其sizeHint()。<br><strong>ExpandFlag</strong>：小部件应该获得尽可能多的空间。<br><strong>ShrinkFlag</strong>：如果有必要，小部件可以缩小到其sizeHint()以下。<br><strong>IgnoreFlag</strong>：小部件的sizeHint()被忽略。小部件将获得尽可能多的空间。</p><hr><h2 id="三、成员函数">三、成员函数</h2><p>1、<strong>Qt::Orientations expandingDirections()</strong></p><p>返回值表示是否可以使用比QWidget::sizeHint()指示的更多的空间。</p><p>返回Qt::Horizontal或Qt::Vertical值表示小部件可以水平或垂直拓展。<br>返回Qt::Horizontal | Qt::Vertical表示它可以在两个维度上增长。</p><p>2、<strong>bool hasHeightForWidth()</strong></p><p>小部件的首选高度是否取决于其宽度。</p><p>3、bool hasWidthForHeight()</p><p>小部件的宽度是否取决于其高度。</p><p>4、<strong>QSizePolicy::Policy horizontalPolicy() / verticalPolicy()</strong></p><p>返回水平/垂直策略。</p><p>5、<strong>int horizontalStretch() / verticalStretch()</strong></p><p>返回大小策略的水平/垂直拉伸因子。</p><p>6、<strong>bool retainSizeWhenHidden()</strong></p><p>返回小部件隐藏时布局是否应保留其大小。默认为false。</p><pre><code>  void setRetainSizeWhenHidden(bool retainSize)</code></pre><p>设置布局在隐藏时是否应保留小部件的大小。</p><p>7、<strong>void setControlType(QSizePolicy::ControlType type)</strong></p><p>设置应用小部件的控件类型。</p><p>8、void setHeightForWidth(bool dependent) / setWidthForHeight(bool dependent)</p><p>设置小部件的首选高度/宽度是否取决于其宽度/高度。</p><p>9、<strong>void setHorizontalPolicy / setVerticalPolicy(QSizePolicy::Policy policy)</strong></p><p>设置水平/垂直方向策略。</p><p>10、<strong>void setHorizontalStretch / setVerticalStretch(int stretchFactor)</strong></p><p>设置大小策略的水平拉伸因子。必须在[0~255]范围内。</p><p>比如当两个窗口小部件在水平布局中彼此相邻时，将左侧窗口小部件的水平拉伸系数设置为2，将右侧窗口小部件的系数设置为1，将确保左侧窗口小部件的大小始终是右侧窗口小部件的两倍。</p><p>11、<strong>void transpose()</strong></p><p>交换水平/垂直大小策略。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QSizePolicy transposed()</span><br></pre></td></tr></table></figure><p>返回交换了水平和垂直策略和拉伸的大小策略的对象。</p><p>12、<strong>QVariant operator QVariant()</strong></p><p>返回存储此QSizePolicy的QVariant。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QSizePolicy sp = this-&gt;sizePolicy();</span><br><span class="line">qDebug()&lt;&lt;static_cast&lt;QVariant&gt;(sp);</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">QSizePolicy</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
  <entry>
    <title>【QT】Chapter 2. PySide项目02——数据可视化</title>
    <link href="http://example.com/2022/12/23/%E3%80%90QT%E3%80%91PySide%E9%A1%B9%E7%9B%AE02_%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%98%E7%BA%BF%E5%9B%BE/"/>
    <id>http://example.com/2022/12/23/%E3%80%90QT%E3%80%91PySide%E9%A1%B9%E7%9B%AE02_%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%98%E7%BA%BF%E5%9B%BE/</id>
    <published>2022-12-23T10:31:46.667Z</published>
    <updated>2022-12-23T14:51:43.586Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、项目介绍">一、项目介绍</h2><p>本项目将通过PySide6构建一个可以显示数据折线图的可视化程序，其中，数据来源时美国地质调查局(US Geological Survey)上公开的一小时地震震级数据。</p><p>可以通过<a href="https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.csv">链接</a>进行下载。</p><hr><h2 id="二、实现步骤">二、实现步骤</h2><p>本项目的实现步骤可以概括为：</p><ul><li>读取数据</li><li>数据处理</li><li>创建主窗口</li><li>添加控件</li><li>绘制图形并显示、</li></ul><p>预期结果如下图所示：</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E9%A1%B9%E7%9B%AE02_%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%98%E7%BA%BF%E5%9B%BE/image-20221223202408064.png" alt="image-20221223202408064" style="zoom:50%;"><hr><h2 id="三、实现">三、实现</h2><p>1️⃣ <strong>读取数据</strong></p><p>这里我们借助<code>Pandas</code>对CSV文件进行读取。<code>argparse</code>模块主要用于参数控制，具体可见<a href="https://torture.blog.csdn.net/article/details/123795540">这篇文章</a>。</p><p>创建一个新文档<code>main.py</code>，接下来都是一些简单的操作，就不做赘述了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_data</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">return</span> pd.read_csv(file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    options=argparse.ArgumentParser()</span><br><span class="line">    options.add_argument(<span class="string">&quot;-f&quot;</span>,<span class="string">&quot;--file&quot;</span>,<span class="built_in">type</span>=<span class="built_in">str</span>,required=<span class="literal">True</span>)</span><br><span class="line">    args=options.parse_args()</span><br><span class="line">    data=read_data(args.file)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><p>我们可以通过终端输入<code>python main.py -f &quot;YourPath&quot;</code>来查看数据读取情况。</p><hr><p>2️⃣ <strong>数据清洗</strong></p><p>我们在这部，需要将数据中的日期转换为Qt类型，并且确保数据的完整性、准确性。</p><p>值得注意的是，数据中的日期是UTC标准(如: 2018-12-11T21:14:44,682Z)，我们可以比较容易地转换为QDateTime类型。</p><p>这个QtDateTime位于QtCore模块，从QtCore中将其导入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QDateTime,QTimeZone</span><br></pre></td></tr></table></figure><p>接着，通过<code>QtDateTime().fromString( time , format )</code>进行转换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">transform_date</span>(<span class="params">utc,timezone=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="comment"># 日期转换</span></span><br><span class="line">    utc_fmt=<span class="string">&quot;yyyy-MM-ddTHH:mm:ss.zzzZ&quot;</span></span><br><span class="line">    new_date=QDateTime().fromString(utc,utc_fmt)</span><br><span class="line">    <span class="keyword">if</span> timezone:</span><br><span class="line">        new_date.setTimeZone(timezone)</span><br><span class="line">    <span class="keyword">return</span> new_date</span><br></pre></td></tr></table></figure><p>我们对读取数据方法进行一定的修改，首先是移除错误的震级数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data=pd.read_csv(file)</span><br><span class="line">data=data.drop(data[data[<span class="string">&#x27;mag&#x27;</span>]&lt;<span class="number">0</span>].index)</span><br><span class="line">magnitudes=data[<span class="string">&#x27;mag&#x27;</span>]</span><br></pre></td></tr></table></figure><p>然后，设置本地的时区：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 时区设置</span></span><br><span class="line">timezone = QTimeZone(QTimeZone.systemTimeZone()) <span class="comment"># &quot;Asia/Shanghai&quot;</span></span><br><span class="line"><span class="comment"># 时间转换</span></span><br><span class="line">times=data[<span class="string">&#x27;time&#x27;</span>].apply(<span class="keyword">lambda</span> x:transform_date(x,timezone))</span><br><span class="line"><span class="keyword">return</span> times,magnitudes</span><br></pre></td></tr></table></figure><p>虽然不该在这篇文档中提，但还是提一嘴：</p><p>Pandas快速对某一类操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Series.apply(<span class="keyword">lambda</span> x:func(x)) <span class="comment"># apply(func)但是如果要输入参数，可以这样写: .apply(lambda x:func(x))</span></span><br></pre></td></tr></table></figure><p>好了，此时我们的<code>read_data</code>方法应该长这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">read_data</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">    data=pd.read_csv(file)</span><br><span class="line">    <span class="comment"># 处理震级</span></span><br><span class="line">    data=data.drop(data[data[<span class="string">&#x27;mag&#x27;</span>]&lt;<span class="number">0</span>].index)</span><br><span class="line">    magnitudes=data[<span class="string">&#x27;mag&#x27;</span>]</span><br><span class="line">    <span class="comment"># 时区设置</span></span><br><span class="line">    timezone = QTimeZone(QTimeZone.systemTimeZone()) <span class="comment"># &quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="comment"># 时间转换</span></span><br><span class="line">    times=data[<span class="string">&#x27;time&#x27;</span>].apply(<span class="keyword">lambda</span> x:transform_date(x,timezone))</span><br><span class="line">    <span class="keyword">return</span> times,magnitudes</span><br></pre></td></tr></table></figure><hr><p>3️⃣ <strong>创建主窗体</strong></p><p>好啦，终于要进入我们的核心啦，这一步我们将创建一个PySide主窗口。</p><p>下图是QMainWindow的布局。</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E9%A1%B9%E7%9B%AE02_%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%98%E7%BA%BF%E5%9B%BE/image-20221223210213019.png" alt="image-20221223210213019" style="zoom:50%;"><p>在本项目中，我们需要一个“文件”菜单，用来打开文件对话框，和一个“退出”菜单。应用程序启动时，应该要自动加载状态栏。</p><p>我们新建一个文件，叫做<code>MainWindow.py</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> Slot</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QAction,QKeySequence</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(<span class="title class_ inherited__">QMainWindow</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__()</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>让我们的窗体控件继承自QMainWindow。</p><p>然后是菜单栏的设置，直接选择获取<code>self.menuBar()</code>即可，通过<code>addMenu(Str)</code>的方式，可以添加选项。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置菜单栏</span></span><br><span class="line">self.menu=self.menuBar()</span><br><span class="line"><span class="comment"># 添加 文件 菜单项</span></span><br><span class="line">self.file_menu=self.menu.addMenu(<span class="string">&quot;文件&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后我们为菜单栏添加一个退出事件。这个事件可以通过<code>QAction</code>来直接绑定。<code>QAction(&quot;Exit&quot;,self)</code>表示退出本窗体。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 退出事件</span></span><br><span class="line">exit_action=QAction(<span class="string">&quot;Exit&quot;</span>,self) <span class="comment"># 设置名字</span></span><br><span class="line">exit_action.setShortcut(QKeySequence.Quit) <span class="comment"># 设置快捷键</span></span><br><span class="line">exit_action.triggered.connect(self.close) <span class="comment"># 该事件直接与close函数关联</span></span><br><span class="line"></span><br><span class="line">self.file_menu.addAction(exit_action)</span><br></pre></td></tr></table></figure><p>再添加状态栏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 状态栏</span></span><br><span class="line">self.status=self.statusBar()</span><br><span class="line">self.status.showMessage(<span class="string">&quot;Data loaded and plotted&quot;</span>)</span><br></pre></td></tr></table></figure><p>以及设置窗口尺寸，直接通过<code>self.screen().availableGeometry()</code>方法获取当前可用的窗口大小，我们将主窗体的大小设置为可用窗口大小的(0.8,0.7)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 窗口尺寸</span></span><br><span class="line">geometry=self.screen().availableGeometry()</span><br><span class="line">self.setFixedSize(geometry.width()*<span class="number">0.8</span>,geometry.height()*<span class="number">0.7</span>)</span><br></pre></td></tr></table></figure><hr><p>4️⃣ <strong>添加控件</strong></p><p>现在，我们需要添加一个表视图，用来显示数据。</p><p>我们可以建一个QTableView对象，并将其放置在QHBoxLayout中，并将其作为小部件传递给我们的主窗体。</p><p>值得注意的是，QTableView需要一个模型来显示信息。在这种情况下，可以使用QAbstractTableModel实例。</p><p>要子类化QAbstractTable，必须重新实现它的抽象方法rowCount()、columnCount()和data()。通过这种方式，可以确保正确地处理数据。此外，重新实现headerData()方法以向视图提供头部信息。</p><p>我们再新建一个文件，就叫做<code>TableModel.py</code>好了。</p><p>这里我们实现了三个抽象方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> Qt,QAbstractTableModel,QModelIndex</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QColor</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomTableModel</span>(<span class="title class_ inherited__">QAbstractTableModel</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,data=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(CustomTableModel, self).__init__()</span><br><span class="line">        self.load_data(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_data</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="comment"># 获取UTC日期</span></span><br><span class="line">        self.input_dates=data[<span class="number">0</span>].values</span><br><span class="line">        <span class="comment"># 获取震级</span></span><br><span class="line">        self.input_magnitudes=data[<span class="number">1</span>].values</span><br><span class="line"></span><br><span class="line">        self.column_count=<span class="number">2</span></span><br><span class="line">        self.row_count=<span class="built_in">len</span>(self.input_dates)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">rowCount</span>(<span class="params">self, parent=QModelIndex(<span class="params"></span>)</span>):</span><br><span class="line">        <span class="comment"># parent需要获取Qt模型索引</span></span><br><span class="line">        <span class="keyword">return</span> self.row_count</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">columnCount</span>(<span class="params">self, parent=QModelIndex(<span class="params"></span>)</span>):</span><br><span class="line">        <span class="comment"># parent需要获取Qt模型索引</span></span><br><span class="line">        <span class="keyword">return</span> self.column_count</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">headerData</span>(<span class="params">self,section,orientation,role</span>):</span><br><span class="line">        <span class="comment"># 头文件信息</span></span><br><span class="line">        <span class="keyword">if</span> role!=Qt.DisplayRole:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> orientation==Qt.Horizontal:</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">&quot;Date&quot;</span>,<span class="string">&quot;Magnitude&quot;</span>)[section]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;section&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">self,index,role=Qt.DisplayRole</span>):</span><br><span class="line">        <span class="comment"># 需要实现的抽象方法</span></span><br><span class="line">        <span class="comment"># index是索引位置，role是当前状态</span></span><br><span class="line">        </span><br><span class="line">        column=index.column() </span><br><span class="line">        row=index.row()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> role==Qt.DisplayRole:</span><br><span class="line">            <span class="comment"># 如果当前在显示</span></span><br><span class="line">            <span class="keyword">if</span> column==<span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 表示当前的位置为： row,0 理应返回date数据</span></span><br><span class="line">                <span class="comment"># 返回str格式的数据，除了时区 </span></span><br><span class="line">                date=self.input_dates[row].toPython()</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">str</span>(date)[:-<span class="number">3</span>]</span><br><span class="line">            <span class="keyword">elif</span> column==<span class="number">1</span>:</span><br><span class="line">                <span class="comment"># 返回震级数据</span></span><br><span class="line">                magnitude=self.input_magnitudes[row]</span><br><span class="line">                <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;magnitude:<span class="number">.2</span>f&#125;</span>&quot;</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> role==Qt.BackgroundRole:</span><br><span class="line">            <span class="comment"># 在背后的话就返回一个颜色</span></span><br><span class="line">            <span class="keyword">return</span> QColor(Qt.white)</span><br><span class="line">        <span class="keyword">elif</span> role==Qt.TextAlignmentRole:</span><br><span class="line">            <span class="keyword">return</span> Qt.AlignRight</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>接着就可以再构建我们自己的小控件啦，新建一个文件，叫做<code>TableWidge</code>，将我们的模型导入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> (QHBoxLayout,QHeaderView,QSizePolicy,QTableView,QWidget)</span><br><span class="line"><span class="keyword">from</span> Q003_TableModel <span class="keyword">import</span> CustomTableModel <span class="comment"># 我这里是写作Q003，去掉就行，换成上一个文件的名字</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="built_in">super</span>(Widget, self).__init__()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取TableModel</span></span><br><span class="line">        self.model=CustomTableModel(data) <span class="comment"># 基于TableModel的数据读取</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 创建表视图</span></span><br><span class="line">        self.table_view=QTableView()</span><br><span class="line">        self.table_view.setModel(self.model) <span class="comment"># 设置模型</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置表视图的标头</span></span><br><span class="line">        self.horizontal_header=self.table_view.horizontalHeader()</span><br><span class="line">        self.vertical_header=self.table_view.verticalHeader()</span><br><span class="line">        self.horizontal_header.setSectionResizeMode(</span><br><span class="line">            QHeaderView.ResizeToContents</span><br><span class="line">        )<span class="comment"># 依据内容自动设置尺寸</span></span><br><span class="line">        self.vertical_header.setSectionResizeMode(</span><br><span class="line">            QHeaderView.ResizeToContents</span><br><span class="line">        )</span><br><span class="line">        self.horizontal_header.setStretchLastSection(<span class="literal">True</span>) <span class="comment"># 拉伸部件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置布局</span></span><br><span class="line">        self.main_layout=QHBoxLayout()</span><br><span class="line">        size=QSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred) <span class="comment"># 默认sizeHint()为最优尺寸的策略</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 水平布局</span></span><br><span class="line">        size.setHorizontalStretch(<span class="number">1</span>) <span class="comment"># 设置水平拉伸因子为1</span></span><br><span class="line">        self.table_view.setSizePolicy(size) <span class="comment"># 对组件应用尺寸策略</span></span><br><span class="line">        self.main_layout.addWidget(self.table_view) <span class="comment"># mainlayout是一个水平布局盒子，将我们的组件加进来</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将布局设置到QWidget中</span></span><br><span class="line">        self.setLayout(self.main_layout) <span class="comment"># 最后，将我们的水平盒子设为小组件的布局</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>QSizePolicy 类是布局属性，描述了水平和垂直大小调整策略，部分参数如下：</p><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Fixed</td><td style="text-align:center">size固定为Qwidget.sizeHint()</td></tr><tr><td style="text-align:center">Minimum</td><td style="text-align:center">size不能小于sizeHint()的大小</td></tr><tr><td style="text-align:center">Maximum</td><td style="text-align:center">size不能大于sizeHint()的大小</td></tr><tr><td style="text-align:center">Preferred</td><td style="text-align:center">最佳size为sizeHint()</td></tr><tr><td style="text-align:center">Expanding</td><td style="text-align:center">sizeHint是推荐的size,但尽可能地获取更大的空间</td></tr><tr><td style="text-align:center">Ignored</td><td style="text-align:center">sizeHint()被忽略，小部件将尽可能获取空间</td></tr></tbody></table><p>这里我们用到了<code>void setHorizontalStretch\setVerticalStretch (int stretchFactor)</code>方法，这个方法是用来设置大小策略的水平/垂直拉伸因子的，范围必须在[0,255]。举个栗子，当有两个部件水平相邻时，左边的部件拉伸系数为2，右边的拉深系数为1，那么将确保左边窗口的大小始终是右边的两倍。</p><p>好了，现在我们有一个TableView组件啦，将其加入主窗口。在<code>MainWindow.py</code>文件中添加如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(<span class="title class_ inherited__">QMainWindow</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,widget</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__()</span><br><span class="line">        self.setCentralWidget(widget)</span><br></pre></td></tr></table></figure><p>在<code>main.py</code>中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> resource.OtherSupportPyFile.Q003_DataProcess <span class="keyword">import</span> MainWindow</span><br><span class="line"><span class="comment"># 注意写成自己的路径和文件名</span></span><br><span class="line"><span class="keyword">from</span> resource.OtherSupportPyFile.Q003_Table <span class="keyword">import</span> Widget</span><br><span class="line"><span class="comment"># 注意写成自己的路径和文件名</span></span><br><span class="line"><span class="keyword">import</span> sys </span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QApplication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    options=argparse.ArgumentParser()</span><br><span class="line">    options.add_argument(<span class="string">&quot;-f&quot;</span>,<span class="string">&quot;--file&quot;</span>,<span class="built_in">type</span>=<span class="built_in">str</span>,required=<span class="literal">True</span>)</span><br><span class="line">    args=options.parse_args()</span><br><span class="line">    data=read_data(args.file)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建应用程序</span></span><br><span class="line">    app=QApplication()</span><br><span class="line">    widget=Widget(data)</span><br><span class="line">    window=MainWindow(widget)</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p>好了，最后的结果如下所示：</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E9%A1%B9%E7%9B%AE02_%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%98%E7%BA%BF%E5%9B%BE/image-20221223221445259.png" alt="image-20221223221445259" style="zoom:50%;"><hr><p>5️⃣ <strong>添加并绘制图</strong></p><p>有了表后，就要添加图了！我们在之前的<code>TableWidge.py</code>上修改，基于<code>Pyside6.QCharts</code>绘制图形。</p><p>首先是导入模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> (QHBoxLayout,QHeaderView,QSizePolicy,QTableView,QWidget)</span><br><span class="line"><span class="keyword">from</span> .Q003_TableModel <span class="keyword">import</span> CustomTableModel</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCharts <span class="keyword">import</span> QChart,QChartView,QLineSeries,QDateTimeAxis,QValueAxis</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QPainter</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QDateTime,Qt</span><br></pre></td></tr></table></figure><p>添加创建图的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建QChart对象</span></span><br><span class="line">self.chat=QChart()</span><br><span class="line">self.chat.setAnimationOptions(QChart.AllAnimations) <span class="comment"># 设置移动动画</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表视图</span></span><br><span class="line">self.chat_view=QChartView(self.chat)</span><br><span class="line">self.chat_view.setRenderHint(QPainter.Antialiasing) <span class="comment"># 抗锯齿</span></span><br></pre></td></tr></table></figure><p>将图设置为右边，且大小是表的四倍</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 右布局</span></span><br><span class="line">size.setHorizontalStretch(<span class="number">4</span>)</span><br><span class="line">self.chat_view.setSizePolicy(size)</span><br><span class="line">self.main_layout.addWidget(self.chat_view)</span><br></pre></td></tr></table></figure><p>我们创建一个添加序列的方法，用来为Chart读取数据~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_series</span>(<span class="params">self,name</span>):</span><br><span class="line">    <span class="comment"># 创建线序列QLineSeries</span></span><br><span class="line">    self.series=QLineSeries()</span><br><span class="line">    self.series.setName(name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 填充QLineSeries</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.model.row_count):</span><br><span class="line"></span><br><span class="line">        t=self.model.index(i,<span class="number">0</span>).data()</span><br><span class="line">        data_fmt=<span class="string">&quot;yyyy-MM-dd HH:mm:ss.zzz&quot;</span></span><br><span class="line">        x=QDateTime().fromString(t,data_fmt).toSecsSinceEpoch() <span class="comment"># 转化为时间戳</span></span><br><span class="line">        y=<span class="built_in">float</span>(self.model.index(i,<span class="number">1</span>).data())</span><br><span class="line">        <span class="keyword">if</span> x&gt;<span class="number">0</span> <span class="keyword">and</span> y&gt;<span class="number">0</span>:</span><br><span class="line">            self.series.append(x,y)</span><br><span class="line"></span><br><span class="line">    self.chat.addSeries(self.series)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置图样式</span></span><br><span class="line">    <span class="comment"># 设置x坐标</span></span><br><span class="line">    self.axis_x=QDateTimeAxis()</span><br><span class="line">    self.axis_x.setTickCount(<span class="number">10</span>) <span class="comment"># 设置间隔</span></span><br><span class="line">    <span class="comment"># self.axis_x.setFormat(&quot;dd.MM (h:mm)&quot;) # 设置时间显示</span></span><br><span class="line">    self.axis_x.setFormat(<span class="string">&quot;MM.dd&quot;</span>) <span class="comment"># 设置时间显示</span></span><br><span class="line">    self.axis_x.setTitleText(<span class="string">&quot;Date&quot;</span>)</span><br><span class="line">    self.chat.addAxis(self.axis_x,Qt.AlignBottom) <span class="comment"># 在表格中加入坐标，位置为底部</span></span><br><span class="line">    self.series.attachAxis(self.axis_x) <span class="comment"># 自动让QLineSeries贴附</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置y坐标</span></span><br><span class="line">    self.axis_y=QValueAxis()</span><br><span class="line">    self.axis_y.setTickCount(<span class="number">10</span>)</span><br><span class="line">    self.axis_y.setLabelFormat(<span class="string">&quot;%.2f&quot;</span>)</span><br><span class="line">    self.axis_y.setTitleText(<span class="string">&quot;Magnitude&quot;</span>)</span><br><span class="line">    self.chat.addAxis(self.axis_y,Qt.AlignLeft)</span><br><span class="line">    self.series.attachAxis(self.axis_y)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从Chart上获取颜色，并在QTableView上使用</span></span><br><span class="line">    color_name=self.series.pen().color().name()</span><br><span class="line">    self.model.color=<span class="string">f&quot;<span class="subst">&#123;color_name&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>将其在初始化方法中绑定：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.add_series(<span class="string">&quot;Magnitude&quot;</span>)</span><br></pre></td></tr></table></figure><p>最终的结果如下！</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E9%A1%B9%E7%9B%AE02_%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%98%E7%BA%BF%E5%9B%BE/image-20221223224746459.png" alt="image-20221223224746459" style="zoom:50%;"><hr><p>完整代码附上：</p><p>1️⃣<strong>Q003_TableModel.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> Qt,QAbstractTableModel,QModelIndex</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QColor</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomTableModel</span>(<span class="title class_ inherited__">QAbstractTableModel</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,data=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(CustomTableModel, self).__init__()</span><br><span class="line">        self.load_data(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_data</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="comment"># 获取UTC日期</span></span><br><span class="line">        self.input_dates=data[<span class="number">0</span>].values</span><br><span class="line">        <span class="comment"># 获取震级</span></span><br><span class="line">        self.input_magnitudes=data[<span class="number">1</span>].values</span><br><span class="line"></span><br><span class="line">        self.column_count=<span class="number">2</span></span><br><span class="line">        self.row_count=<span class="built_in">len</span>(self.input_dates)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">rowCount</span>(<span class="params">self, parent=QModelIndex(<span class="params"></span>)</span>):</span><br><span class="line">        <span class="comment"># parent需要获取Qt模型索引</span></span><br><span class="line">        <span class="keyword">return</span> self.row_count</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">columnCount</span>(<span class="params">self, parent=QModelIndex(<span class="params"></span>)</span>):</span><br><span class="line">        <span class="comment"># parent需要获取Qt模型索引</span></span><br><span class="line">        <span class="keyword">return</span> self.column_count</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">headerData</span>(<span class="params">self,section,orientation,role</span>):</span><br><span class="line">        <span class="comment"># 头文件信息</span></span><br><span class="line">        <span class="keyword">if</span> role!=Qt.DisplayRole:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> orientation==Qt.Horizontal:</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">&quot;Date&quot;</span>,<span class="string">&quot;Magnitude&quot;</span>)[section]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;section&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">self,index,role=Qt.DisplayRole</span>):</span><br><span class="line">        <span class="comment"># 需要实现的抽象方法</span></span><br><span class="line">        <span class="comment"># index是索引位置，role是当前状态</span></span><br><span class="line"></span><br><span class="line">        column=index.column()</span><br><span class="line">        row=index.row()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> role==Qt.DisplayRole:</span><br><span class="line">            <span class="comment"># 如果当前在显示</span></span><br><span class="line">            <span class="keyword">if</span> column==<span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 表示当前的位置为： row,0 理应返回date数据</span></span><br><span class="line">                <span class="comment"># 返回str格式的数据，除了时区</span></span><br><span class="line">                date=self.input_dates[row].toPython()</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">str</span>(date)[:-<span class="number">3</span>]</span><br><span class="line">            <span class="keyword">elif</span> column==<span class="number">1</span>:</span><br><span class="line">                <span class="comment"># 返回震级数据</span></span><br><span class="line">                magnitude=self.input_magnitudes[row]</span><br><span class="line">                <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;magnitude:<span class="number">.2</span>f&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> role==Qt.BackgroundRole:</span><br><span class="line">            <span class="comment"># 在背后的话就返回一个颜色</span></span><br><span class="line">            <span class="keyword">return</span> QColor(Qt.white)</span><br><span class="line">        <span class="keyword">elif</span> role==Qt.TextAlignmentRole:</span><br><span class="line">            <span class="keyword">return</span> Qt.AlignRight</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>2️⃣ <strong>Q003_DataProcess.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QAction,QKeySequence</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(<span class="title class_ inherited__">QMainWindow</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,widget</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__()</span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Earquakes Information&quot;</span>)</span><br><span class="line">        self.setCentralWidget(widget)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置菜单栏</span></span><br><span class="line">        self.menu=self.menuBar()</span><br><span class="line">        <span class="comment"># 添加 文件 菜单项</span></span><br><span class="line">        self.file_menu=self.menu.addMenu(<span class="string">&quot;文件&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 退出事件</span></span><br><span class="line">        exit_action = QAction(<span class="string">&quot;Exit&quot;</span>, self)  <span class="comment"># 设置名字</span></span><br><span class="line">        exit_action.setShortcut(QKeySequence.Quit)  <span class="comment"># 设置快捷键</span></span><br><span class="line">        exit_action.triggered.connect(self.close)  <span class="comment"># 该事件直接与close函数关联</span></span><br><span class="line"></span><br><span class="line">        self.file_menu.addAction(exit_action)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 状态栏</span></span><br><span class="line">        self.status=self.statusBar()</span><br><span class="line">        self.status.showMessage(<span class="string">&quot;Data loaded and plotted&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 窗口尺寸</span></span><br><span class="line">        geometry=self.screen().availableGeometry()</span><br><span class="line">        self.setFixedSize(geometry.width()*<span class="number">0.8</span>,geometry.height()*<span class="number">0.7</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3️⃣ <strong>Q003_Table.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> (QHBoxLayout,QHeaderView,QSizePolicy,QTableView,QWidget)</span><br><span class="line"><span class="keyword">from</span> .Q003_TableModel <span class="keyword">import</span> CustomTableModel</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCharts <span class="keyword">import</span> QChart,QChartView,QLineSeries,QDateTimeAxis,QValueAxis</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QPainter</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QDateTime,Qt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="built_in">super</span>(Widget, self).__init__()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取TableModel</span></span><br><span class="line">        self.model=CustomTableModel(data) <span class="comment"># 基于TableModel的数据读取</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 创建表视图</span></span><br><span class="line">        self.table_view=QTableView()</span><br><span class="line">        self.table_view.setModel(self.model) <span class="comment"># 设置模型</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置表视图的标头</span></span><br><span class="line">        self.horizontal_header=self.table_view.horizontalHeader()</span><br><span class="line">        self.vertical_header=self.table_view.verticalHeader()</span><br><span class="line">        self.horizontal_header.setSectionResizeMode(</span><br><span class="line">            QHeaderView.ResizeToContents</span><br><span class="line">        )<span class="comment"># 依据内容自动设置尺寸</span></span><br><span class="line">        self.vertical_header.setSectionResizeMode(</span><br><span class="line">            QHeaderView.ResizeToContents</span><br><span class="line">        )</span><br><span class="line">        self.horizontal_header.setStretchLastSection(<span class="literal">True</span>) <span class="comment"># 拉伸部件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 创建QChart对象</span></span><br><span class="line">        self.chat=QChart()</span><br><span class="line">        self.chat.setAnimationOptions(QChart.AllAnimations) <span class="comment"># 设置移动动画</span></span><br><span class="line">        self.add_series(<span class="string">&quot;Magnitude&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 创建表视图</span></span><br><span class="line">        self.chat_view=QChartView(self.chat)</span><br><span class="line">        self.chat_view.setRenderHint(QPainter.Antialiasing) <span class="comment"># 抗锯齿</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置布局</span></span><br><span class="line">        self.main_layout=QHBoxLayout()</span><br><span class="line">        size=QSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred) <span class="comment"># 默认sizeHint()为最优尺寸的策略</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 左布局</span></span><br><span class="line">        size.setHorizontalStretch(<span class="number">1</span>) <span class="comment"># 设置水平拉伸因子为1</span></span><br><span class="line">        self.table_view.setSizePolicy(size) <span class="comment"># 对组件应用尺寸策略</span></span><br><span class="line">        self.main_layout.addWidget(self.table_view) <span class="comment"># mainlayout是一个水平布局盒子，将我们的组件加进来</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 右布局</span></span><br><span class="line">        size.setHorizontalStretch(<span class="number">4</span>)</span><br><span class="line">        self.chat_view.setSizePolicy(size)</span><br><span class="line">        self.main_layout.addWidget(self.chat_view)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将布局设置到QWidget中</span></span><br><span class="line">        self.setLayout(self.main_layout) <span class="comment"># 最后，将我们的水平盒子设为小组件的布局</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_series</span>(<span class="params">self,name</span>):</span><br><span class="line">        <span class="comment"># 创建线序列QLineSeries</span></span><br><span class="line">        self.series=QLineSeries()</span><br><span class="line">        self.series.setName(name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 填充QLineSeries</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.model.row_count):</span><br><span class="line"></span><br><span class="line">            t=self.model.index(i,<span class="number">0</span>).data()</span><br><span class="line">            data_fmt=<span class="string">&quot;yyyy-MM-dd HH:mm:ss.zzz&quot;</span></span><br><span class="line">            x=QDateTime().fromString(t,data_fmt).toSecsSinceEpoch() <span class="comment"># 转化为时间戳</span></span><br><span class="line">            y=<span class="built_in">float</span>(self.model.index(i,<span class="number">1</span>).data())</span><br><span class="line">            <span class="keyword">if</span> x&gt;<span class="number">0</span> <span class="keyword">and</span> y&gt;<span class="number">0</span>:</span><br><span class="line">                self.series.append(x,y)</span><br><span class="line"></span><br><span class="line">        self.chat.addSeries(self.series)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置图样式</span></span><br><span class="line">        <span class="comment"># 设置x坐标</span></span><br><span class="line">        self.axis_x=QDateTimeAxis()</span><br><span class="line">        self.axis_x.setTickCount(<span class="number">10</span>) <span class="comment"># 设置间隔</span></span><br><span class="line">        <span class="comment"># self.axis_x.setFormat(&quot;dd.MM (h:mm)&quot;) # 设置时间显示</span></span><br><span class="line">        self.axis_x.setFormat(<span class="string">&quot;MM.dd&quot;</span>) <span class="comment"># 设置时间显示</span></span><br><span class="line">        self.axis_x.setTitleText(<span class="string">&quot;Date&quot;</span>)</span><br><span class="line">        self.chat.addAxis(self.axis_x,Qt.AlignBottom) <span class="comment"># 在表格中加入坐标，位置为底部</span></span><br><span class="line">        self.series.attachAxis(self.axis_x) <span class="comment"># 自动让QLineSeries贴附</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置y坐标</span></span><br><span class="line">        self.axis_y=QValueAxis()</span><br><span class="line">        self.axis_y.setTickCount(<span class="number">10</span>)</span><br><span class="line">        self.axis_y.setLabelFormat(<span class="string">&quot;%.2f&quot;</span>)</span><br><span class="line">        self.axis_y.setTitleText(<span class="string">&quot;Magnitude&quot;</span>)</span><br><span class="line">        self.chat.addAxis(self.axis_y,Qt.AlignLeft)</span><br><span class="line">        self.series.attachAxis(self.axis_y)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 从Chart上获取颜色，并在QTableView上使用</span></span><br><span class="line">        color_name=self.series.pen().color().name()</span><br><span class="line">        self.model.color=<span class="string">f&quot;<span class="subst">&#123;color_name&#125;</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4️⃣ <strong><a href="http://Main.py">Main.py</a></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QDateTime,QTimeZone</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QApplication</span><br><span class="line"><span class="keyword">from</span> resource.OtherSupportPyFile.Q003_DataProcess <span class="keyword">import</span> MainWindow</span><br><span class="line"><span class="keyword">from</span> resource.OtherSupportPyFile.Q003_Table <span class="keyword">import</span> Widget</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">transform_date</span>(<span class="params">utc,timezone=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="comment"># 日期转换</span></span><br><span class="line">    utc_fmt=<span class="string">&quot;yyyy-MM-ddTHH:mm:ss.zzzZ&quot;</span></span><br><span class="line">    new_date=QDateTime().fromString(utc,utc_fmt)</span><br><span class="line">    <span class="keyword">if</span> timezone:</span><br><span class="line">        new_date.setTimeZone(timezone)</span><br><span class="line">    <span class="keyword">return</span> new_date</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_data</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">    data=pd.read_csv(file)</span><br><span class="line">    <span class="comment"># 处理震级</span></span><br><span class="line">    data=data.drop(data[data[<span class="string">&#x27;mag&#x27;</span>]&lt;<span class="number">0</span>].index)</span><br><span class="line">    magnitudes=data[<span class="string">&#x27;mag&#x27;</span>]</span><br><span class="line">    <span class="comment"># 时区设置</span></span><br><span class="line">    timezone = QTimeZone(QTimeZone.systemTimeZone()) <span class="comment"># &quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="comment"># 时间转换</span></span><br><span class="line">    times=data[<span class="string">&#x27;time&#x27;</span>].apply(<span class="keyword">lambda</span> x:transform_date(x,timezone))</span><br><span class="line">    <span class="keyword">return</span> times,magnitudes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    options=argparse.ArgumentParser()</span><br><span class="line">    options.add_argument(<span class="string">&quot;-f&quot;</span>,<span class="string">&quot;--file&quot;</span>,<span class="built_in">type</span>=<span class="built_in">str</span>,required=<span class="literal">True</span>)</span><br><span class="line">    args=options.parse_args()</span><br><span class="line">    data=read_data(args.file)</span><br><span class="line">    <span class="comment"># 创建应用程序</span></span><br><span class="line">    app=QApplication()</span><br><span class="line">    widget=Widget(data)</span><br><span class="line">    window=MainWindow(widget)</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">有关PyQT的入门知识呀</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
  <entry>
    <title>【QT】Chapter 1. PySide入门知识</title>
    <link href="http://example.com/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/</id>
    <published>2022-12-23T05:30:00.698Z</published>
    <updated>2022-12-23T12:19:39.863Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、什么是PyQt">一、什么是PyQt</h2><p>简单来说，PyQt就是用Python重构的Qt，一个强大的，创建跨平台GUI(Graphical User Interface)的工具包。开发者为<code>Phil Thompson</code>。</p><h2 id="二、PySide与PyQt">二、PySide与PyQt</h2><p>PyQt和PySide都是基于Python语言对Qt的实现，PyQt的推出时间要比PySide早些，功能也相对更强大，但是，PyQt采用的是GPLv3许可证，如果你在公司使用，可能就会出问题。</p><p>相较之下，PySide问世较晚，但确是Qt的亲儿子，采用LGPL协议发布，在未来，极有可能迸发出超过PyQt的影响力。</p><hr><h2 id="三、PySide6的安装与使用">三、PySide6的安装与使用</h2><p>直接<code>pip install pyside6</code>即可，安装成功后，找到所在路径，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..\anaconda\Lib\site-packages\PySide6</span><br></pre></td></tr></table></figure><p>我们接下来需要设置外部工具，在PyCharm中，打开如下所示的选项。</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223135208869.png" alt="image-20221223135208869" style="zoom:50%;"><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223135249464.png" alt="image-20221223135249464" style="zoom:50%;"><p>在添加页面，我们主要需要导入三个外部工具，分别是;</p><ul><li>Qt Designer：所见即所得式的页面设计工具</li><li>UIC：将Qt Designer生成的.ui文件转换为.py文件</li><li>RCC：将编写的.qrc资源转换为.py文件</li></ul><p>1️⃣ <strong>Qt_Designer</strong></p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223135516801.png" alt="image-20221223135516801" style="zoom:50%;"><p>最新版的这三个外部工具都在<code>\PySide6\</code>目录下，不需要进入<code>\Pyside6\script\</code>查找。</p><p>填写参数：</p><ul><li>Arguments: <code>$FilePath$</code></li><li>Working directory: <code>$FileDir$</code></li></ul><p>2️⃣ <strong>UIC</strong></p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223135749900.png" alt="image-20221223135749900" style="zoom:50%;"><p>同理，这里的参数填写为：</p><ul><li><p>Arguments: <code>$$FileName$ -o ui_$FileNameWithoutExtension$.py$</code></p></li><li><p>Working directory: <code>$FileDir$</code></p></li></ul><p>3️⃣ <strong>RCC</strong></p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223135959201.png" alt="image-20221223135959201" style="zoom:50%;"><p>这里的参数填写为：</p><ul><li><p>Arguments: <code>$$FileName$ -o $FileNameWithoutExtension$_rc.py $</code></p></li><li><p>Working directory: <code>$FileDir$</code></p></li></ul><p>不出意外的话，我们可以在这里看到我们的工具：</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223140106603.png" alt="image-20221223140106603" style="zoom:50%;"><p>或是右键某个程序，也可以找到我们安装好的工具。</p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223140147282.png" alt="image-20221223140147282" style="zoom:50%;"><hr><h2 id="四、PySide6的核心模块">四、PySide6的核心模块</h2><p>PySide6支持大量的模块，这些模块可以提供功能强大的开发支持。</p><p>其中，核心模块有三个：</p><table><thead><tr><th style="text-align:center">模块名</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">QtCore</td><td style="text-align:center">提供核心的非GUI功能，如信号和槽、属性、项目模型的基类、序列化等。</td></tr><tr><td style="text-align:center">QtGui</td><td style="text-align:center">扩展QtCore的GUI功能:事件，窗口和屏幕，OpenGL和基于光栅的2D绘画，以及图像。</td></tr><tr><td style="text-align:center">QtWidgets</td><td style="text-align:center">为应用程序提供可随时使用的小组件，包括用于UI的图形元素。</td></tr></tbody></table><p>其他主要模块如下：</p><table><thead><tr><th style="text-align:center">模块名</th></tr></thead><tbody><tr><td style="text-align:center">QtBluetooth</td></tr><tr><td style="text-align:center">QtCharts</td></tr><tr><td style="text-align:center">QtConcurrent</td></tr><tr><td style="text-align:center">QtDataVisualization</td></tr><tr><td style="text-align:center">QtDBus</td></tr><tr><td style="text-align:center">QtDesigner</td></tr><tr><td style="text-align:center">QtHelp</td></tr><tr><td style="text-align:center">Qt Multimedia</td></tr><tr><td style="text-align:center">Qt Multimedia Widgets</td></tr><tr><td style="text-align:center">QtNetwork</td></tr><tr><td style="text-align:center">Qt Network Authorization</td></tr><tr><td style="text-align:center">QtNfc</td></tr><tr><td style="text-align:center">QtOpenGL</td></tr><tr><td style="text-align:center">Qt OpenGL Widgets</td></tr><tr><td style="text-align:center">QtPDF</td></tr><tr><td style="text-align:center">Qt PDF Widgets</td></tr><tr><td style="text-align:center">QTQml</td></tr></tbody></table><p>其他模块可以查看官方文档：<a href="https://doc.qt.io/qtforpython/modules.html">https://doc.qt.io/qtforpython/modules.html</a></p><hr><h2 id="五、快速构建一个PySide6可视化程序">五、快速构建一个PySide6可视化程序</h2><p>我们现在尝试用PySide6来说<code>Hello World</code>吧！</p><p>之前说的那三个核心模块，其实在每个PySide项目中都可以提前选择导入，反正即使用不到也不亏。</p><blockquote><p>项目目标：制定一个可以随机用不同语言说“你好世界“的可视化程序</p></blockquote><p>明确目标后，我们就要导入模块了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys <span class="comment"># sys在这里主要用于控制进程</span></span><br><span class="line"><span class="keyword">import</span> random <span class="comment"># random在这里用于选择随机项</span></span><br><span class="line"><span class="keyword">from</span> PySide6 <span class="keyword">import</span> QtCore,QtWidgets,QtGui <span class="comment"># 核心模块</span></span><br></pre></td></tr></table></figure><p>接着，我们需要创建一个窗口。为了方便使用，这里我们写成一个组件类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span>(QtWidgets.QWidget):</span><br><span class="line"><span class="comment"># 选择继承自QWidgets.QWidget，这样就能当个小组件用啦</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br></pre></td></tr></table></figure><p>为了实现语言切换，我们需要一个触发器，这里选择的是一个<code>PushButton</code>，这个<code>PushButton</code>有一个触发事件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">self.button=QtWidgets.QPushButton(<span class="string">&quot;Click me!&quot;</span>) </span><br><span class="line"><span class="comment"># 继承自组件类QPushButton(text)</span></span><br><span class="line"></span><br><span class="line">self.button.clicked.connect(self.magic)</span><br><span class="line"><span class="comment"># 设置点击时间, 通过connect与槽函数连接起来</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@QtCore.Slot() </span><span class="comment"># 表明这是一个槽函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">magic</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>好了，然后我们需要能够显示的组件，这里选用的是<code>QLabel</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.text=QtWidgets.QLabel(<span class="string">&quot;Hello World&quot;</span>,           alignment=QtCore.Qt.AlignCenter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置我们的随机框</span></span><br><span class="line">self.hello=[<span class="string">&quot;Hallo Welt&quot;</span>, <span class="string">&quot;Hei maailma&quot;</span>, <span class="string">&quot;Hola Mundo&quot;</span>, <span class="string">&quot;Привет мир&quot;</span>,<span class="string">&quot;你好&quot;</span>]</span><br></pre></td></tr></table></figure><p>虽然我们现在搞好了组件，但是我们还需要对组件进行布局，让他看起来更美观。这里选择<code>QVBoxLayout</code>进行布局：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">self.layout = QtWidgets.QVBoxLayout(self)</span><br><span class="line"><span class="comment"># 传递自身，表示本组件采用的布局方式</span></span><br><span class="line"></span><br><span class="line">self.layout.addWidget(self.text) <span class="comment"># 添加组件</span></span><br><span class="line">self.layout.addWidget(self.button)</span><br></pre></td></tr></table></figure><p>别忘了，还有我们的点击事件，我们现在可以将其完善了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@QtCore.Slot() </span><span class="comment"># 表明这是一个槽函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">magic</span>(<span class="params">self</span>):</span><br><span class="line">self.text.setText(random.choice(self.hello))</span><br></pre></td></tr></table></figure><p>这样，我们就做好一个小组件啦！</p><p>但是这个组件并不会自己显示出来，我们需要创建一个应用程序来承载这个组件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app = QtWidgets.QApplication([]) <span class="comment"># 创建一个app</span></span><br><span class="line">sys.exit(app.<span class="built_in">exec</span>()) <span class="comment"># 设置app的退出事件</span></span><br></pre></td></tr></table></figure><p>接着就是组件的显示啦：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">widget = MyWidget()</span><br><span class="line">widget.resize(<span class="number">800</span>, <span class="number">600</span>)</span><br><span class="line">widget.show()</span><br></pre></td></tr></table></figure><p><strong>最终结果如下：</strong></p><img src="/2022/12/23/%E3%80%90QT%E3%80%91PySide%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/image-20221223143749409.png" alt="image-20221223143749409" style="zoom:50%;"><p>完整代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> PySide6 <span class="keyword">import</span> QtCore,QtWidgets,QtGui</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span>(QtWidgets.QWidget):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.hello=[<span class="string">&quot;Hallo Welt&quot;</span>, <span class="string">&quot;Hei maailma&quot;</span>, <span class="string">&quot;Hola Mundo&quot;</span>, <span class="string">&quot;Привет мир&quot;</span>,<span class="string">&quot;你好&quot;</span>]</span><br><span class="line">        self.button=QtWidgets.QPushButton(<span class="string">&quot;Click me!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.text=QtWidgets.QLabel(<span class="string">&quot;Hello World&quot;</span>,</span><br><span class="line">                                   alignment=QtCore.Qt.AlignCenter)</span><br><span class="line">        self.layout=QtWidgets.QVBoxLayout(self)</span><br><span class="line">        self.layout.addWidget(self.text)</span><br><span class="line">        self.layout.addWidget(self.button)</span><br><span class="line"></span><br><span class="line">        self.button.clicked.connect(self.magic)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @QtCore.Slot()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">magic</span>(<span class="params">self</span>):</span><br><span class="line">        self.text.setText(random.choice(self.hello))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app=QtWidgets.QApplication([])</span><br><span class="line">    widge=MyWidget()</span><br><span class="line">    widge.setWindowTitle(<span class="string">&quot;Say Hello&quot;</span>)</span><br><span class="line">    widge.resize(<span class="number">800</span>,<span class="number">600</span>)</span><br><span class="line">    widge.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">有关PyQT的入门知识呀</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="PySide6" scheme="http://example.com/tags/PySide6/"/>
    
  </entry>
  
  <entry>
    <title>【遥感导论】 第四章 遥感图像处理</title>
    <link href="http://example.com/2022/12/19/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    <id>http://example.com/2022/12/19/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/</id>
    <published>2022-12-19T06:45:20.089Z</published>
    <updated>2022-12-19T06:48:03.633Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、光学原理与光学处理">一、光学原理与光学处理</h2><h3 id="1-1-颜色视觉">1.1 颜色视觉</h3><hr><h2 id="二、数字图像的校正">二、数字图像的校正</h2><h2 id="三、数字图像增强">三、数字图像增强</h2><h2 id="四、多源信息复合">四、多源信息复合</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">遥感科学</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="遥感科学" scheme="http://example.com/tags/%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>【遥感导论】 第三章 遥感成像原理与遥感图像特征</title>
    <link href="http://example.com/2022/12/19/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E4%B8%89%E7%AB%A0_%E9%81%A5%E6%84%9F%E6%88%90%E5%83%8F%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2022/12/19/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E4%B8%89%E7%AB%A0_%E9%81%A5%E6%84%9F%E6%88%90%E5%83%8F%E5%8E%9F%E7%90%86/</id>
    <published>2022-12-19T03:31:07.268Z</published>
    <updated>2022-12-19T06:51:01.367Z</updated>
    
    <content type="html"><![CDATA[<h1>第三章 遥感成像原理与遥感图像特征</h1><h2 id="一、遥感平台">一、遥感平台</h2><blockquote><p>遥感平台是搭载传感器的工具，按照位置可以分为地面、航空航天航宇，按照作用可分为气象、陆地、海洋等。这里我们主要按照作用领域进行讨论</p></blockquote><h3 id="1-1-气象卫星">1.1  气象卫星</h3><p>气象卫星发展的<strong>三个阶段</strong>：</p><ul><li>20世纪60年代第一代气象卫星，如TIROS，ESSA，ATS</li><li>1970~1977第二代气象卫星，如ITOS-1，GOES</li><li>1978~Now第三代卫星，如NOAA</li></ul><p>我国气象卫星：风云一号、风云二号</p><p>气象卫星的<strong>特点</strong>：</p><ul><li>有低轨和高轨轨道，低轨是指近极地太阳同步轨道，高轨是指地球同步轨道</li><li>短周期重复观测，时间分辨率较高</li><li>成像面积大</li><li>资料来源连续、实时性强、成本低</li></ul><p><strong>应用领域</strong></p><ul><li>天气分析和气象预报</li><li>气候研究和气候变迁研究</li><li>资源环境其他领域</li></ul><hr><h3 id="1-2-陆地卫星">1.2 陆地卫星</h3><p>主要的陆地卫星：</p><ul><li>Landsat系列</li><li>SPOT系列</li><li>中把资源卫星（CBERS）</li><li>高分辨率卫星如IKONOS-2，Quickbird，OrbView-3</li></ul><hr><h3 id="1-3-海洋卫星">1.3 海洋卫星</h3><p>海洋遥感的<strong>特点</strong></p><ul><li>需要高空和空间的遥感平台，用以大面积同步覆盖的观测</li><li>以微波为主</li><li>电磁波与激光、声波的结合</li></ul><p>主要的海洋卫星：</p><ul><li>Seasat-1</li><li>雨云7号卫星(Nimbus-7)</li><li>MOSI</li><li>ERS</li><li>FY系列，HY系列</li></ul><hr><h2 id="二、摄影成像">二、摄影成像</h2><h3 id="2-1-摄影机">2.1 摄影机</h3><p>1️⃣ <strong>分幅式摄像机</strong></p><p>一次曝光得到目标的一幅影像，视场角越大，地面覆盖范围越大。</p><p>2️⃣ <strong>全景摄影机</strong></p><ul><li>缝隙式摄影机</li><li>镜头转动式全景摄影机</li></ul><p>3️⃣ <strong>多光谱摄影机</strong></p><p>🅰️ 特点</p><p>可以直接获取可见光和近红外范围内若干个波段影像。</p><p>🅱️ 类型</p><ul><li>多相机组合型<ul><li>同时将几架相机组装在一个外壳上，每架相机配置不同的滤光片和胶片，以获取同一地物不同波段的影像.</li></ul></li><li>多镜头组合型<ul><li>在同一架相机上装置多个镜头，配以不同波长的滤光片。</li></ul></li><li>光束分离型<ul><li>光束分离型是用一个镜头，通过二向反射镜或光栅分光，将不同波段在各焦平面上记录影像</li></ul></li></ul><p>4️⃣ <strong>数码摄影机</strong></p><p>数码摄影机的成像原理与一般摄影机相同，结构也类似，只不过数码摄影机的记录介质不是感光胶片，而是光敏电子器件，如CCD(电荷荷藕器件)。</p><h3 id="2-2-摄影像片的几何特征">2.2 摄影像片的几何特征</h3><p>1️⃣ <strong>垂直摄影</strong></p><p>摄影机主光轴垂直于地面或偏离垂线在3°以内。</p><p>2️⃣ <strong>倾斜摄影</strong></p><p>摄影机主光轴偏离垂线的角度大于3°。</p><p>3️⃣ <strong>垂直摄影像片的几何特征</strong></p><p>🅰️ <strong>像片的投影</strong></p><ol><li><p>中心投影与垂直投影的区别</p><ol><li><p>垂直距离的影响</p><p>垂直投影图像的缩小和放大与投影距离无关，没有统一的比例尺。中心投影则受到投影距离的影响，像片比例尺与平台高度和焦距有关。</p></li><li><p>投影面倾斜的影响</p><p>当投影面倾斜时，垂直投影的影响表现为仅比例尺有所放大，而在中心投影的相片上，则会发生几何形变。</p></li><li><p>地形起伏的影响</p><p>垂直投影时，随地面起伏变化，投影点之间的距离与地面实际水平距离成比例缩小，相对位置不变。中心投影时，地面起伏越像上投影点水平位置的位移量就越大，并产生一定规律的投影误差。</p></li></ol></li><li><p>中心投影的透视规律</p><ol><li>地面物体是一个点，在中心投影上仍是一个点。如果有几个点在同一投影线上，它的影像重叠成一个点</li><li>与像面平行的直线，在中心投影面上仍是直线</li><li>如果直线垂直于地面，其中心投影有两种情况：其一、当直线与像片垂直并通过投影中心（主光轴）时，该直线在像片上是一个点；其二，直线的延长线不通过投影中心，此时直线的投影仍是直线，但该垂直线状目标的长度和变形情况则取决于目标在像片中的位置</li><li>平面上的曲线，在中心投影的像片上仍为曲线</li><li>面状物体的中心投影相当于各种线投影的组合</li></ol></li></ol><p>🅱️ <strong>像片的比例尺</strong></p><p>像片的比例尺即像片上两点之间的距离与地面上相应两点实际距离之比。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span>为航高，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span> 为摄影机的焦距。像片的比例尺为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><mo>=</mo><mfrac><mi>f</mi><mi>H</mi></mfrac><mo>=</mo><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mi>A</mi><mi>B</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{m}=\frac{f}{H}=\frac{ab}{AB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ab</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>☑️<strong>像点位移</strong></p><p>像点位移是在中心投影的像片上地形起伏引起的平面上的点在像片位置上的移动。</p><p>特点：</p><ul><li>高差越大，引起的像点位移量越大</li><li>距离像主点越远的像点位移量越大，像片中心部分位移量较小</li><li>摄影高度越大，因地表起伏引起的位移量越小</li></ul><hr><h3 id="2-3-摄影胶片的物理特性">2.3 摄影胶片的物理特性</h3><ul><li><strong>感光特征曲线</strong><ul><li>横坐标为曝光量的对数值，纵坐标为胶片的光学密度</li></ul></li><li><strong>光学密度</strong><ul><li>光学密度是指胶片经过感光显影后，影像表现出的深浅程度</li></ul></li><li><strong>感光度</strong><ul><li>胶片的感光速度</li></ul></li><li><strong>反差</strong><ul><li>胶片的明亮部分与阴暗部分的密度差</li></ul></li><li><strong>反差系数</strong><ul><li>拍摄后负片影像与景物亮度差之比，即特征曲线上的斜率。</li></ul></li><li><strong>灰雾度</strong><ul><li>未经感光的胶片，显影后仍产生轻微的密度，呈现浅灰色</li></ul></li><li><strong>宽容度</strong><ul><li>宽容度是指胶片表达被摄影物体亮度间距的能力</li></ul></li><li><strong>解像力</strong><ul><li>通常称为感光胶片的分辨率</li></ul></li></ul><hr><h2 id="三、扫描成像">三、扫描成像</h2><h3 id="3-1-扫描成像的概念">3.1 扫描成像的概念</h3><p>扫描成像是依靠探测原件和扫描镜对目标地物以瞬时视场为单位进行的逐点、逐行取样，以得到目标地物电磁波辐射特性信息，形成一定谱段的图像。根据工作原理，可分为推扫式和摆扫式。</p><p>摆扫式有时被称为聚焦模式（Spotlight）或者跨轨扫描仪（across track scanners）。使用“镜子”来反射光线到一个探测器，利用一个“镜子”来回移动，收集从一个像素上测量的值。这种移动部件非常昂贵，而且容易损坏。</p><img src="/2022/12/19/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E4%B8%89%E7%AB%A0_%E9%81%A5%E6%84%9F%E6%88%90%E5%83%8F%E5%8E%9F%E7%90%86/image-20221219133618020.png" alt="image-20221219133618020" style="zoom:50%;"><p>摆扫式的扫描方向垂直于飞行路径，一次收集一个像素。</p><p>推扫式有时也称为沿着轨道扫描仪（along track scanners）, 使用的探测器安置在垂直于航天器的飞行方向，飞行器向前飞行时候，一次可以收集一行的图像（如下图所示）。推扫式接受的信号要强于摆扫式，因为摆扫式在一个像素内的时间很长。推扫式有一个确定是探测器可能存在不同的敏感性，如果没有校准好会导致图像条纹噪声。</p><img src="/2022/12/19/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E4%B8%89%E7%AB%A0_%E9%81%A5%E6%84%9F%E6%88%90%E5%83%8F%E5%8E%9F%E7%90%86/image-20221219133709864.png" alt="image-20221219133709864" style="zoom:50%;"><p>目前主流的传感器一般都采用的推扫式。</p><h3 id="3-2-扫描成像的方式">3.2 扫描成像的方式</h3><p>1️⃣ <strong>光/机扫描成像</strong></p><p>一般在扫描仪的前方安装光学镜头，依靠机械转动装置使镜头摆动。</p><p>2️⃣ <strong>固体自扫描成像</strong></p><p>用固定的探测元件，通过遥感平台的运动对目标地物进行扫描成像。</p><p>3️⃣ <strong>高光谱成像光谱扫描</strong></p><p>高光谱成像图像是由多达数百个波段的非常窄的连续光谱波段组成。它既能成像，又能获取目标光谱曲线。</p><hr><h2 id="四、微波遥感与成像方式">四、微波遥感与成像方式</h2><h3 id="4-1-微波传感器的概念">4.1 微波传感器的概念</h3><p>微波传感器是指通过微波传感器获取从目标地物发射或反射的微波辐射，经过判读处理来识别地物的技术。</p><h3 id="4-2-微波遥感的特点">4.2 微波遥感的特点</h3><p>1️⃣ <strong>全天时、全天候</strong></p><p>微波波长较长，一般受到瑞利散射，且强度与波长的四次方成反比，因而微波受到的散射较小，在各种天气都能很好的工作。</p><p>2️⃣ <strong>特殊的波谱指纹</strong></p><p>有些地物在微波波段有独特的波谱曲线，可以作区分。</p><p>3️⃣ <strong>穿透能力</strong></p><p>微波对冰、雪、森林、土壤都具有一定的穿透能力。</p><p>4️⃣ <strong>对海洋遥感的特殊意义</strong></p><p>海洋遥感里面一般都是用微波来做的，微波可以穿透云层，其波长也很适合于海面动态情况(海风、海浪)的观测。</p><p>5️⃣ <strong>分辨率低，但测量精度高</strong></p><h3 id="4-3-微波传感方式和传感器">4.3 微波传感方式和传感器</h3><p>按照传感器的工作方式，可以分为主动遥感和被动遥感。</p><hr><p>⭐ <strong>主动微波遥感</strong></p><p><strong>概念</strong>：主动微波遥感是指通过向目标地物<strong>发射微波</strong>并接收其<strong>向后散射</strong>信号来实现对地观测的遥感方式，其主要传感器是<strong>雷达</strong>。</p><p><strong>传感器</strong>：</p><p>1️⃣ <strong>雷达</strong></p><p>雷达(Lidar)意为无线电测距和定位，其工作波段大都在微波范围。雷达可以分为成像雷达和非成像雷达，而成像雷达又可以分为真实孔径雷达和合成孔径雷达。</p><p>雷达</p><ul><li>成像雷达<ul><li>合成孔径雷达</li><li>真实孔径雷达</li></ul></li><li>非成像雷达</li></ul><p><strong>工作原理</strong></p><p>雷达是由发射机通过天线在很短时间内，向目标地物发射一束很窄的大功率电磁波脉冲，然后用同一天线接收目标地物反射的回波信号而进行显示的一种传感器。不同物体的回波信号的振幅、相位都不同，在接受处理后，可以测出目标地物的方向、距离等数据。</p><p>2️⃣ <strong>侧视雷达</strong></p><p>侧视雷达的天线与传感平台的运动方向形成角度，朝着一侧或两侧倾斜安装，侧视雷达的图像更具立体感。</p><p>侧视雷达具有距离分辨力和方向分辨力两种独特的属性。</p><p>3️⃣ <strong>合成孔径雷达</strong></p><p>合成孔径雷达( SAR) 是一种高分辨率成像雷达，可以在能见度极低的气象条件下得到类似光学照相的高分辨雷达图像。利用雷达与目标的相对运动把尺寸较小的真实天线孔径用数据处理的方法合成一较大的等效天线孔径的雷达，也称综合孔径雷达。合成孔径雷达的特点是分辨率高，能全天候工作，能有效地识别伪装和穿透掩盖物。所得到的高方位分辨力相当于一个大孔径天线所能提供的方位分辨力。</p><hr><p>🌟 <strong>被动微波传感器</strong></p><p><strong>概念</strong>：通过传感器，接收来自目标地物发射的微波，而达到探测目的的遥感方式。</p><p><strong>传感器</strong>：</p><p>1️⃣ <strong>微波辐射计</strong></p><p>被动接收目标地物微波辐射的传感器</p><p>2️⃣ <strong>微波散射计</strong></p><p>被动探测目标地物微波散射特性的传感器</p><p>这两种传感器均不成像。</p><hr><h2 id="五、遥感图像特征">五、遥感图像特征</h2><h3 id="5-1-遥感图像的空间分辨率">5.1  遥感图像的空间分辨率</h3><p>遥感图像的空间分辨率指像素所代表的地面范围的大小，即扫描仪的瞬时视场，或能分辨的地面物体最小单元。</p><h3 id="5-2-遥感图像的波谱分辨率-光谱分辨率">5.2 遥感图像的波谱分辨率(光谱分辨率)</h3><p>波谱分辨率是指传感器在接收目标辐射的波谱时能分辨的最小波长间隔，间隔越小，波谱分辨率越高。</p><h3 id="5-3-遥感图像的辐射分辨率">5.3 遥感图像的辐射分辨率</h3><p>辐射分辨率是指传感器接收波谱信号时，能分辨的最小辐射度差。辐射分辨率在遥感图像上表现为每一像元的辐射量化级。</p><h3 id="5-4-遥感图像的时间分辨率">5.4 遥感图像的时间分辨率</h3><p>时间分辨率，是指对同一地点进行遥感采样的时间间隔，即采样的时间频率。时间分辨率又称重访周期，周期越短，时间分辨率越高。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">遥感科学</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="遥感科学" scheme="http://example.com/tags/%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>核密度与核函数</title>
    <link href="http://example.com/2022/12/03/%E3%80%90GIS%E3%80%91%E6%A0%B8%E5%AF%86%E5%BA%A6%E4%B8%8E%E6%A0%B8%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2022/12/03/%E3%80%90GIS%E3%80%91%E6%A0%B8%E5%AF%86%E5%BA%A6%E4%B8%8E%E6%A0%B8%E5%87%BD%E6%95%B0/</id>
    <published>2022-12-03T11:12:42.086Z</published>
    <updated>2022-12-17T03:34:33.368Z</updated>
    
    <content type="html"><![CDATA[<h1>自适应核密度</h1><hr><h2 id="Chapter-1-核函数">Chapter 1. 核函数</h2><p>核函数是直方图在连续欧几里得空间上的推广。我们知道，如果想要了解一个直方图内部每个<code>bins</code>的密度值，只需要将<code>bins</code>的数量除以<code>bins</code>的长度就好了。</p><p>那么如果推广到连续值上呢？根据导数的定义，这个公式可以写作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>h</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>h</mi><mo stretchy="false">)</mo><mo>−</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mrow><mn>2</mn><mi>h</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(x)=\lim_{h\to0}\frac{F(x+h)-F(x-h)}{2h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1791em;vertical-align:-0.7521em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>我们对某个点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>求密度，可以看做是区间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>→</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">h\to0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>的密度公式，写作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>h</mi></mrow></mfrac><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>h</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><msub><mi>N</mi><mrow><mi>x</mi><mi>i</mi><mo>∈</mo><mo stretchy="false">[</mo><mi>x</mi><mo>−</mo><mi>h</mi><mo separator="true">,</mo><mi>x</mi><mo>+</mo><mi>h</mi><mo stretchy="false">]</mo></mrow></msub><msub><mi>N</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">\hat{f}(x_0)=\frac{1}{2h}\lim_{h\to0}\frac{N_{xi\in[x-h,x+h]}}{N_{total}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2645em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4285em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7452em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>然后，对这个领域内的密度取平均值，就可以得到了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处的密度函数值，也就是将上述式子的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>x</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{xi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>改写成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi><mo>−</mo><mi>h</mi></mrow><mrow><mi>x</mi><mo>+</mo><mi>h</mi></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sum_{i=x-h}^{x+h}x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.347em;vertical-align:-0.358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.989em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">h</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>h</mi></mrow></mfrac><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>h</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi><mo>−</mo><mi>h</mi></mrow><mrow><mi>x</mi><mo>+</mo><mi>h</mi></mrow></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow><msub><mi>N</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mi>h</mi><msub><mi>N</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mn>2</mn><mi>h</mi></mrow></mfrac><mo>&lt;</mo><mn>1</mn><mo separator="true">,</mo><mi>h</mi><mo>→</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\hat{f}(x_0)=\frac{1}{2h}\lim_{h\to0}\frac{\sum_{i=x-h}^{x+h}x_i}{N_{total}}=\frac{1}{hN_{total}}\sum_i\frac{|x_i-x_0|}{2h}&lt;1,h\to0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.573em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.737em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.748em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.989em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">h</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7047em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>这个式子的结果与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span>，也就是带宽有关。</p><p>我们假设一个映射<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mo lspace="0em" rspace="0em">&lt;</mo><mo stretchy="false" lspace="0em" rspace="0em">!</mo></mfrac><mo>−</mo><mo>−</mo><mi>s</mi><mi>w</mi><mi>i</mi><mi>g</mi><mtext>￼</mtext><mn>0</mn><mo>−</mo><mo>−</mo><mo>&gt;</mo><mn>21</mn><mo stretchy="false">(</mo><mi>x</mi><mo>&lt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac1{2}1(x&lt;0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1164em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7714em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">￼0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，那么上式可改写为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>h</mi><msub><mi>N</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mi>K</mi><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi></mrow><mi>h</mi></mfrac><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>h</mi><mo>→</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\hat{f}(x_0)=\frac{1}{hN_{total}}\sum_iK(\frac{|x_i-x_0|}{h}),h\to0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7047em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>由于需要满足概率密度的积分值为1，对其积分得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>h</mi><msub><mi>N</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mo>∫</mo><mi>K</mi><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi></mrow><mi>h</mi></mfrac><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi><mspace linebreak="newline"></mspace><mtext> </mtext><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mo>∫</mo><mi>K</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mspace linebreak="newline"></mspace><mtext> </mtext><mspace linebreak="newline"></mspace><mo>=</mo><mo>∫</mo><mi>K</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\int\hat{f}(x_0)=\frac{1}{hN_{total}}\sum_i\int K(\frac{|x_i-x_0|}{h})dx\\\ \\=\frac{1}{N_{total}}\sum_i\int K(t)dt\\ \ \\=\int K(t)dt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2222em;vertical-align:-0.8622em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7047em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0em;"></span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6377em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0em;"></span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2222em;vertical-align:-0.8622em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span></span></span></p><p>也就是说，我们只需要满足让这个映射<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>的积分为1，就能够满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的积分为1。</p><p>一个比较自然的想法就是，利用其他的分布的密度函数作为K。比如正态分布的函数作为K，那么，上式就变成了：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mi>h</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>ϕ</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mi>h</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}{(x)}=\frac{1}{nh}\sum_{i=1}^N\phi(\frac{x-x_i}{h})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">nh</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>这个密度函数的估计就变得可导了，而且积分积起来等于1。直觉上，上式就是一个加权平均，离x越近的权重越高。而最开始的估计方式则是在区间内权重相等，区间外权重为0。</p><p>下图是各种核密度函数的图。他们的共同点是：周围到中间是个非递减函数，积分为1。当然，不是说核密度一定要是中心趋向，但是一定要积分为1.</p><img src="/2022/12/03/%E3%80%90GIS%E3%80%91%E6%A0%B8%E5%AF%86%E5%BA%A6%E4%B8%8E%E6%A0%B8%E5%87%BD%E6%95%B0/image-20221203184520026.png" alt="image-20221203184520026" style="zoom:50%;"><hr><h2 id="Chapter-2-带宽">Chapter 2. 带宽</h2><p>核密度中的带宽，就是波及区间，或者可以想象成一个气体从原点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>向外扩散，时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>越长，扩散所波及的范围越大。这个时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>就是所谓的带宽。那么在空间上，带宽<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span>可以简单的视作卷积范围，也就是最远能达到的位置。</p><p>带宽，决定了核函数中彼此的落差，也就是“方差”，不同的带宽得到的结果会呈现一个比较高的差异。较小的带宽，会聚焦某一点的范围，从而忽略局部特征，较大的带宽，又会让数据趋于平庸和同质化。(是不是和卷积核很像！那么卷积核都能有Deformable，带宽是不是也能Adaptable呢)</p><p>一种非常常用的方式是使用最小化L2函数(MISE 平均积分平方误差)，可以写作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>I</mi><mi>S</mi><mi>E</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo>∫</mo><mo stretchy="false">(</mo><msub><mover accent="true"><mi>f</mi><mo>^</mo></mover><mi>h</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">MISE(h)=E[\int(\hat{f}_h(x)-f(x))^2\ dx]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">SE</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2222em;vertical-align:-0.8622em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span></span></p><p>为了让MISE最小，我们对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span>求导，就可以确定一种方差最小的带宽选择方案。</p><p>总而言之，<strong>自适应带宽的核密度估计方法</strong>是在固定带宽核密度函数的基础上，通过修正带宽参数为而得到的，其形式如式所示：</p><img src="/2022/12/03/%E3%80%90GIS%E3%80%91%E6%A0%B8%E5%AF%86%E5%BA%A6%E4%B8%8E%E6%A0%B8%E5%87%BD%E6%95%B0/image-20221203185304860.png" alt="image-20221203185304860" style="zoom:50%;"><hr><h2 id="Chapter-3-自适应核密度与空间人文赋能的自适应搜索半径">Chapter  3. 自适应核密度与空间人文赋能的自适应搜索半径</h2><p>前文已经提到，自适应核密度的带宽是基于周边邻域MISE最小化的思想进行的，是基于统计学上的。在空间上，表现与周边其他点的密度有关。这种自适应带宽并不会考虑实际容纳量，是一种理想的无限熵增模型，自适应的带宽不具备普适解释性。而空间人文赋能的自适应搜索半径方法，是由数据导向，数据驱动，与实际问题形成闭环，具有时空解释性。自适应半径是对核密度函数的优化，本征表现为该区域潜在的倾向密度值，在本文的模型中，摒弃了统计意义上的自适应变换，提出了相对切实的自适应半径，意图在有限的样本中找到更好、更有人文气息的较优解。再有，传统的核密度是基于连续点的，实际上，空间上的避难所和居民点是离散分布的，使用自适应核密度，难免落入较大的低洼，不能很好的贴合数据，是一种比较病态的解法。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">核密度与核函数</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="GIS" scheme="http://example.com/tags/GIS/"/>
    
  </entry>
  
</feed>
