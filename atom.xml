<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岁染</title>
  <icon>https://www.gravatar.com/avatar/7228219e90ece9b38ea5921da1fcc500</icon>
  <subtitle>别来无恙，你在心上</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-07T13:43:56.081Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Kagura</name>
    <email>651421775@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 奇怪的知识</title>
    <link href="http://example.com/2022/09/07/%E3%80%90Python%E3%80%91Python%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2022/09/07/%E3%80%90Python%E3%80%91Python%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86/</id>
    <published>2022-09-07T13:43:14.992Z</published>
    <updated>2022-09-07T13:43:56.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python奇怪的知识">Python奇怪的知识</h2><h3 id="带余除法！"><strong>带余除法！</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C,D=<span class="built_in">divmod</span>(A,B)</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg.</span></span><br><span class="line"><span class="comment"># print(divmod(19,6))</span></span><br><span class="line"><span class="comment"># (3,1)</span></span><br></pre></td></tr></table></figure><h3 id="Join神器！">Join神器！</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&quot; &quot;</span>*A).join(B)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意啦！</span></span><br><span class="line"><span class="comment"># 以B[0]开头 B[n-1]结尾</span></span><br><span class="line"><span class="comment"># 中间穿插&quot; &quot;*A  </span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Python 奇怪的知识</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【知乎转载】鼻炎成因及疗法</title>
    <link href="http://example.com/2022/09/07/%E3%80%90%E7%9F%A5%E4%B9%8E%E8%BD%AC%E8%BD%BD%E3%80%91%E9%BC%BB%E7%82%8E/"/>
    <id>http://example.com/2022/09/07/%E3%80%90%E7%9F%A5%E4%B9%8E%E8%BD%AC%E8%BD%BD%E3%80%91%E9%BC%BB%E7%82%8E/</id>
    <published>2022-09-07T12:35:06.647Z</published>
    <updated>2022-09-07T12:37:44.113Z</updated>
    
    <content type="html"><![CDATA[<p>“通鼻喷剂”、“鼻甲切除术”的滥用，只追求迅速，不看长远。</p><p>通鼻喷剂，简直是鼻塞患者的“神药”一喷即灵，立竿见影的效果，殊不知这是在饮鸩止渴，一开始使用确实效果很好，但持续一段时间后，发现原来喷一下就通了，现在得喷两下、三下，并且药效越来越短，之前喷完两三个小时都不堵，现在不到半小时又堵了。于是剂量越用越大，使用次数越来越多，形成药物依赖。</p><p>我曾经有个鼻炎患者，买“通鼻喷剂”是以箱为单位，最后只要不用，鼻子就永远没畅通过。</p><p>这些“通鼻喷剂”从作用原理分类上属于减充血剂，也可以称为血管收缩剂。</p><p>药物性鼻炎就是长期过度使用这类药物而引发的。</p><p>鼻塞产生的原因是：血管通透性增加，使得大量血浆渗入黏膜组织，造成水肿堵塞了气道。</p><p>通过使用减充血剂，就像从源头上把供水的水管给关紧了，没有持续的体液供应，组织水肿就会消退，黏膜肿胀的问题缓解，气道重新恢复通畅。</p><p>但是，长期使用减充血剂后，血管的“阀门”会对药物变得越来越不敏感，更糟糕的是还会出现反跳性充血，因为经常使用减充血剂，血液流量减少了，不仅让黏膜组织得不到充足的营养供应，并且代谢的废物也会堆积在鼻腔，血管不得不代偿性扩张以平衡药物收缩血管的作用。</p><p>结果就是通鼻喷剂越用越多、效果越来越差、不用就不通，最后就成了“药物性鼻炎”</p><p>儿童用减充血剂的危害更大，因为儿童鼻黏膜娇嫩、血管丰富，药物吸收的更快，剂量更难以把控，效果和副作用更加明显，还有通过鼻咽后有被孩子吞食的风险，从胃部进入血液的药物会作用于全身，因此大部分减充血剂都禁止给儿童使用</p><p>除了通鼻喷剂，减充血剂还会藏在各种复方制剂中，最常见的是感冒药，在名称中带有“麻”字的感冒药通常含有减充血剂，所以需要家长们格外注意。</p><p>为了短暂的鼻子通畅，冒着承受严重副作用和药物依赖的风险，实在不值得。</p><p>空鼻综合征：每一次呼吸都是痛苦的折磨<br>“一进入空调车，我每吸一口气，就感觉冷空气直接进入到我的肺里。”</p><p>“鼻子不痛，人难受、头疼、整晚睡不着觉…”</p><p>“晚上睡觉就像‘烙大饼’，左边鼻子堵了翻右边，右边又堵了再翻左边，经常堵醒或嗓子干，半夜起来喝水，一个晚上可以翻100次身。”</p><p>“睡不好、注意力不集中，像我这种原来学习能力很强的人，影响用脑感觉很痛苦，好多事都没精力做…”</p><p>这些人在描述自己的状况时，几乎都用了“生不如死”，每时每刻都要呼吸，而每一次呼吸都是痛苦的折磨。</p><p>都是因为手术切除部分鼻甲黏膜后，鼻黏膜对空气加温、加湿以及过滤的功能作用被破坏，吸入鼻腔的干冷空气直接进入气管肺部，还刺激着鼻腔分布的神经末梢，造成反射性头痛；这些直接吸进去的空气缺乏有效的清洁过滤，携带细菌进入还可能造成呼吸道感染。</p><p>切除肿胀的鼻黏膜后鼻腔本来是变宽大了，通气顺畅才对，为什么还会出现鼻塞？</p><p>是因为鼻黏膜上丰富的的末梢神经能感知气流，一旦被破坏就会感觉不到空气流动，产生鼻塞的感觉，还伴有头痛、嗅觉减退等症状。</p><p>除了鼻甲切除术，还有黏膜外黏膜消除术（如表面烧灼、激光治疗）</p><p>黏膜下消融术（如黏膜内烧灼、射频消融、激光治疗）等破坏黏膜的疗法都有造成空鼻综合征的风险。</p><p>上面所说的两种方法都是为了解决鼻塞的问题<br>为什么会一直鼻塞，鼻塞的常见原因是什么？</p><p>1、过敏引起的鼻塞</p><p>吸入一些过敏原如花粉、尘螨、面粉等，引起过敏反应，鼻腔黏膜充血，影响空气吸入，造成鼻塞。这种需要查过敏原，从源头避免吸入过敏原。</p><p>2、慢性鼻炎</p><p>鼻腔纤毛摆动异常，无法运送垃圾出去，这些炎性物质不断堆积在鼻腔里，堆积的分泌物和炎性物质又不断刺激鼻黏膜，进一步加重纤毛摆动异常，如此形成恶性循环，鼻炎久而不愈。</p><p>这种慢性鼻炎需要抗炎排分泌物，从源头减少分泌物，然后修复鼻黏膜使纤毛恢复正常摆动，加快运送垃圾。</p><p>3、鼻中隔偏曲</p><p>大部分人的鼻中隔其实都会微微偏向鼻腔的某一侧，这并不会导致功能障碍，但如果鼻中隔“拗造型”太过放飞自我，扭成了“C”形或者“S”形时，问题就严重了，会造成经常流鼻血、鼻塞不通气等难受的病症。</p><p>4、外伤、发育不良</p><p>通鼻喷剂不是给孩子缓解鼻塞长期用的，手术切除鼻甲又会有“空鼻综合征”的风险，那么孩子鼻塞，家长该怎么办？试试这些方法<br>鼻塞是症状，是因为鼻腔有炎症才会造成鼻塞，因此对付鼻塞的根本是消除炎症，降低血管通透性。缓解鼻塞的思路绝对不是收缩血管，相反，应该加快局部血液循环，带走潴留在组织中的液体，像大禹治水一样，堵不如疏。</p><p>1、按摩这些穴位</p><p>揉迎香穴、山根穴、风池穴、摩擦鼻梁</p><p>2、中药雾化&amp;水蒸汽</p><p>和之前咳嗽的蒸汽排痰法一样，用水蒸气熏蒸15~20分钟，注意温度距离，避免烫伤。</p><p>配合中药配方雾化，促进分泌物排出的同时修复黏膜、消除炎症。</p><p>3、半导体弱激光照射鼻黏膜</p><p>采用红光或红外光照射鼻腔黏膜，可以促进鼻黏膜局部血液循环，改善黏膜水肿缓解鼻塞。</p><p>这种激光照射知识一种缓解鼻塞症状的辅助治疗手段，和盐水洗鼻的作用类似，真正解决鼻塞，还是需要修鼻腔黏膜、消除炎症。</p><p>4、盐水洗鼻</p><p>盐水洗鼻是需要用药店的生理盐水，不是在家用食盐和水兑成生理盐水。并且盐水冲洗鼻腔需要一定水压和水量，要格外注意，因为有可能把炎性物质冲进更深地方，引发其他部位感染发炎。</p><p>人体有自己的黏液纤毛清除运动，所以要解决鼻塞，还是需要修复黏膜，让纤毛恢复正常摆动，加快运送垃圾，消除炎症刺激。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">转载自https://www.zhihu.com/question/366308089/answer/1329668016</summary>
    
    
    
    <category term="拾枝杂谈" scheme="http://example.com/categories/%E6%8B%BE%E6%9E%9D%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="知乎转载" scheme="http://example.com/tags/%E7%9F%A5%E4%B9%8E%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>【作品集】岁月拾珠</title>
    <link href="http://example.com/2022/09/07/%E3%80%90Artist%E3%80%91%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    <id>http://example.com/2022/09/07/%E3%80%90Artist%E3%80%91%E4%BD%9C%E5%93%81%E9%9B%86/</id>
    <published>2022-09-07T10:36:57.526Z</published>
    <updated>2022-09-08T12:34:56.176Z</updated>
    
    <content type="html"><![CDATA[<h1>岁染の设计集</h1><hr><p>随缘更新哦，主要是记录22年9月-25年6月的设计作品啦，看个乐呵吧！</p><hr><p><strong>Name</strong> 科普征文大赛海报</p><p><strong>Time</strong>  2022年9月1日</p><img src="/2022/09/07/%E3%80%90Artist%E3%80%91%E4%BD%9C%E5%93%81%E9%9B%86/image-20220908164603107.png" alt="image-20220908164603107" style="zoom:50%;"><hr><p><strong>Name</strong> 新生杯篮球赛</p><p><strong>Time</strong>  2022年9月6日</p><img src="/2022/09/07/%E3%80%90Artist%E3%80%91%E4%BD%9C%E5%93%81%E9%9B%86/image-20220908164902050.png" alt="image-20220908164902050" style="zoom:50%;"><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">作品集</summary>
    
    
    
    <category term="梦时风月" scheme="http://example.com/categories/%E6%A2%A6%E6%97%B6%E9%A3%8E%E6%9C%88/"/>
    
    
    <category term="平面设计" scheme="http://example.com/tags/%E5%B9%B3%E9%9D%A2%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Numpy教程</title>
    <link href="http://example.com/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/</id>
    <published>2022-09-07T05:09:27.030Z</published>
    <updated>2022-09-07T09:23:06.195Z</updated>
    
    <content type="html"><![CDATA[<h1>Numpy 教程</h1><p>什么是<code>Numpy</code>？Numpy(Numerical Python)是一个Python扩展库，支持大量的维度数组和矩阵运算，此外也针对数组运算提供大量的数学函数库。</p><p>其主要用于数组计算，特点包括：</p><ul><li>一个强大的N维数组对象ndarray</li><li>广播功能函数</li><li>整合C/C++/Fortran代码的工具</li><li>线性代数、傅里叶变换、随机数生成等功能</li></ul><hr><h2 id="一、Ndarray对象">一、Ndarray对象</h2><p>Ndarray(N-dimension array)是一个<code>N</code>维数组对象，他是一系列同类型数据的集合。</p><p>其内部构成为：</p><ul><li>一个指向数据的指针</li><li>数据类型<code>dtype</code>，描述在数组中的固定大小的格子</li><li>一个表示数组形状<code>shape</code>的元组</li><li>一个跨度元组<code>stride</code>,也就是我们索引切片的时候选择的跨度</li></ul><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907131758920.png" alt="image-20220907131758920" style="zoom:50%;"><p>下面我们来看看具体的生成器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">numpy.array(<span class="built_in">object</span>, dtype = <span class="literal">None</span>, copy = <span class="literal">True</span>, order = <span class="literal">None</span>, subok = <span class="literal">False</span>, ndmin = <span class="number">0</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">object: 数组或嵌套的数列</span></span><br><span class="line"><span class="string">dtype: 数据类型</span></span><br><span class="line"><span class="string">copy: 对象是否需要复制(new的内存空间)</span></span><br><span class="line"><span class="string">order: 创建数组的样式，A为任意方向，C为行方向，F为列方向</span></span><br><span class="line"><span class="string">subok: 返回一个与基类型一致的数组</span></span><br><span class="line"><span class="string">ndmin: 指定生成数组的最小维度</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>生成最小维度</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最小维度  </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], ndmin =  <span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [[1 2 3 4 5]]</span></span><br></pre></td></tr></table></figure><blockquote><p>ndarray 对象由计算机内存的连续一维部分组成，并结合索引模式，将每个元素映射到内存块的一个位置。</p></blockquote><hr><h2 id="二、数据类型">二、数据类型</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">bool_</td><td style="text-align:center">布尔型数据类型（True 或者 False）</td></tr><tr><td style="text-align:center">int_</td><td style="text-align:center">默认的整数类型（类似于 C 语言中的 long，int32 或 int64）</td></tr><tr><td style="text-align:center">intc</td><td style="text-align:center">与 C 的 int 类型一样，一般是 int32 或 int 64</td></tr><tr><td style="text-align:center">intp</td><td style="text-align:center">用于索引的整数类型（类似于 C 的 ssize_t，一般情况下仍然是 int32 或 int64）</td></tr><tr><td style="text-align:center">int8</td><td style="text-align:center">字节（-128 to 127）</td></tr><tr><td style="text-align:center">int16</td><td style="text-align:center">整数（-32768 to 32767）</td></tr><tr><td style="text-align:center">int32</td><td style="text-align:center">整数（-2147483648 to 2147483647）</td></tr><tr><td style="text-align:center">int64</td><td style="text-align:center">整数（-9223372036854775808 to 9223372036854775807）</td></tr><tr><td style="text-align:center">uint8</td><td style="text-align:center">无符号整数（0 to 255）</td></tr><tr><td style="text-align:center">uint16</td><td style="text-align:center">无符号整数（0 to 65535）</td></tr><tr><td style="text-align:center">uint32</td><td style="text-align:center">无符号整数（0 to 4294967295）</td></tr><tr><td style="text-align:center">uint64</td><td style="text-align:center">无符号整数（0 to 18446744073709551615）</td></tr><tr><td style="text-align:center">float_</td><td style="text-align:center">float64 类型的简写</td></tr><tr><td style="text-align:center">float16</td><td style="text-align:center">半精度浮点数，包括：1 个符号位，5 个指数位，10 个尾数位</td></tr><tr><td style="text-align:center">float32</td><td style="text-align:center">单精度浮点数，包括：1 个符号位，8 个指数位，23 个尾数位</td></tr><tr><td style="text-align:center">float64</td><td style="text-align:center">双精度浮点数，包括：1 个符号位，11 个指数位，52 个尾数位</td></tr><tr><td style="text-align:center">complex_</td><td style="text-align:center">complex128 类型的简写，即 128 位复数</td></tr><tr><td style="text-align:center">complex64</td><td style="text-align:center">复数，表示双 32 位浮点数（实数部分和虚数部分）</td></tr><tr><td style="text-align:center">complex128</td><td style="text-align:center">复数，表示双 64 位浮点数（实数部分和虚数部分）</td></tr></tbody></table><hr><h2 id="三、数组属性">三、数组属性</h2><p>Numpy的数组维度数量称为秩(rank)，每一个线性的数组是一个轴(axis)，也就是维度。</p><p>例如：二维数组由两个一维数组构成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># [A,B,C]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者是：</span></span><br><span class="line"><span class="comment"># [ A,</span></span><br><span class="line"><span class="comment">#B,</span></span><br><span class="line"><span class="comment">#   C ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A=[1,2,3]</span></span><br></pre></td></tr></table></figure><p>第一个一维数组中的每个元素又是一个一维数组。第一个轴也成为了底层数组，第二个则是底层数组中的数组，以此类推。</p><p>简单说一下，<code>axis=0</code>的情况表示沿着第0轴进行操作，也就是列，<code>axis=1</code>则是沿着第1轴进行操作，也就是行。</p><p><strong>常用属性</strong></p><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">ndarray.ndim</td><td style="text-align:center">秩，即轴的数量或维度的数量</td></tr><tr><td style="text-align:center">ndarray.shape</td><td style="text-align:center">数组的维度，对于矩阵，n 行 m 列</td></tr><tr><td style="text-align:center">ndarray.size</td><td style="text-align:center">数组元素的总个数，相当于 .shape 中 n*m 的值</td></tr><tr><td style="text-align:center">ndarray.dtype</td><td style="text-align:center">ndarray 对象的元素类型</td></tr><tr><td style="text-align:center">ndarray.itemsize</td><td style="text-align:center">ndarray 对象中每个元素的大小，以字节为单位</td></tr><tr><td style="text-align:center">ndarray.flags</td><td style="text-align:center">ndarray 对象的内存信息</td></tr><tr><td style="text-align:center">ndarray.real</td><td style="text-align:center">ndarray元素的实部</td></tr><tr><td style="text-align:center">ndarray.imag</td><td style="text-align:center">ndarray 元素的虚部</td></tr><tr><td style="text-align:center">ndarray.data</td><td style="text-align:center">包含实际数组元素的缓冲区，由于一般通过数组的索引获取元素，所以通常不需要使用这个属性。</td></tr></tbody></table><p><strong>示例</strong></p><p>1️⃣ <strong>ndim</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907133648496.png" alt="image-20220907133648496" style="zoom:50%;"><p>2️⃣ <strong>shape</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907133713115.png" alt="image-20220907133713115" style="zoom:50%;"><p>3️⃣ <strong>size</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907133735406.png" alt="image-20220907133735406" style="zoom:50%;"><p>4️⃣ <strong>dtype</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907133818185.png" alt="image-20220907133818185" style="zoom:50%;"><hr><h2 id="四、Numpy-创建数组">四、Numpy 创建数组</h2><p>除却使用<code>ndarray</code>底层构造器外，我们还可以采用以下的方式来创建数组哦。</p><p><strong>1️⃣ numpy.empty</strong></p><p>参数说明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">numpy.empty(shape, dtype = <span class="built_in">float</span>, order = <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">shape: 数组形状</span></span><br><span class="line"><span class="string">dtype: 数据类型</span></span><br><span class="line"><span class="string">order: 行优先还是列优先，表示在计算机内中存储元素的顺序</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>创建一个空数组</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907134640835.png" alt="image-20220907134640835" style="zoom:50%;"><p>数组的元素为随机数，因为并未进行初始化。</p><p><strong>2️⃣ numpy.zeros</strong></p><p>参数说明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.zeros(shape, dtype = <span class="built_in">float</span>, order = <span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>创建一个零数组</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907134826672.png" alt="image-20220907134826672" style="zoom:50%;"><p><strong>3️⃣ numpy.ones(shape,dtype,order)</strong></p><p>使用方式一样哦，创建全1数组</p><p><strong>4️⃣ numpy.arange(start=0,stop,step,dtype)</strong></p><p>返回一个<code>0~n-1</code>的<code>ndarray</code>数组~</p><p><strong>5️⃣ numpy.full(shape,val)</strong></p><p>生成一个值全为<code>val</code>的数组~</p><p><strong>6️⃣ numpy.eye(n)</strong></p><p>生成单位矩阵~</p><p><strong>7️⃣ numpy.diag(list)</strong></p><p>生成对角线矩阵！</p><hr><p><strong>8️⃣ numpy.asarray(a,dtype,order)</strong></p><p>从给定的参数中生成<code>ndarray</code></p><p><strong>9️⃣ numpy.fromiter(iterable,dtype,count=-1)</strong></p><p>从可迭代对象中创建<code>ndarray</code>对象，返回一维数组，<code>count</code>表示读取的数据量，默认是读取所有数据</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907135445064.png" alt="image-20220907135445064" style="zoom:50%;"><p><strong>☀️ numpy.linspace</strong></p><p>用于创建一个等差数列的<strong>一维数组</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, retstep=<span class="literal">False</span>, dtype=<span class="literal">None</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">endpoint: 是否包含终止点</span></span><br><span class="line"><span class="string">retstep: 是否输出间距</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907135746065.png" alt="image-20220907135746065" style="zoom:50%;"><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907135755667.png" alt="image-20220907135755667" style="zoom:50%;"><p><strong>🌙 numpy.logspace</strong></p><p>用于创建一个等比数列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">np.logspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, base=<span class="number">10.0</span>, dtype=<span class="literal">None</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">base: 默认底数</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907135938777.png" alt="image-20220907135938777" style="zoom:50%;"><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907135953686.png" alt="image-20220907135953686" style="zoom:50%;"><hr><h2 id="五、Numpy的切片和索引">五、Numpy的切片和索引</h2><p><code>ndarray</code>中的对象内容可以通过索引或切片来访问和修改。</p><p>有两种比较主流的索引方式：</p><ul><li>内置<code>slice</code>函数</li><li>冒号分隔符</li></ul><p>我们重点说<code>冒号分隔符</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A[star:step:end]</span><br></pre></td></tr></table></figure><p>注意<strong>左闭右开</strong>。</p><p>除却本身<code>list</code>的机制外，我们还可以采用省略号。</p><p>表示取到某一维度上的所有数据，譬如：</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907161127678.png" alt="image-20220907161127678" style="zoom:50%;"><p>除此之外，<code>Numpy</code>有一些更高级的索引方式。</p><p><strong>1️⃣整数数组索引</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907161408916.png" alt="image-20220907161408916" style="zoom:50%;"><p>根据数组维度，第一个索引数组表示<code>axis=0</code>，第二个索引数组表示<code>axis=1</code>，他们之间的<code>一一映射</code>确保了行列之间的取值。</p><p><strong>维度不对会报错</strong></p><p>当然，当第一个数组或者第二个数组维度为<code>1</code>时，不会报错，表示就要这一个位置。</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907161526604.png" alt="image-20220907161526604" style="zoom:50%;"><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907161653950.png" alt="image-20220907161653950" style="zoom:50%;"><p>我们的索引可以与切片<code>:</code>或<code>...</code>进行组合：</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907162130989.png" alt="image-20220907162130989" style="zoom:50%;"><p>基本上能满足项目需要的索引组合了。</p><p><strong>2️⃣ 布尔索引</strong></p><p>可以通过布尔运算来过滤指定条件之外的元素！</p><p>下面看个栗子：<br><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907162344660.png" alt="image-20220907162344660" style="zoom:50%;"></p><p>下面的实例采用了逻辑非<code>~</code>对<code>NaN</code>数据进行过滤</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907162441545.png" alt="image-20220907162441545" style="zoom:50%;"><p>过滤非复数元素</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907162515978.png" alt="image-20220907162515978" style="zoom:50%;"><p>3️⃣ <strong>花式索引</strong></p><p>利用整数数组进行索引。</p><p>花式索引总是将数据复制到新数组中。</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907163812907.png" alt="image-20220907163812907" style="zoom:50%;"><hr><h2 id="六、Numpy的广播机制">六、Numpy的广播机制</h2><p>广播(Broadcast)是<code>numpy</code>对不同形状的数组进行数值计算的方式。</p><p>☀️</p><p>若两个数组<code>a</code>和<code>b</code>形状相同，对应的操作应当是每个元素之间的操作。</p><p>这要求维数相同，且各维度的长度相同。</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907164450631.png" alt="image-20220907164450631" style="zoom:50%;"><p>🌙</p><p>在两个数组形状不同时，<code>numpy</code>将自动触发广播机制。</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907164553770.png" alt="image-20220907164553770" style="zoom:50%;"><p>其内部运算逻辑如下图：</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907164617941.png" alt="image-20220907164617941" style="zoom:50%;"><p>这种广播要求的是一定有一个维度长度是匹配的，将较小的数组通过重复扩张到大的维度，以匹配维度为核心进行运算。</p><p><strong>规则</strong></p><ul><li>让所有输入数组都向其中形状最长的数组看齐，形状中不足的部分都通过在前面加 1 补齐。<ul><li>例如：a(2,3) b(3)—&gt;b(1,3)</li></ul></li><li>输出数组的形状是输入数组形状的各个维度上的最大值。</li><li>如果输入数组的某个维度和输出数组的对应维度的长度相同或者其长度为 1 时，这个数组能够用来计算，否则出错。</li><li>当输入数组的某个维度的长度为 1 时，沿着此维度运算时都用此维度上的第一组值。</li></ul><p><strong>简单理解</strong></p><p>对两个数组，分别比较他们的每一个维度（若其中一个数组没有当前维度则忽略），满足：</p><ul><li>数组拥有相同形状✅</li><li>当前维度的值相等✅</li><li>当前维度的值有一个是 1✅</li></ul><p>1️⃣ 同shape</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907165638282.png" alt="image-20220907165638282" style="zoom:50%;"><p>2️⃣ 某个维度相等</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907165711782.png" alt="image-20220907165711782" style="zoom:50%;"><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907165725149.png" alt="image-20220907165725149" style="zoom:50%;"><p>3️⃣ 某个维度为1</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907165745186.png" alt="image-20220907165745186" style="zoom:50%;"><p>4️⃣ 不满足上述条件</p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907165815935.png" alt="image-20220907165815935" style="zoom:50%;"><p>弹出ValueError错误</p><hr><h2 id="七、Numpy-数组操作与逻辑运算">七、Numpy 数组操作与逻辑运算</h2><p><strong>1️⃣ 逻辑运算</strong></p><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907170115856.png" alt="image-20220907170115856" style="zoom:50%;"><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907170201190.png" alt="image-20220907170201190" style="zoom:50%;"><img src="/2022/09/07/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Numpy%E5%85%A5%E9%97%A8/image-20220907170312288.png" alt="image-20220907170312288" style="zoom:50%;"><p>2️⃣ <strong>通用判断函数</strong></p><ul><li><p><strong>np.all()</strong></p><ul><li><p>返回某个表达式中的元素是否全是满足条件</p></li><li><pre><code class="language-python">np.all(stock_day_rise[0:2,0:5] &gt; 0)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ **np.unique()**</span><br><span class="line"></span><br><span class="line">  + 返回唯一值</span><br><span class="line"></span><br><span class="line">  + ```python</span><br><span class="line">    np.unique(stock_day_rise[0:2,0:5].astype(int))</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p><strong>np.any()</strong></p><ul><li><p>只要有一个元素满足条件就返回<code>True</code></p></li><li><pre><code class="language-python">np.any(stock_day_rise[0:2,0:5] &gt; 0)</code></pre></li></ul></li></ul><p>3️⃣ <strong>三元运算符</strong></p><ul><li><p><strong>np.where(ndarray , A , B)</strong></p><ul><li><p>如果满足条件，将元素替换为A，否则替换为B</p></li><li><pre><code class="language-python">np.where(temp &gt; 0, 1, 0)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 常常结合`np.logical_and`和`np.logical_or`使用</span><br><span class="line"></span><br><span class="line">+ ```python</span><br><span class="line">  np.where(np.logical_and(temp &gt; 0.5, temp &lt; 1), 1, 0)</span><br><span class="line">  np.where(np.logical_or(temp &gt; 0.5, temp &lt; -0.5), 1, 0)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><blockquote><p>数组操作<br>Numpy包含了一些函数用于处理数组，大致可分为以下几类：</p></blockquote><ul><li>修改数组形状</li><li>翻转数组</li><li>修改数组维度</li><li>连接数组</li><li>分割数组</li><li>数组元素的添加与删除</li></ul><p><strong>1️⃣ 修改数组形状</strong></p><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>reshape</code></td><td style="text-align:center">不改变数据的条件下修改形状</td></tr><tr><td style="text-align:center"><code>flat</code></td><td style="text-align:center">数组元素迭代器</td></tr><tr><td style="text-align:center"><code>flatten</code></td><td style="text-align:center">返回一份数组拷贝，对拷贝所做的修改不会影响原始数组</td></tr><tr><td style="text-align:center"><code>ravel</code></td><td style="text-align:center">返回展开数组</td></tr></tbody></table><hr><h2 id="八、位运算与字符串函数">八、位运算与字符串函数</h2><hr><h2 id="九、数学与统计函数">九、数学与统计函数</h2><hr><h2 id="十、矩阵与线性代数">十、矩阵与线性代数</h2><hr><h2 id="十一、排序、条件与选择">十一、排序、条件与选择</h2><hr><h2 id="十二、字节交换、副本与试图">十二、字节交换、副本与试图</h2><hr><h2 id="十三、IO">十三、IO</h2><hr><h2 id="十四、Matplotlib绘图">十四、Matplotlib绘图</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>英语口语常用表述</title>
    <link href="http://example.com/2022/09/06/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%A1%A8%E8%BF%B0/"/>
    <id>http://example.com/2022/09/06/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD%E5%B8%B8%E7%94%A8%E8%A1%A8%E8%BF%B0/</id>
    <published>2022-09-06T04:41:01.000Z</published>
    <updated>2022-09-08T16:14:42.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="英语口语常用表述">英语口语常用表述</h2><hr><h3 id="cut-it-out">cut it out</h3><ul><li>闭嘴！省省吧！</li></ul><h3 id="easy-peasy">easy-peasy</h3><ul><li>小菜一碟！</li><li>这个peasy是为了押韵将peace将成了peasy</li></ul><h3 id="stay-strong">stay strong</h3><ul><li>坚强起来</li></ul><h3 id="fat-chance">fat chance</h3><ul><li>没戏~</li><li>不可能！希望渺茫~</li></ul><h3 id="you-known-nothing">you known nothing</h3><ul><li>你啥都不知道！</li><li>你懂个锤子</li></ul><hr><h3 id="you-look-stunning">you look stunning</h3><ul><li>你看起来美爆了！</li></ul><h3 id="fancy-meeting-you-here">fancy meeting you here</h3><ul><li>真他娘的意外！这里也能见到你啊？</li></ul><h3 id="every-dog-has-its-day">every dog has its day</h3><ul><li>人人皆有出头日</li></ul><h3 id="No-matter-how-bad-your-current-situation-is">No matter how bad your current situation is</h3><ul><li>无论你的处境多糟</li></ul><h3 id="enjoy-your-stay">enjoy your stay</h3><ul><li>希望你开心咯~</li></ul><hr><blockquote><p><strong>In summary</strong></p></blockquote><p>Juddy: Hey Petter! <strong>Fancy meeting you here</strong>! <strong>You look stunning</strong>!</p><p>Petter: <strong>Cut it out</strong>! <strong>You know nothing</strong>! I am about to lose my job!</p><p>Juddy: <strong>Stay strong</strong>! Just <strong>easy-peasy</strong>！I hope you could get out of this trouble.</p><p>Petter: I hope so. But actually, <strong>fat chance</strong>.</p><p>Juddy: <strong>No matter how bad your current situations is</strong>, <strong>every dog has its day</strong>. <strong>Enjoy your stay</strong>.</p><hr><h3 id="don’t-tell-me-what-to-do">don’t tell me what to do</h3><ul><li>你在教我做事？</li></ul><h3 id="don’t-take-it-out-on-me">don’t take it out on me</h3><ul><li>老子不背锅！</li><li>别烦我</li></ul><h3 id="don’t-tush-me">don’t tush me</h3><ul><li>别催啦！</li><li>tush: 屁股，獠牙</li><li>bush: 灌木</li></ul><h3 id="a-promise-is-a-promise">a promise is a promise</h3><ul><li>君子一言，驷马难追</li></ul><h3 id="are-you-smoking">are you smoking?</h3><ul><li>你是不是傻</li></ul><hr><h3 id="be-a-man">be a man</h3><ul><li>像个男人一样</li><li>成熟点</li></ul><h3 id="boys-will-be-boys">boys will be boys</h3><ul><li>本性难移</li><li>狗改不了吃屎</li></ul><h3 id="don’t-freak-out">don’t freak out</h3><ul><li>淡定点</li><li>freak这个词本事表示怪人，怪异的，不正常的，作动词还能表示震惊，畏惧。</li></ul><h3 id="don’t-have-a-cow">don’t have a cow</h3><ul><li>别大惊小怪</li></ul><h3 id="don’t-give-me-that-look">don’t give me that look</h3><ul><li>别用那种眼神看我</li></ul><hr><blockquote><p><strong>In summary</strong></p></blockquote><p>A: Aha, I will never go to school! <strong>A primise is a primse</strong>!</p><p>B: <strong>Are you smoking</strong>? <strong>Be a man</strong> plz.</p><p>A: <strong>Don’t freak out</strong> and <strong>don’t give me that look</strong>! You know, <strong>boys will be boys</strong>, it’s rule!</p><p>B: <strong>Are you telling me what to do</strong>?c</p><p>A: <strong>Don’t take it out on me</strong>! <strong>Don’t have a cow</strong> and <strong>Don’t tush me</strong>! It’s none of your bissness.</p><hr><h3 id="can-I-ask-you-a-favor">can I ask you a favor?</h3><ul><li>能帮我忙吗~</li></ul><h3 id="I-don’t-follow">I don’t follow</h3><ul><li>我没跟上</li><li>我没听懂</li></ul><h3 id="hear-me-out">hear me out</h3><ul><li>让我听完</li></ul><h3 id="How-is-that-possible">How is that possible?</h3><ul><li>怎么可能</li></ul><h3 id="how-dare-you">how dare you</h3><ul><li>你好大的胆子！</li></ul><hr><h3 id="how-have-you-been">how have you been</h3><ul><li>最近过得怎么样</li></ul><h3 id="I-give-up">I give up</h3><ul><li>我放弃了</li></ul><h3 id="I-kid-you-not">I kid you not</h3><ul><li>我没跟你开玩笑</li></ul><h3 id="I-never-want-to-see-you-again">I never want to see you again</h3><ul><li>我再也不想见到你</li></ul><h3 id="I-take-full-responsibility">I take full responsibility</h3><ul><li>我负全责</li></ul><hr><blockquote><p><strong>In summary</strong></p></blockquote><p>A: Fancy meeting you here! <strong>How have youo been</strong>?</p><p>B: Fine! and … <strong>Could you do me a favor</strong>?</p><p>A: …Ok, so what should I do?</p><p>B: Help me Kill that guys!</p><p>A: …Ha? Sorry <strong>I don’t follow</strong>, could you repeat?</p><p>B: <strong>Hear me out,</strong> you need just to do is stab him!</p><p>A: <strong>How dare you</strong>! I give up!</p><p>B: Hey Hey Hey, <strong>I kid you not</strong> ! I mean, this knife is only a prop!</p><p>A: Oh… You just freak me out!</p><p>A few minutes passed…</p><p>A: What? Holy the shit!!! Why did he die! <strong>How that is possible</strong>!</p><p>B: Surprise! I lied to you~</p><p>A: <strong>I never want to see you again!</strong> Get out from my range!</p><p>B: Take it easy~ <strong>I will take full responsibility</strong>~</p><hr><h3 id="It’s-been-a-long-day">It’s been a long day</h3><ul><li>真是好累的一天~</li></ul><h3 id="I’m-speechless">I’m speechless</h3><ul><li>我服了你</li><li>speechless: 说不出话</li><li>Laura was speechless with rage.</li><li>一整个无语住了</li></ul><h3 id="I-don’t-know-what-to-say">I don’t know what to say</h3><ul><li>我不知道该怎么说才好</li></ul><h3 id="Try-harder">Try harder</h3><ul><li>再努力一点</li></ul><h3 id="What-happened-to-you">What happened to you</h3><ul><li>你怎么了</li></ul><hr><h3 id="You-are-nothing">You are nothing</h3><ul><li>你是个锤子</li></ul><h3 id="I’ve-heard-so-much-about-you">I’ve heard so much about you</h3><ul><li>久仰大名！</li></ul><h3 id="Cet-out-of-my-face">Cet out of my face</h3><ul><li>从我的眼前消失！</li></ul><h3 id="knock-it-off">knock it off</h3><ul><li>住手吧！</li></ul><h3 id="keep-a-low-profile">keep a low profile</h3><ul><li>保持低调</li><li>profile : 形象，轮廓，概述</li><li>profit: 利润</li></ul><hr><blockquote><p><strong>In summary</strong></p></blockquote><p>Boss: <strong>Try harder</strong>! How can you sleep at your age!</p><p>Ally: OK…</p><p>A few hours pass…</p><p>Ally: <strong>It’s been a long day!</strong> Finally, I can have a rest~</p><p>Boss: Ah, Stay and work overtime!</p><p>Ally: oh… <strong>I’m speechless</strong>…</p><p>Ally’s bestie: Ally ! Why do you look bad?</p><p>Ally: <strong>I don’t know what to say</strong>… My boss is a vampire!</p><p>Boss: Oh Ally! How fancy I meet you here !</p><p>Ally: plz <strong>get out of my face</strong> !!!</p><p>Boss: <strong>Knock it off</strong> ! And… you are Ally’s bestie, Mrs. Lily?</p><p>Lily: Yes, <strong>I’ve heard so much about you</strong> from Alliy.</p><p>Boss: Wooow, <strong>keep a low profile</strong>, I know I’m a great Boss~</p><p>Ally &amp; Lily: <strong>You Are Nothing</strong>!</p><hr><h3 id="keep-your-voice-down">keep your voice down</h3><ul><li>小点声</li></ul><h3 id="just-browsing">just browsing</h3><ul><li>随便看看</li></ul><h3 id="lay-low">lay low</h3><ul><li>低调点</li></ul><h3 id="I-don’t-give-a-shit">I don’t give a shit</h3><ul><li>老子不在乎</li></ul><h3 id="what’s-done-is-done">what’s done is done</h3><ul><li>覆水难收</li></ul><hr><h3 id="talk-is-cheap">talk is cheap</h3><ul><li>说着容易做着难</li></ul><h3 id="take-days">take days</h3><ul><li>需要几天的时间</li></ul><h3 id="talk-to-the-hand">talk to the hand</h3><ul><li>懒得理你</li></ul><h3 id="take-care">take care</h3><ul><li>保重</li></ul><h3 id="why-the-long-face">why the long face</h3><ul><li>为什么不高兴</li></ul><hr><blockquote><p><strong>In summary</strong></p></blockquote><p>A: Hello, what do you need?</p><p>B: <strong>I just browsing</strong>.</p><p>A: OKey Sir… Oh, you are Ms. Ye? The most famous star in the earth!</p><p>B: <strong>Lay low</strong> and keep your voice down. I  don’t want too many people to know I’m here.</p><p>A: Yes Sir! (with loudly voice)</p><p>B: … <strong>Talk to the hand</strong>. I need a gun with a Hello Kitty profile.</p><p>A: I’m sorry for that, this commodity is sold out. If you want , <strong>take days</strong> plz.</p><p>B: <strong>I don’t give a shit.</strong> I want to see it right away.</p><p>A: <strong>Talk is cheap</strong> sir! <strong>What’s done is done!</strong> <strong>Why the long face</strong> in you?</p><p>B: …<strong>Take care</strong> and say hello to the god.</p><hr><p><strong>一些套话</strong></p><p><strong>1. I really appreciate your making time in your schedules to attend today.</strong></p><p>我非常感谢你们今天抽空来参加这个会议。</p><p><strong>2. Thank you for…</strong></p><p>感谢您……</p><p><strong>Thank you for giving me this opportunity to speak about myself in this special occasion.</strong></p><p>感谢您给我这个机会在这个特别的场合介绍我自己。</p><p><strong>3. It is my honor…</strong></p><p>我很荣幸……</p><p><strong>It is my honor to introduce the president of our company, Mr. Jones.</strong></p><p>我很荣幸介绍我们公司总裁琼斯先生。</p><p><strong>4. On behalf of…</strong></p><p>代表……</p><p><strong>On behalf of our entire company, I want to thank you for inviting us to such an enjoyable Christmas party.</strong></p><p>我代表全公司，我想感谢您邀请我们参加这样一个令人愉快的圣诞晚会</p><p><strong>5. I’d be happy to…</strong></p><p>我很高兴……</p><p><strong>I’d be happy to tell you about my experiences.</strong></p><p>我很高兴和你们分享我的经验。</p><p><strong>6. What I am going to talk about today is…</strong></p><p>今天我想讲的是……</p><p><strong>What I am going to talk about today is the energy conservation issue.</strong></p><p>今天我想讲的是节能问题。</p><p><strong>7. How can we…?</strong></p><p>我们怎样才能……？</p><p><strong>How can we work more efficiently?</strong></p><p>我们怎样才能工作得更有效率呢？</p><p><strong>8.Thank you from the bottom of my heart for…</strong></p><p>我从心底感谢……</p><p><strong>Thank you from the bottom of my heart for giving me this chance to speak to you today.</strong></p><p>我从心底感谢你们今天给了解这个机会在你们前面讲话。</p><p><strong>9. So long as…</strong></p><p>只要……</p><p><strong>So long as we work together we can achieve great results.</strong></p><p>只要我们一起努力，我们就能取得巨大的成就。</p><p><strong>10. Working together…</strong></p><p>一起努力…</p><p><strong>Working together, we can make the future better.</strong></p><p>一起努力，我们将把未来变得更加美好。</p><p><strong>11. I should like to pay tribute to…</strong></p><p>我想对……表示敬意</p><p><strong>I should like to pay tribute to the dedication of all the professionals who worked on this project.</strong></p><p>我想对参与这个项目的所有专家的奉献表示敬意。</p><p><strong>12. I want to leave you with…</strong></p><p>我想留给你们…</p><p><strong>I want to leave you with one final word to remember, “teamwork”.</strong></p><p>我想让你们记住最后一个词：“团队合作”</p><p><strong>13. We sincerely hope…</strong></p><p>我们衷心希望…</p><p><strong>We sincerely hope that you will have a wonderful time tonight.</strong></p><p>我们衷心希望你们今晚过的开心。</p><p><strong>14. I look forward to…</strong></p><p>我期待……</p><p><strong>I look forward to seeing you again.</strong></p><p>我期待着再次见到你们。</p><p><strong>15. Best wishes for…</strong></p><p>对……致以良好的祝愿</p><p><strong>Best wishes for a very successful exhibition!</strong></p><p>对展会的成功致以美好的祝愿。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;英语口语常用表述&quot;&gt;英语口语常用表述&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&quot;cut-it-out&quot;&gt;cut it out&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;闭嘴！省省吧！&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;easy-peasy&quot;&gt;easy-peasy&lt;/h3&gt;
&lt;ul</summary>
      
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="口语" scheme="http://example.com/tags/%E5%8F%A3%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 309周赛&amp;86双赛</title>
    <link href="http://example.com/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&amp;86%E5%8F%8C%E8%B5%9B/"/>
    <id>http://example.com/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&amp;86%E5%8F%8C%E8%B5%9B/</id>
    <published>2022-09-04T15:43:40.565Z</published>
    <updated>2022-09-06T09:53:48.335Z</updated>
    
    <content type="html"><![CDATA[<h1>309周赛&amp;86双赛</h1><hr><h2 id="前言">前言</h2><p>最近对自己太放纵了，属实是有点不太行。</p><p>接下来要上强度了！</p><hr><h2 id="309-是miHoYo冠名周赛">309 是miHoYo冠名周赛</h2><hr><h2 id="T1">T1</h2><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220906175248073.png" alt="image-20220906175248073" style="zoom:50%;"><p><strong>思路</strong></p><p>T1又是很简单的数组题，我们只需要判断两个元素出现位置中间隔的元素是否与给定的距离表相等即可。</p><p>而且哦，这种位置的选择，我们可以通过<code>hash</code>表的方式很容易的完成。尤其是前后位次关系。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkDistances</span>(<span class="params">self, s: <span class="built_in">str</span>, distance</span>):</span><br><span class="line">        hashmap=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            <span class="comment"># 记录第一次出现的位置</span></span><br><span class="line">            <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> hashmap.keys():</span><br><span class="line">                hashmap[j]=i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 判断第二次与第一次的差值是否等于距离表</span></span><br><span class="line">                val=i-hashmap[j]</span><br><span class="line">                <span class="keyword">if</span> val-<span class="number">1</span>!=distance[<span class="built_in">ord</span>(j)-<span class="built_in">ord</span>(<span class="string">&quot;a&quot;</span>)]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>这题是不是很像两数之和？<br>那我们干脆一起把<code>86双</code>的<code>T1</code>一起讲了吧</p><p><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220906175257692.png" alt="image-20220906175257692"></p><p>呐，这鬼题也是，判断连续的，我们只需要看这个值是否被记录过就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findSubarrays</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="comment"># 要tm连续啊</span></span><br><span class="line">        <span class="comment"># 逆天</span></span><br><span class="line">        hashmap=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)-<span class="number">1</span>):</span><br><span class="line">            val=nums[i]+nums[i+<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> val <span class="keyword">in</span> hashmap.keys():</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            hashmap[val]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><hr><h2 id="T2">T2</h2><p><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220906175309036.png" alt="image-20220906175309036"></p><p><strong>思路</strong></p><p>关键词：方法数！想到了什么？爬楼梯？斐波那契数列？没错，这种方法数，一般都有递推公式。这题也不例外。考虑两个方向，于是每次dp就能从左和从右。由于负数轴需要映射，为了简化操作，我们可以不用数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfWays</span>(<span class="params">self, startPos: <span class="built_in">int</span>, endPos: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD = <span class="number">10</span> ** <span class="number">9</span> + <span class="number">7</span></span><br><span class="line"><span class="meta">        @cache</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x: <span class="built_in">int</span>, left: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(x - endPos) &gt; left: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> left == <span class="number">0</span>: <span class="keyword">return</span> <span class="number">1</span>  <span class="comment"># 成功到达终点，算一种方案</span></span><br><span class="line">            <span class="keyword">return</span> (f(x - <span class="number">1</span>, left - <span class="number">1</span>) + f(x + <span class="number">1</span>, left - <span class="number">1</span>)) % MOD</span><br><span class="line">        <span class="keyword">return</span> f(startPos, k)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>亦或是采用BFS进行广度搜索，得到所有可能的结果(相当于遍历，核心与DP相同)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MOD = <span class="number">10</span>**<span class="number">9</span> + <span class="number">7</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfWays</span>(<span class="params">self, startPos: <span class="built_in">int</span>, endPos: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># BFS模拟全局搜索</span></span><br><span class="line">        pre = defaultdict()</span><br><span class="line">        pre[startPos] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> k:</span><br><span class="line">            nex = defaultdict()</span><br><span class="line">            <span class="keyword">for</span> pos <span class="keyword">in</span> pre:</span><br><span class="line">                <span class="comment"># 每次都会更新下一次的方向</span></span><br><span class="line">                <span class="comment"># 并且都会进行一个累加，表示重新走过</span></span><br><span class="line">                <span class="comment"># 更新往左与往右的方案数</span></span><br><span class="line">                nex[pos + <span class="number">1</span>] += pre[pos]</span><br><span class="line">                nex[pos - <span class="number">1</span>] += pre[pos]</span><br><span class="line">            <span class="keyword">for</span> pos <span class="keyword">in</span> nex:</span><br><span class="line">                nex[pos] %= MOD</span><br><span class="line">            pre = nex</span><br><span class="line">            k -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> pre[endPos] % MOD</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解法二：数学！</p><p>正着走:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，负着走<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>−</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">K-X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p><p>我们有:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mo stretchy="false">(</mo><mi>K</mi><mo>−</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>D</mi><mspace linebreak="newline"></mspace><mi>X</mi><mo>=</mo><mfrac><mrow><mi>D</mi><mo>+</mo><mi>K</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">X+(-(K-X))=D\\X=\frac{D+K}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>于是，转换为求解：从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>中取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>个正数。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>C</mi><mi>K</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">(</mo><mi>D</mi><mo>+</mo><mi>K</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">C^{1/2(D+K)}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/2</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>那，关于Python如何求组合数，其实有一个内置函数<code>comb</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfWays</span>(<span class="params">self, startPos: <span class="built_in">int</span>, endPos: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD=<span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span></span><br><span class="line">        d=<span class="built_in">abs</span>(endPos-startPos)</span><br><span class="line">        <span class="keyword">if</span> (k-<span class="built_in">abs</span>(endPos-startPos))&amp;<span class="number">1</span> <span class="keyword">or</span> k&lt;<span class="built_in">abs</span>(endPos-startPos):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> comb(k,(d+k)//<span class="number">2</span>)%MOD</span><br></pre></td></tr></table></figure><p>不用Comb的话，我们可以这样写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">comb</span>(<span class="params">m,n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> m&gt;n <span class="keyword">or</span> <span class="built_in">type</span>(m)!=<span class="built_in">int</span> <span class="keyword">or</span> <span class="built_in">type</span>(n)!=<span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 必须是整数且满足大小关系</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rank(n)//(rank(m)*rank(n-m))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rank</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">0</span> <span class="keyword">or</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    ans=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">        ans*=i</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(ans)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfWays</span>(<span class="params">self, startPos: <span class="built_in">int</span>, endPos: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD=<span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span></span><br><span class="line">        d=<span class="built_in">abs</span>(endPos-startPos)</span><br><span class="line">        <span class="keyword">if</span> (k-<span class="built_in">abs</span>(endPos-startPos))&amp;<span class="number">1</span> <span class="keyword">or</span> k&lt;<span class="built_in">abs</span>(endPos-startPos):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> comb(k,(d+k)//<span class="number">2</span>)%MOD</span><br></pre></td></tr></table></figure><hr><h3 id="T3">T3</h3><p><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220906175316163.png" alt="image-20220906175316163"></p><p><strong>思路</strong></p><p>位运算+双指针优化</p><p>其实看到这个连续就应该想到用双指针了。</p><p>当然，我的解法会遍历左右指针所有值，导致复杂度为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">nm</span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestNiceSubarray</span>(<span class="params">self, nums</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 滑动窗口</span></span><br><span class="line">        left=right=<span class="number">0</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        n=<span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">while</span> right&lt;n:</span><br><span class="line">            i=breakPoint=left</span><br><span class="line">            change=<span class="literal">False</span></span><br><span class="line">            <span class="keyword">while</span> i&lt;right:</span><br><span class="line">                <span class="keyword">if</span> nums[right]&amp;nums[i]!=<span class="number">0</span>:</span><br><span class="line">                    <span class="comment"># 只要是有一个够不成了</span></span><br><span class="line">                    <span class="comment"># 我们从构不成的位置重新构建子串</span></span><br><span class="line">                    <span class="comment"># 首先的尝试就是跳过</span></span><br><span class="line">                    breakPoint=i</span><br><span class="line">                    change=<span class="literal">True</span></span><br><span class="line">                    <span class="comment"># 子串肯定比原串小</span></span><br><span class="line">                    <span class="comment"># 所以不需要考虑，下次的截断点就是bp+1</span></span><br><span class="line">                i+=<span class="number">1</span></span><br><span class="line">                <span class="comment"># 加入</span></span><br><span class="line">            left=breakPoint+<span class="number">1</span> <span class="keyword">if</span> change <span class="keyword">or</span> breakPoint!=left <span class="keyword">else</span> left</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,<span class="built_in">len</span>(nums[left:right+<span class="number">1</span>]))</span><br><span class="line">            right+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用位运算的话，复杂度上其实也差不多啦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestNiceSubarray</span>(<span class="params">self, nums</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 滑动窗口</span></span><br><span class="line">        left=right=<span class="number">0</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        n=<span class="built_in">len</span>(nums)</span><br><span class="line">        or_=<span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> right&lt;n:</span><br><span class="line">            <span class="keyword">while</span> or_&amp;nums[right]:</span><br><span class="line">                or_^=nums[left]</span><br><span class="line">                left+=<span class="number">1</span></span><br><span class="line">                <span class="comment"># 加入</span></span><br><span class="line">            or_|=nums[right]</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,right-left+<span class="number">1</span>)</span><br><span class="line">            right+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p>当然，最后写的漂亮点，就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestNiceSubarray</span>(<span class="params">self, nums</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans=left=or_=<span class="number">0</span></span><br><span class="line">        <span class="comment"># or_用来存放运算结果</span></span><br><span class="line">        <span class="comment"># 加入：or_| x</span></span><br><span class="line">        <span class="comment"># 剔除: or_^ x</span></span><br><span class="line">        <span class="keyword">for</span> right,x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">while</span> or_&amp;x:</span><br><span class="line">                <span class="comment"># 此时需要剔除了</span></span><br><span class="line">                or_^=nums[left]</span><br><span class="line">                left+=<span class="number">1</span></span><br><span class="line">            or_|=x</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,right-left+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><hr><h3 id="T4">T4</h3><p><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220906175321646.png" alt="image-20220906175321646"></p><p><strong>思路</strong></p><p>初见这个题的时候，想到的应该是贪心，谁有空就给谁，谁的时间最短谁就空闲。</p><p>于是我写了个不能AC的解:</p><p>超！！！！我这个解随便改改逻辑就AC了！！！！！！</p><p>超！！！！</p><p>我也做出T4了！！！！</p><p>这是离AK最近的一次！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mostBooked</span>(<span class="params">self, n: <span class="built_in">int</span>, meetings</span>):</span><br><span class="line">        st=[[] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        val=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        n=<span class="built_in">len</span>(meetings)</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        now=<span class="number">0</span></span><br><span class="line">        meetings.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>])</span><br><span class="line">        change=[<span class="literal">None</span>,<span class="literal">None</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i&lt;n:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> change[<span class="number">0</span>]!=<span class="literal">None</span>:</span><br><span class="line">                s,e=change</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                s, e = meetings[i]</span><br><span class="line">                <span class="keyword">if</span> now&lt;=s:</span><br><span class="line">                    <span class="comment"># 提前</span></span><br><span class="line">                    now=s</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    e+=now-s</span><br><span class="line">                    s=now</span><br><span class="line">                    </span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">            <span class="comment"># 时间到了</span></span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> st:</span><br><span class="line">                <span class="keyword">if</span> _ <span class="keyword">and</span> _[<span class="number">0</span>]&lt;=now:</span><br><span class="line">                    _.pop()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 有无空闲</span></span><br><span class="line">            <span class="keyword">for</span> l,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(st):</span><br><span class="line">                <span class="keyword">if</span> j==[]:</span><br><span class="line">                    val[l]+=<span class="number">1</span></span><br><span class="line">                    j.append(e)</span><br><span class="line">                    now=s</span><br><span class="line">                    i+=<span class="number">1</span></span><br><span class="line">                    change[<span class="number">0</span>]=<span class="literal">None</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                now=<span class="built_in">min</span>([i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> st])</span><br><span class="line">                now=<span class="built_in">max</span>(now,s)</span><br><span class="line">                change=[now,now+(e-s)]</span><br><span class="line"></span><br><span class="line">        check=val[<span class="number">0</span>]</span><br><span class="line">        idx=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(val):</span><br><span class="line">            <span class="keyword">if</span> j&gt;check:</span><br><span class="line">                check=j</span><br><span class="line">                idx=i</span><br><span class="line">        <span class="keyword">return</span> idx</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>两个堆来回倒实现任务队列！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> heapq <span class="keyword">import</span> heappop</span><br><span class="line"><span class="keyword">from</span> heapq <span class="keyword">import</span> heappush</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mostBooked</span>(<span class="params">self, n: <span class="built_in">int</span>, meetings</span>):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 当会议室未占用，会有限提供资源给开始时间早的。</span></span><br><span class="line">        <span class="comment"># 两个堆来模拟，一个表示可用的会议室，另一个表示正在开会的会议室</span></span><br><span class="line"></span><br><span class="line">        cnt=[<span class="number">0</span>]*n</span><br><span class="line">        idle=<span class="built_in">list</span>(<span class="built_in">range</span>(n)) <span class="comment"># 可用的会议室</span></span><br><span class="line">        using=[]<span class="comment"># (结束时间，会议室编号)</span></span><br><span class="line">        meetings.sort() <span class="comment"># 必要的排序</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> st,end <span class="keyword">in</span> meetings:</span><br><span class="line">            <span class="comment"># 在st时刻前正在开会的会议室，把结束的弹出来</span></span><br><span class="line">            <span class="keyword">while</span> using <span class="keyword">and</span> using[<span class="number">0</span>][<span class="number">0</span>]&lt;=st:</span><br><span class="line">                <span class="comment"># 首先将使用栈中的内容弹出来</span></span><br><span class="line">                <span class="comment"># 并且将结束时间放入idle中，表示可用任务队列</span></span><br><span class="line">                heappush(idle,heappop(using)[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(idle)==<span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 如果当前没有可用的</span></span><br><span class="line">                <span class="comment"># 需要等到最近一个结束</span></span><br><span class="line">                e,i=heappop(using)</span><br><span class="line">                <span class="comment"># 补上时间</span></span><br><span class="line">                end+=e-st</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 将当前空闲的弹出去(其实也是索引最小值)</span></span><br><span class="line">                <span class="comment"># 将最短时间的出堆</span></span><br><span class="line">                i=heappop(idle)</span><br><span class="line"></span><br><span class="line">            cnt[i]+=<span class="number">1</span></span><br><span class="line">            <span class="comment"># 将当前结束时间和索引加入最小堆中</span></span><br><span class="line">            <span class="comment"># 每次取都是最小(最近一个结束的)</span></span><br><span class="line">            heappush(using,(end,i))</span><br><span class="line"></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i,c <span class="keyword">in</span> <span class="built_in">enumerate</span>(cnt):</span><br><span class="line">            <span class="keyword">if</span> c&gt;cnt[ans]:</span><br><span class="line">                ans=i</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p>O(n+mlogn+mlogn)</p><p>建堆+排+插入堆</p><hr><h1>86 双赛</h1><blockquote><p>T3和T4很有意思</p></blockquote><h2 id="T2-v2">T2</h2><p><strong>带余除法</strong></p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>&gt;</mo><mn>4</mn><mo separator="true">,</mo><mn>2</mn><mo>&lt;</mo><mi>n</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">n&gt;4,2&lt;n-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>，下面的表达式一定成立</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><mi>q</mi><mo>∗</mo><mi>b</mi><mo>+</mo><mi>r</mi><mo separator="true">,</mo><mn>0</mn><mo>&lt;</mo><mo>=</mo><mi>r</mi><mo>&lt;</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">n=q*b+r,0&lt;=r&lt;b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p><p>这题完全就是脑筋急转弯<br>告诉你了，这玩意在<code>n-2</code>进制上必定为<code>12</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><hr><h2 id="T3-v2">T3</h2><p><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220906175340017.png" alt="image-20220906175340017"></p><p>这题不难看出是位运算，难得是如何进行。</p><p>不是没有想过枚举，但是会不会有一种更加高效的手段拿来实现这个算法？很可惜，似乎是没有的。</p><p>所幸的是，位运算枚举还是挺快的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maximumRows</span>(<span class="params">self, mat: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], cols: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        位运算</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        枚举所有选择情况</span></span><br><span class="line"><span class="string">        实际上，二进制数就能表征所有的选择情况</span></span><br><span class="line"><span class="string">        二进制数还能用来表征更高位的数据</span></span><br><span class="line"><span class="string">        譬如之前的毒药和小鼠</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        mask=[<span class="built_in">sum</span>(v&lt;&lt;j <span class="keyword">for</span> j,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(row)) <span class="keyword">for</span> row <span class="keyword">in</span> mat]</span><br><span class="line">        <span class="comment"># 刚好就能够表示0-1覆盖情况</span></span><br><span class="line">        <span class="comment"># 例如：5-&gt; 101</span></span><br><span class="line">        <span class="comment"># 6-&gt;110</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">set</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>&lt;&lt;<span class="built_in">len</span>(mat[<span class="number">0</span>])):</span><br><span class="line">            <span class="comment"># 这样就能表征所有的情况</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">set</span>.bit_count()!=cols:</span><br><span class="line">                <span class="comment"># 剪枝</span></span><br><span class="line">                <span class="comment"># 不满足列的情况就丢弃</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 某一行 and 选择列如果还等于他自己</span></span><br><span class="line">            <span class="comment"># 那就说明可以覆盖</span></span><br><span class="line">            <span class="comment"># 1的时候恰好是1 0的时候不用管他</span></span><br><span class="line">            cnt=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> mask:</span><br><span class="line">                <span class="keyword">if</span> row &amp;<span class="built_in">set</span>==row:</span><br><span class="line">                    cnt+=<span class="number">1</span></span><br><span class="line">            ans=<span class="built_in">max</span>(ans,cnt)</span><br><span class="line">        <span class="keyword">return</span> ans </span><br><span class="line"></span><br><span class="line">            </span><br></pre></td></tr></table></figure><h2 id="T4-v2">T4</h2><img src="/2022/09/04/%E3%80%90LeetCode%E3%80%91309%E5%91%A8%E8%B5%9B&86%E5%8F%8C%E8%B5%9B/image-20220905204610760.png" alt="image-20220905204610760" style="zoom:50%;"><p>这题的关键字：<strong>连续consecutive</strong></p><p>所以，双指针搭建滑动窗口不失为一种好的选择。</p><p>当然，这类似背包问题，是存在一个限制条件的。</p><p>我们可以用单调队列来处理这种情况，通过维护单调队列，及时清理无用数据，保证队首是最大元素的同时，考虑是否加入和剔除元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maximumRobots</span>(<span class="params">self, chargeTimes: <span class="type">List</span>[<span class="built_in">int</span>], runningCosts: <span class="type">List</span>[<span class="built_in">int</span>], budget: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"></span><br><span class="line">        ans=s=left=<span class="number">0</span></span><br><span class="line">        q=deque()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> right,(t,c) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(chargeTimes,runningCosts)):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 处理右端点</span></span><br><span class="line">            <span class="keyword">while</span> q <span class="keyword">and</span> t&gt;=chargeTimes[q[-<span class="number">1</span>]]:</span><br><span class="line">                <span class="comment"># 只要当前的时间大于队列的时间</span></span><br><span class="line">                <span class="comment"># 就要维护队列的单调性</span></span><br><span class="line">                q.pop()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 将这个端点加入</span></span><br><span class="line">            q.append(right)</span><br><span class="line">            s+=c <span class="comment"># 总的cost</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 处理左端点</span></span><br><span class="line">            <span class="keyword">while</span> q <span class="keyword">and</span> chargeTimes[q[<span class="number">0</span>]]+(right-left+<span class="number">1</span>)*s&gt;budget:</span><br><span class="line">                <span class="comment"># 太多了！ 最大的滚出去！</span></span><br><span class="line">                <span class="keyword">if</span> q[<span class="number">0</span>]==left:</span><br><span class="line">                    q.popleft()</span><br><span class="line">                s-=runningCosts[left]</span><br><span class="line">                <span class="comment"># 一直找啊找直到找到最大的那个</span></span><br><span class="line">                left+=<span class="number">1</span></span><br><span class="line">            <span class="comment"># 这样 超出区间的一个就是我们的一个连续的子序列了</span></span><br><span class="line">            <span class="comment"># 这样的方式能保证：</span></span><br><span class="line">            <span class="comment"># 如果后面加进来的值比较大</span></span><br><span class="line">            <span class="comment"># 我们可以直接剔除掉串</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 如果后面加进来的值比较小</span></span><br><span class="line">            <span class="comment"># 我们就无须对其进行维护</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 举个栗子</span></span><br><span class="line">            <span class="comment"># tar: 10</span></span><br><span class="line">            <span class="comment"># List: 4 3 1 2</span></span><br><span class="line">            <span class="comment"># q:4 3 1</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 插入2</span></span><br><span class="line">            <span class="comment"># 此时q: 4 3 2</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 发现超了</span></span><br><span class="line">            <span class="comment"># 我们就去掉最大的</span></span><br><span class="line">            <span class="comment"># 剩下的q: 3 2</span></span><br><span class="line">            <span class="comment"># 重新开始一段</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># tar:10</span></span><br><span class="line">            <span class="comment"># List: 1 3 4 2</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 插入2时:</span></span><br><span class="line">            <span class="comment"># q: 4</span></span><br><span class="line">            <span class="comment"># 插入2一定会炸</span></span><br><span class="line">            <span class="comment"># 那么我们就从4的位置开始新的子串</span></span><br><span class="line">            <span class="comment"># 直接定位到了最大的位置</span></span><br><span class="line">            <span class="comment"># 因为当x上溢</span></span><br><span class="line">            <span class="comment"># x+1一定上溢</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 而且，单调队列维护的是坐标索引</span></span><br><span class="line">            <span class="comment"># 方便我们定位</span></span><br><span class="line">            ans=<span class="built_in">max</span>(ans,right-left+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p>我们可以反思一下，什么时候可以用单调队列？</p><ul><li>我们每次不符合条件的弹出都是最值</li><li>维护一个最值，使其满足限制条件</li></ul><p>怎么使用单调队列？</p><ul><li>及时弹出无用元素</li></ul><p>在滑动窗口维护最值问题，可以考虑单调队列：</p><ul><li>判断队列单调性，不满足时，队尾出队</li><li>增大窗口，队尾入队，更新统计值</li><li>判断是否满足条件，不满足则缩小窗口，队首出队</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">正常的周赛罢了</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>CFOP</title>
    <link href="http://example.com/2022/09/04/%E3%80%90cfop%E3%80%91%E9%AD%94%E6%96%B9/"/>
    <id>http://example.com/2022/09/04/%E3%80%90cfop%E3%80%91%E9%AD%94%E6%96%B9/</id>
    <published>2022-09-04T10:26:46.425Z</published>
    <updated>2022-09-04T10:28:53.578Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CFOP-F2L-F2L1">CFOP-F2L-F2L1</h3><p>(R U’ R’ U) y’ (R’ U2 R U’ U’) (R’ U R)</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">CFOP公式</summary>
    
    
    
    <category term="拾枝杂谈" scheme="http://example.com/categories/%E6%8B%BE%E6%9E%9D%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="魔方" scheme="http://example.com/tags/%E9%AD%94%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>脑科学の一些无用小知识</title>
    <link href="http://example.com/2022/09/04/%E3%80%90%E8%84%91%E7%A7%91%E5%AD%A6%E3%80%91%E8%84%91%E7%A7%91%E5%AD%A6%E3%81%AE%E4%B8%80%E4%BA%9B%E6%97%A0%E7%94%A8%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2022/09/04/%E3%80%90%E8%84%91%E7%A7%91%E5%AD%A6%E3%80%91%E8%84%91%E7%A7%91%E5%AD%A6%E3%81%AE%E4%B8%80%E4%BA%9B%E6%97%A0%E7%94%A8%E5%B0%8F%E7%9F%A5%E8%AF%86/</id>
    <published>2022-09-04T09:27:51.440Z</published>
    <updated>2022-09-04T10:13:14.612Z</updated>
    
    <content type="html"><![CDATA[<h1>脑科学の一些无用小知识</h1><hr><p>这篇文章的问世来源于<code>9/4</code>日的一些小遐想。</p><p>我感觉最近的大脑越来越不够用了。记忆东西也根本记不下来。于是乎，想去找到那么一点点的慰藉🌮 。</p><hr><h2 id="1️⃣-脑科学提升智力的方法">1️⃣ 脑科学提升智力的方法</h2><p>来自：<a href="https://www.bilibili.com/video/BV1PP4y157d5?spm_id_from=333.880.my_history.page.click&amp;vd_source=b6ddb37b0dc1af8da34b699b1daf8a16">学不会？做题做不出来？脑科学最强提升智力的方法！</a></p><p>视频中，up主根据音乐大佬的脑子和案例(尤其是莫扎特的训练方式)，得到了对于普通人来说，天赋一词并不存在。</p><p>而智商是可以通过<code>后天训练提升</code>的。关键在于<code>记忆</code>!</p><ul><li>单纯的拥有记忆并没有什么用。重要的是经常运用这些信息，来加强神经通路。</li><li>学习任何东西最好可以尽可能的调用更多的感受器。</li><li>尽量带有情绪进行学习。</li><li>尽可能接触不同事物。</li></ul><hr><h2 id="2️⃣-14种超简易的脑力增强法！一星期变聪明！">2️⃣ 14种超简易的脑力增强法！一星期变聪明！</h2><p>来自：<a href="https://www.bilibili.com/video/BV1U4411G7YP/?spm_id_from=333.788.recommend_more_video.-1&amp;vd_source=b6ddb37b0dc1af8da34b699b1daf8a16">14种超简易的脑力增强法！一星期变聪明！</a></p><p>视频直接提出了几种记忆力训练方法</p><ul><li>画一张地图</li><li>远离电子设备，多用纸笔</li><li>心酸</li><li>刺激味蕾</li><li>睡前回忆</li><li>参加新运动</li><li>参加手眼协调的活动</li><li>记电话号码</li><li>提高反应速度<ul><li>预览</li><li>问题</li><li>重读</li><li>研究</li><li>测试</li></ul></li><li>出声读书</li><li>保留脑力</li><li>总结重点</li></ul><hr><h2 id="3️⃣-熬夜的危害">3️⃣ 熬夜的危害</h2><p>来自：</p><p>TED演讲：<a href="https://www.bilibili.com/video/BV1qx411d7XW/?spm_id_from=333.788.recommend_more_video.6&amp;vd_source=b6ddb37b0dc1af8da34b699b1daf8a16">睡眠到底有多重要，看完不敢熬夜了！</a></p><ul><li>影响生殖激素分泌，显老且生殖能力变差</li><li>影响记忆力和学习能力，比睡眠充足的人少<code>40%</code>~</li><li>影响心脑血管系统jis</li><li>影响免疫力和DNA活力，免疫力低<code>70%</code>！</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">一些些从各类平台上收集来的小内容~</summary>
    
    
    
    <category term="拾枝杂谈" scheme="http://example.com/categories/%E6%8B%BE%E6%9E%9D%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="脑科学" scheme="http://example.com/tags/%E8%84%91%E7%A7%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>【海洋遥感】第一节课</title>
    <link href="http://example.com/2022/09/02/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91Unname/"/>
    <id>http://example.com/2022/09/02/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91Unname/</id>
    <published>2022-09-02T10:04:37.427Z</published>
    <updated>2022-09-07T12:03:06.475Z</updated>
    
    <content type="html"><![CDATA[<h1>海洋遥感</h1><h1>第一章</h1><hr><h2 id="一、海洋遥感的意义">一、海洋遥感的意义</h2><p>1️⃣ 理解海洋及地球</p><p>2️⃣ 利用海洋和地球</p><ul><li>海洋是人类最大的资源宝库，是全球生命支持系统的基本组成部分。</li><li>海洋资源的重要性促使人们采用各类手段对其进行调查研究。</li></ul><p><strong>痛点🤕</strong></p><ul><li>传统海洋调查依赖于调查船沿设定航线设置的稀疏取样，虽然定位测量准确，但在规模、范围和频度上受限制。</li><li>海洋环境的<strong>进入性</strong>和<strong>可通达性</strong>较差</li><li>近海和海岸环境复杂多变，难以进行多变量同步控制观测</li><li>海岸环境变化周期长、信息量大，难以取得理想的可控制数据，在实时处理上也有着较大的困难。</li></ul><hr><p>海洋遥感具有大范围、实时同步、全天时、全天候多波段成像技术的优势可以快速地探测海洋表面各物理量的时空变化归规律。</p><p><strong>重要性</strong></p><ul><li>海洋科学或遥感科学的交叉学科</li><li>为海洋观测和研究提供了一个崭新的数据集，并开辟了新的考虑问题的视角</li><li>多传感器资料可推动海洋科学交叉学科研究的发展</li></ul><h2 id="二、海洋遥感的概念">二、海洋遥感的概念</h2><p><strong>基本概念</strong></p><p><strong>海洋遥感</strong> (Ocean Remote Sensing) 指以海洋及海岸带作为监测、研究对象，利用电磁波与大气和海洋的相互作用原理来观测和研究海洋的遥感技术。</p><p><strong>整体特点</strong></p><ul><li>不受地表、海面、天气和人为条件的性质，可以探测地理位置偏远、环境条件恶劣等不能直接进入的海区。</li><li>宏观特性可进行大面积同步测量，能够进行半球或全球探测。</li><li>可动态、长期的、周期性的对海洋现象进行监测</li><li>具有实时的或准实时的特征</li><li>多个探测器相配套</li><li>很显然，海洋遥感能够在不破坏当地环境下进行大面积的客观测量(没有人为干涉！)</li></ul><p><strong>具体特点</strong></p><blockquote><p>传感器设计方面</p></blockquote><p>光学传感器，带宽较窄，IFOV较大。微波波段应用较多(云层覆盖较多，微波数据比可见光和热红外能够取得的效果更好)。</p><blockquote><p>传感器定标与数据处理应用方面</p></blockquote><p>需要调查船、浮标、潜水器等仪器实测资料的支持。</p><blockquote><p>数据预处理方面</p></blockquote><p>更需要消除大气的干扰</p><blockquote><p>数据应用方面</p></blockquote><p>适用于海洋数值模型的检验与改进</p><p><strong>卫星类别</strong></p><p><strong>按传感方式</strong></p><ul><li>被动遥感</li><li>主动遥感</li></ul><p><strong>按使用目的</strong></p><ul><li>海洋水色卫星<ul><li>主要探测海洋水色要素，如叶绿素浓度、悬浮泥沙含量、有色可溶有机物等，也可以用来获得浅海水下地形、海冰、海水污染及海流等游泳信息价值</li></ul></li><li>海洋地形卫星<ul><li>主要用于探测海表面拓扑，即海平面高度的空间分布，此外，还可以探测海水、有效波高、海面风速和海流等</li></ul></li><li>海洋动力环境卫星<ul><li>用于探测海洋动力环境要素，如海面风场、浪场、海冰等。</li></ul></li></ul><hr><p><strong>雷达高度计</strong></p><ul><li>用于测量海面高度、有效波高及风速等海洋基本要素</li><li>无线电系统射电反射比较时间差</li></ul><p><strong>微波散射计</strong></p><ul><li>用于全球风场观测</li><li>通过测量风引起的粗糙海面对微博的后向散射特征来推算风场</li></ul><p><strong>微波辐射计</strong></p><ul><li>主要用于获取全球海洋温度、海面风场、大气水蒸气含量、云中水含量、海冰和降雨量</li><li>微波辐射计接收辐亮度(亮温)，等同于辐射的黑体的温度。</li><li>辐亮度F=(海表面温度、盐度，海面粗糙度，波浪破碎产生的白冠和气泡)</li></ul><h2 id="三、海洋遥感的发展历程">三、海洋遥感的发展历程</h2><h3 id="🚂-四个主要阶段">🚂 四个主要阶段</h3><p><strong>起步阶段</strong></p><p><strong>探索阶段</strong></p><p>气象卫星和陆地卫星的探测器波段设置不同，还要遥感需要更多的频段和更高的精度。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1978</mn></mrow><annotation encoding="application/x-tex">1978</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1978</span></span></span></span> NASA发射了三科海洋遥感卫星。<code>SeasatA</code>是第一颗海洋试验卫星，但由于电源故障，仅运行了<code>108</code>天</p><p>我国的海洋卫星</p><ul><li>1988 FY-1A 第一颗海洋卫星</li><li>2002 HY-1A 第一颗海洋水色卫星</li><li>2008 FY-3 极轨卫星</li></ul><h2 id="四、海洋遥感的研究内容">四、海洋遥感的研究内容</h2><ul><li>物理海洋学遥感</li><li>生物海洋学和化学海洋学遥感</li><li>海冰监测</li><li>海洋污染监测</li><li>目标识别</li></ul><p>1️⃣ 海表温度遥感</p><p>主要采用热和红外波段和微波波段的信息进行海表面温度的遥感反演。</p><p>2️⃣ 海水浑浊度</p><p>3️⃣ 海洋污染监测</p><hr><h2 id="五、相关数据、资料获取">五、相关数据、资料获取</h2><hr><h2 id="六、主流的海洋遥感大学和机构">六、主流的海洋遥感大学和机构</h2><hr><h1>第二章  海洋遥感原理与基础</h1><h2 id="一、与海洋遥感相关的基本概念">一、与海洋遥感相关的基本概念</h2><h3 id="海洋学上的专有名词">海洋学上的专有名词</h3><p><strong>海面状况</strong>： 海面粗糙度状况，与最大的海面波动高度有关。</p><p><strong>深水波</strong>： 水深大于波长<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span></span></span></span>的波动</p><p><strong>浅水波</strong>： 水深小于波长<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span></span></span></span>的波动(长波)</p><p><strong>波高H</strong>： 从波峰到波谷之间的铅直距离</p><p><strong>有效波高<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow></msub></mrow><annotation encoding="application/x-tex">H_{1/3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0385em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span></strong>： 博陈列</p><p><strong>反射率</strong> 传感器发出电磁波后，在原位置上能接收到的电磁辐射功率与发出功率之比(盆子洒豆子，接到多少豆子)</p><p><strong>反照率</strong> 被反射的电磁辐射的总功率与发出功率之比</p><p><strong>表观反射率</strong> 大气顶层的反射率，辐射定标的结果之一</p><p><strong>均方根波高<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">h_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong></p><h2 id="二、电磁波与海水相互作用机制">二、电磁波与海水相互作用机制</h2><h2 id="三、海洋水体波谱特征">三、海洋水体波谱特征</h2><h2 id="四、遥感图像处理">四、遥感图像处理</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">海洋遥感</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="海洋遥感" scheme="http://example.com/tags/%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>研究生英语A</title>
    <link href="http://example.com/2022/09/01/%E3%80%90%E7%A0%94%E7%A9%B6%E7%94%9F%E8%8B%B1%E8%AF%ADA%E3%80%91A64%E7%8F%AD%E8%AF%BE%E7%A8%8B/"/>
    <id>http://example.com/2022/09/01/%E3%80%90%E7%A0%94%E7%A9%B6%E7%94%9F%E8%8B%B1%E8%AF%ADA%E3%80%91A64%E7%8F%AD%E8%AF%BE%E7%A8%8B/</id>
    <published>2022-09-01T05:37:07.620Z</published>
    <updated>2022-09-01T06:16:30.868Z</updated>
    
    <content type="html"><![CDATA[<h1>研究生英语</h1><p>TextA 从宏观到微观</p><ul><li>文章主题-&gt;段落主题-&gt;语法分析</li><li>文章背景介绍</li><li>文本语法现象</li></ul><p>Begin 介绍</p><p>End 测试</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">研究生英语A~</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>【Data Mining】Chapter 1. Introduction</title>
    <link href="http://example.com/2022/08/31/%E3%80%90Data%20Mining%E3%80%91Chapter%201.%20Introduction/"/>
    <id>http://example.com/2022/08/31/%E3%80%90Data%20Mining%E3%80%91Chapter%201.%20Introduction/</id>
    <published>2022-08-31T01:14:23.432Z</published>
    <updated>2022-08-31T02:55:59.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1️⃣-What-is-Data-Mining">1️⃣ What is Data Mining?</h2><ul><li><strong>Data mining:</strong> 🌟 Discover valid, novel, useful, and understandable patterns in massive datasets.</li></ul><p><strong>Cross Disciplines</strong></p><ul><li>Databases</li><li>Machine learning</li><li>Statistics</li><li>Neural network</li><li>Parallel / Distributed computing</li></ul><hr><h2 id="2️⃣-Characteristics-of-Data-Mining">2️⃣ Characteristics of Data Mining</h2><ul><li>Massive dataset</li><li>Automatically searching for interesting patterns from historical data</li><li>Fast</li><li>Scalable</li><li>Update easily</li><li>Practical</li><li>Decision support</li></ul><hr><h2 id="3️⃣-The-main-tasks-of-Data-Mining">3️⃣ The main tasks of Data Mining</h2><ul><li><p>Clustering</p></li><li><p>Classification</p></li><li><p>Anomaly Detection</p></li><li><p>Association Rules</p></li><li><p>Social Analysis</p></li><li><p>Recommender Systems</p></li><li><p>Sequence Mining</p></li></ul><h3 id="🌬️-Association-Rule-Mining">🌬️ Association Rule Mining</h3><p>Detect sets of attributes or items that frequently co-occur in many database records and rules among them.</p><blockquote><p>关联规则挖掘，旨在寻找到经常同时出现在数据库记录和其中的规则中的属性或项集。</p></blockquote><hr><h3 id="🔥-Classification">🔥 Classification</h3><p>Build a model of classes on training dataset, and then, assign a new record to one of several predefined classes.</p><blockquote><p>一个简单的分类模型：决策树。</p><p>分类是在先验基础上(经验、样本)，对未定义的数据赋予新的属性。</p></blockquote><hr><h3 id="🍦-Clustering">🍦 Clustering</h3><p>Partition the dataset into groups such that elements in a group have lower inter-group similarity and higher intra-group similarity.</p><blockquote><p>聚类的核心在于对于无标签数据，通过模型将其划分为具有簇间差异最大、簇内差异最小的簇</p></blockquote><hr><h3 id="🐍-Anomaly-Detection">🐍 Anomaly Detection</h3><p><strong>Anomalies:</strong> 🌟 The set of objects are considerably dissimilar from the remaining of the data.</p><p>Give a set of <code>n</code> objects, and <code>k</code>, the number of expected anomalies, find the top <code>k</code> objects that are considerably dissimilar or inconsistent with the remaining data.</p><hr><h3 id="📘-Sequence-Mining">📘 Sequence Mining</h3><p>Given a set of sequences, find the complete set of frequent subsequences.</p><blockquote><p>给定一组序列，找到他的频繁子序列的完整集合</p></blockquote><hr><h2 id="4️⃣-The-kinds-of-Date">4️⃣ The kinds of Date</h2><ul><li>Relational Databases<ul><li>说人话就是处理结构化数据，以关系表的形式存储</li></ul></li><li>Data Warehouses<ul><li>数据仓库顾名思义，是⼀个很⼤的数据存储集合，出于企业的分析性报告和决策⽀持⽬的⽽创建，对多样的业务数据进⾏筛选与整合。</li></ul></li><li>Transactional Databases</li><li>Spatial Data</li><li>Time Series</li><li>Text Databases</li><li>Multimedia databases</li><li>Data Streams</li><li>Biomedical Data</li><li>World-Wide Web</li><li>Graph</li></ul><hr><h2 id="5️⃣-Knowledge-Discovery-Process">5️⃣ Knowledge Discovery Process</h2><img src="/2022/08/31/%E3%80%90Data%20Mining%E3%80%91Chapter%201.%20Introduction/image-20220831101945274.png" alt="image-20220831101945274" style="zoom:50%;"><p>说人话就是：</p><p>从数据库中进行<code>数据清洗和聚合</code>，接着在数据仓库中进行<code>选择和变换</code>，通过<code>数据挖掘</code>，对得到的<code>模式进行评估</code>，最终得到可用的<code>知识</code>。</p><p><strong>Key Step🔑</strong></p><p>1️⃣ Learning the application domain</p><ul><li>relevant prior knowledge and goals of application</li></ul><p>2️⃣ Creating a target data resource</p><p>3️⃣ Data cleaning and preprocessing. (may take 60% of effort)</p><p>4️⃣ Data reduction and transformation</p><p>5️⃣ Choosing the mining algorithms to search for patterns of interest.</p><p>6️⃣ Pattern evaluation and knowledge presentation.</p><p>7️⃣ Use of discovered knowledge</p><blockquote><p>可以归纳为<strong>三个阶段</strong></p><ul><li>用户画像阶段</li><li>数据处理阶段</li><li>评估应用阶段</li></ul><p>用户画像阶段，需要学习用户相关领域的知识，创建我们的目标数据资源</p><p>数据处理阶段，需要进行数据预处理、数据降维和变换、数据挖掘这几个步骤，找到感兴趣的模式</p><p>评估应用阶段，则是将得到的模式进行评估，利用该模式对知识进行表达和运用</p></blockquote><hr><h2 id="6️⃣-Interesting-Patterns">6️⃣ Interesting Patterns</h2><p><strong>Measures</strong></p><p>🌟 A pattern is interesting if it is <code>easily understood</code> by humans, <code>valid</code> on new or test data with some degree of <code>certainly, potentially useful, novel,</code> or <code>validates some hypothesis</code> that a user seeks to confirm.</p><p>✏️ 如果一种模式“很容易被人类理解”，对新数据或测试数据“有效”，并具有某种程度的“肯定、潜在有用、新颖”或“验证用户试图确认的某些假设”，那么这种模式就是有趣的。</p><blockquote><p>Objective or Subjective</p></blockquote><p><strong>Objective</strong>: based on <code>statistics and structures of pattern</code>s, e.g., support, confidence, etc.</p><p><strong>Subjective</strong>: based on <code>user’s belief in the data</code>, e.g., unexpectedness, novelty, actionability, etc.</p><blockquote><p>all or only interesting patterns</p></blockquote><p><strong>All:</strong> Completeness</p><p><strong>Only:</strong> An optimization problem–challenging</p><ul><li>Can a data mining system find only the interesting patterns</li><li>approaches<ul><li>First generate all the patterns and then filter out the uninteresting ones.</li><li>Guide and constrain the discovery process.</li></ul></li></ul><hr><h2 id="7️⃣-Research-Issues-in-Data-Mining">7️⃣ Research Issues in Data Mining</h2><ul><li>Mining methodology</li><li>User interaction</li><li>Applications and social impacts</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">数据挖掘</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="数据挖掘" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode Hot100 详细题解</title>
    <link href="http://example.com/2022/08/30/%E3%80%90LeetCode%E3%80%91Hot100%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/08/30/%E3%80%90LeetCode%E3%80%91Hot100%E9%A2%98%E8%A7%A3/</id>
    <published>2022-08-30T09:05:04.167Z</published>
    <updated>2022-09-05T14:41:42.618Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hot-100-题解🔥">Hot 100 题解🔥</h2><h3 id="前言">前言</h3><p>最近打算开个新坑，也就是这个Hot 100。</p><p>做完这份题解后，我会对我做过的所有题里有意思的，值得一说的再写一份题解。</p><hr><p>这份题解并不按照顺序进行，而是根据🏷️进行排序。不定期更新，平均一天1~2T，有空的话会加更。</p><hr><h2 id="一、数组">一、数组</h2><p>1.1 <a href="https://leetcode.cn/problems/two-sum/">两数之和</a></p><p><strong>题干：</strong></p><p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <code>indices of the two numbers such that they add up to target</code>.</p><p>You may assume that each input would have <code>exactly one solution</code>, and you may not use the same element twice.</p><p>You can return the answer in any order.</p><p><strong>示例：</strong></p><blockquote><p>Input: nums = [2,7,11,15], target = 9<br>Output: [0,1]<br>Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].</p></blockquote><blockquote><p>Input: nums = [3,2,4], target = 6<br>Output: [1,2]</p></blockquote><p><strong>思路：</strong></p><p>介个题本身考察的是对数组的理解和对数据结构的应用，我们可以想到一种最简单的方式：暴力。</p><p>借助暴力搜索+集合去重的方式，很快就能得到需要的答案。但这样的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，远远超出预期。</p><p>亦或是思路二：先排好序，接着通过二分的方式找到另一个。这种方式有个好处，那就是不需要数组去重，遇到重复的跳过就行了。时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)+O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>排序+二分。</p><p>但是还是不够快，思路三可以通过<code>hash</code>表的方式进行，为什么能想到<code>hash</code>表呢？首先，这个数组本身是无序的，排序需要花费一定的时间复杂度。而对于某一个数<code>i</code>来说，他的配对为<code>target-i</code>，我们关注的，如何在后一次遇到<code>target-i</code>时及时找到我们的<code>i</code>？<code>hash</code>表可以很快的实现这一点。而且不需要担心重复问题。</p><p><strong>实现：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        hashmap=&#123;&#125;</span><br><span class="line">        res=[]</span><br><span class="line">        <span class="keyword">for</span> i,num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> (j:=target-num) <span class="keyword">in</span> hashmap.keys():</span><br><span class="line">                <span class="keyword">return</span> [hashmap[j],i]</span><br><span class="line">            hashmap[num]=i</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><hr><h2 id="二、链表">二、链表</h2><p>2.1 <a href="https://leetcode.cn/problems/add-two-numbers/">Add Two Numbers</a></p><p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in <code>reverse order</code>, and each of their nodes contains a single digit. Add the two numbers and return the sum as a <code>linked list</code>.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><img src="/2022/08/30/%E3%80%90LeetCode%E3%80%91Hot100%E9%A2%98%E8%A7%A3/image-20220905223717946.png" alt="image-20220905223717946" style="zoom:50%;"><p><strong>思路</strong></p><p>链表的逆序相加，需要同时遍历两个链表，而且重点是进位。</p><p>我们可以用一个哨兵<code>carryBit</code>存放。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">addTwoNumbers</span>(<span class="params">self, l1: <span class="type">Optional</span>[ListNode], l2: <span class="type">Optional</span>[ListNode]</span>) -&gt; <span class="type">Optional</span>[ListNode]:</span><br><span class="line">        <span class="comment"># 关键词 逆序 相加</span></span><br><span class="line">        cur,carryBit=ListNode(<span class="number">0</span>),<span class="number">0</span></span><br><span class="line">        dummy=cur</span><br><span class="line">        <span class="keyword">while</span> l1 <span class="keyword">or</span> l2:</span><br><span class="line">            carryBit=(val:=(l1.val <span class="keyword">if</span> l1 <span class="keyword">else</span> <span class="number">0</span>)+(l2.val <span class="keyword">if</span> l2 <span class="keyword">else</span> <span class="number">0</span>)+carryBit)//<span class="number">10</span></span><br><span class="line">            cur.<span class="built_in">next</span>=ListNode(val%<span class="number">10</span>)</span><br><span class="line">            cur=cur.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">if</span> l1: l1=l1.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">if</span> l2: l2=l2.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">if</span> carryBit:cur.<span class="built_in">next</span>=ListNode(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> dummy.<span class="built_in">next</span></span><br></pre></td></tr></table></figure><p>总体来说，这题考察的就是对链表的理解和对进位的理解，并没有什么难度。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">热题！还是热题！</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>【遥感科学】第一章 遥感科学的发展</title>
    <link href="http://example.com/2022/08/30/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E7%9A%84%E5%8F%91%E5%B1%95/"/>
    <id>http://example.com/2022/08/30/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E7%9A%84%E5%8F%91%E5%B1%95/</id>
    <published>2022-08-30T03:36:45.704Z</published>
    <updated>2022-09-08T03:47:29.146Z</updated>
    
    <content type="html"><![CDATA[<h1>第一章 遥感科学的发展🌐</h1><hr><h2 id="一、遥感的起源与发展✈️">一、遥感的起源与发展✈️</h2><p>1️⃣ 得益于战争，遥感技术得到了大力的发展</p><p>2️⃣ 上世纪<code>60</code>年代，国际上第一次将<code>遥感技术</code>作为一项科学技术门类以来，其理论逐渐发展，不断完善，在军事、资环调查、环境与灾害监测方面展现了巨大的优势。</p><p>3️⃣ 目前，世界各国向空间发射<code>6000</code>多颗卫星，其中<code>1/3</code>是遥感卫星。</p><blockquote><p><strong>1962</strong>年，第一届国际环境遥感大会在美国密歇根大学召开，<strong>遥感Remote sening</strong>一词正式被提出</p><p><strong>1957</strong>年苏联发射第一颗人造卫星</p><p><strong>1958</strong>年美国发射人造卫星</p><p><strong>1959</strong>年美国启动科罗纳卫星侦查计划</p><p><strong>1960</strong>年美国发射第一颗气象卫星</p><p><strong>1970</strong>年中国发射第一颗东方红卫星</p></blockquote><hr><h2 id="二、遥感的基本概念">二、遥感的基本概念</h2><h3 id="遥感的定义">遥感的定义</h3><p>1️⃣ 广义上的遥感</p><p>​泛指一切不接触物体而进行的远距离探测，包括对电磁场、力场、机械波等的探测。</p><p>2️⃣ 狭义上的遥感</p><p>​利用传感器记录目标的电磁波特征，通过对数据的处理、综合分析，揭示物体的特征及其变化规律的综合性探测技术</p><p>他是以电磁波与地面物质相互作用为基础，来探测、分析和研究地球资源与环境，并揭示相关要素的空间分布特征与时空变化规律的一门新兴科学。</p><p><strong>遥</strong>：远距离，非接触</p><p><strong>感</strong>：通过某种仪器进行探测并感知被测量物体的形状、大小、状态、特征等</p><p><strong>遥感的特点</strong></p><ul><li>面状信息获取、覆盖范围大</li><li>时效性强</li><li>连续性</li><li>多维信息</li><li>生动、形象、直观</li><li>经济实惠</li></ul><hr><p><strong>电磁波谱</strong></p><p>将电磁波按波长(或频率)从小到大(从大到小)排列起来，就是电磁波谱。</p><p>自变量是 $\lambda $ （波长），而因变量是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> , 反射率，或者说信息量。</p><p>值得注意下，所谓的波段一直指的都是一个范围，表示光子能量的范围，例如我们的红光波段、蓝光波段、绿光波段 。</p><p><strong>谱</strong> 一个物理量随另一个物理量的变化情况(反射率在波长下的变化)</p><p><strong>遥感的基本物理基础</strong></p><p>任何物体都具有发射、反射和吸收电磁波的特性，物体与电磁波的相互作用，形成了物体的电磁波特性，这是遥感探测物体的基础、依据。不同类型的地物具有不同的波谱特征，这也是遥感识别地物的基础。</p><p>遥感得到的数据一般是不同波长下的反射波谱曲线。</p><p>而反射率曲线，一般受到<strong>尺度</strong>、<strong>纯度视场大小</strong>、<strong>环境条件</strong>、<strong>方向角度</strong>等因素的影响。</p><p>当电磁波与地物发生作用时，会导致选择性的反射，不同地物呈现出不同的特征。因而可以通过遥感数据反演地物。</p><p>地表接收能量也会导致升温，从而发射热辐射，被传感器接收后，就成了热红外遥感。</p><p>传感器接收后，会将信息量转化为图像上的灰度值。</p><hr><p><strong>波段</strong></p><p>一定的电磁波范围。(如TM波段1的波段范围是0.45 ~ 0.52μm，波段2是0.53~0.61μm等)</p><p><strong>波段与通道🍌</strong></p><p>对传感器而言，波段与通道是等价的。</p><p>对图像处理而言，我们是将波段放到通道中对图像进行渲染。</p><p><strong>全色图像</strong></p><p>全色图像也是黑白的，指的是可见光到近红外波谱范围里头，传感器获取的一个宽波谱图像。</p><p><strong>彩色合成</strong></p><p>将在红绿蓝波段获取的单波段图像分别赋予红色、绿色和蓝色，并将3个图像叠加到一起，称为彩色图像。</p><p><strong>假彩色合成</strong></p><p>合成图像时，所用的波段的光谱段和赋予的相应通道不相一致，合成出来的图像的颜色与实际地物颜色不一致。</p><hr><p><strong>定标</strong></p><p>输入输出模式映射，或者说，就是将输出数据的范围映射到一个统一的区间，以方便多数据操作。</p><hr><p><strong>地面遥感</strong></p><p><strong>航空遥感</strong></p><p><strong>航天遥感</strong></p><p>地面遥感是基础，而航空航天遥感一般用来反演地面地物，而其验证一般也依托于地面遥感。</p><p>航空遥感也可以作为地面与航天遥感的中间商。</p><hr><h3 id="遥感的分类">遥感的分类</h3><p><strong>按工作方式</strong></p><p><strong>主动遥感</strong> 由传感器主动发射电磁波并接受目标反射的回波信号，如(SAR&lt;微波&gt;,激光雷达LIDAR&lt;可见光波&gt;)</p><p><strong>被动遥感</strong> 传感器自身不发射电磁波，被动接收目标对自然辐射源的反射能量或其自身发射的能量。</p><p><strong>成像遥感</strong> 传感器接收的电磁辐射信号可以转换为图像。</p><p><strong>非成像遥感</strong> 传感器接收的电磁辐射信号不能转换为图像(如微博辐射计、高度计等</p><p><strong>按应用领域</strong></p><p>资源、环境、农业、林业、地质、城市、灾害、水文、海洋、军事等等</p><h3 id="分辨率">分辨率</h3><p><strong>空间分辨率</strong> 指(未经过重采样的)想冤案所代表的地面范围大小，一般来说是指遥感图像能分辨的地面物体的最小单元。</p><p><strong>意义</strong></p><ul><li>空间分辨率高，划分地物越细，识别地物空间细节能力越强</li><li>不一定空间分辨率越高越好，地物细节信息太多有时反而会影响主要信息的识别与提取，要根据应用的特定目的选择合适的空间分辨率，不同的研究目标、尺度需要相应的数据。</li><li>图像的可分辨程度，不完全取决于空间分辨率的具体值，而与目标的形状、大小，以及它与周围物体亮度、结构的相对差异有关，与北京的反差大小有关。</li></ul><p><strong>光谱分辨率</strong> 指传感器接收目标辐射的波谱时，能分辨的最小波长间隔。(单位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">um,nm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">nm</span></span></span></span>)</p><p>其含义通常包括</p><ul><li>波长间隔的大小</li><li>传感器波段数量的多少</li><li>各波段中心波长位置</li></ul><p><strong>意义</strong></p><p>光谱分辨率高则光谱信息丰富，可探测出不同地物在光谱上的细微变化，微小差异，提高辨识地物的能力和精度。</p><p><strong>时间分辨率</strong> 指对同一地点获取遥感数据所需的最小的时间间隔，即重访周期。</p><p>时间分辨率的大小，除了主要决定于飞行器的回归周期外，还与遥感探测器、遥感系统的设计等因素直接相关。</p><p><strong>意义</strong></p><p>用于动态监测、长时间序列分析，利用最合适时相的数据降低识别地物的难度，提高识别地物的精度。</p><p><strong>辐射分辨率</strong></p><p>指传感器接收波谱信号时能分辨的最小辐射度差，即分辨辐射差异的能力。</p><p>辐射分辨率反映探测器的灵敏度，可以通过数据的量化级体现，但不等于量化等级。</p><h3 id="早期中国遥感大事件">早期中国遥感大事件</h3><ul><li>中国遥感的摇篮：云南腾冲航空遥感实验 1978年开展了我国第一次大规模、多学科、综合性遥感应用试验</li><li>天津-渤海湾城市遥感实验</li><li>四川二滩水电站能源遥感实验</li></ul><p>以上三个被称为我国遥感事业起步的三大战役。</p><hr><p>我国第一颗商用卫星：吉林一号卫星(高分辨率遥感卫星)。由2015年10月7日，在酒泉卫星发射中心发射成功，一共有四颗卫星，标志着我国航天遥感领域商业化、产业化发展迈出重要一步。</p><p>bilibili视频卫星，央视频号等，都是跟长光卫星合作打造的商用卫星。</p><p>高景一号，2016年12月28日，太原发射中心。全色分辨率0.5m，多光谱分辨率2m，到了我国0.5m级商业遥感数据被国外垄断的现状。</p><hr><h2 id="四、遥感发展的趋势">四、遥感发展的趋势</h2><p>1️⃣ <strong>多层次立体观测</strong></p><ul><li>地面</li><li>航空</li><li>航天</li></ul><p>2️⃣ <strong>传感器</strong></p><ul><li>单一<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>多传感器、多平台</li></ul><p>3️⃣ <strong>分辨率</strong></p><ul><li>分辨率不断提高</li></ul><p>4️⃣ <strong>全天候、全天时、全谱段</strong></p><ul><li>可见光/近红外、短波红外、热红外、微波</li></ul><p><strong>5️⃣ 静态观测、动态观测</strong></p><p>​多时相、短周期</p><p><strong>6️⃣ 定性、定量</strong></p><ul><li>从定性到半定量，再到定量</li></ul><p><strong>7️⃣ 遥感平台小型化</strong></p><p><strong>8️⃣ 多源数据综合应用</strong></p><h3 id="北斗卫星导航">北斗卫星导航</h3><p><strong>1994-2020.6.23</strong>历时26年。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">遥感科学</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="遥感科学" scheme="http://example.com/tags/%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>遥感科学</title>
    <link href="http://example.com/2022/08/30/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6A/"/>
    <id>http://example.com/2022/08/30/%E3%80%90%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6%E3%80%91%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6A/</id>
    <published>2022-08-30T02:26:41.799Z</published>
    <updated>2022-08-30T03:36:24.277Z</updated>
    
    <content type="html"><![CDATA[<h1>遥感科学</h1><hr><h2 id="Lesson-1">Lesson 1</h2><blockquote><p>date 2022.8.30</p></blockquote><p><strong>姜小光老师</strong></p><ul><li><a href="mailto:xgjiang@ucas.ac.cn">xgjiang@ucas.ac.cn</a></li></ul><p><strong>参考教材</strong></p><p>《遥感应用分析原理与方法》赵英时等。</p><hr><h2 id="第一章-遥感科学的发展🏷️">第一章 遥感科学的发展🏷️</h2><h3 id="一、遥感的起源于发展">一、遥感的起源于发展</h3><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">遥感科学</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="遥感科学" scheme="http://example.com/tags/%E9%81%A5%E6%84%9F%E7%A7%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Data Mining</title>
    <link href="http://example.com/2022/08/29/%E3%80%90Data%20Mining%E3%80%91%E8%AF%BE%E7%A8%8B/"/>
    <id>http://example.com/2022/08/29/%E3%80%90Data%20Mining%E3%80%91%E8%AF%BE%E7%A8%8B/</id>
    <published>2022-08-29T04:12:25.393Z</published>
    <updated>2022-08-30T02:39:24.990Z</updated>
    
    <content type="html"><![CDATA[<h1>Introduction</h1><hr><p>Tutor: LiuYing</p><p>Main Contents:</p><ul><li><p>Who’s LiuYing</p><ul><li>PKU CS</li><li>Northwest University of USA</li></ul></li><li><p>Scores</p><ul><li>30% daily work</li><li>40% group work</li><li>30% Final test</li></ul></li><li><p>How to study this class</p><ul><li>In English</li><li>Do it early</li><li>communicate with teach</li><li>enhance study ability</li></ul></li><li><p>the motivation of Data Mining.</p></li><li><p>Four space of Data Mining.</p><ul><li>Useful</li><li>Understandable</li><li>valid</li><li>novel</li></ul></li><li><p>Kaggle competition</p></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">数据挖掘</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="数据挖掘" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>Ucas选课</title>
    <link href="http://example.com/2022/08/25/UCAS%E9%80%89%E8%AF%BE/"/>
    <id>http://example.com/2022/08/25/UCAS%E9%80%89%E8%AF%BE/</id>
    <published>2022-08-25T07:11:03.038Z</published>
    <updated>2022-08-25T13:56:58.270Z</updated>
    
    <content type="html"><![CDATA[<h1>UCAS选课</h1><hr><h2 id="一、选课方式">一、选课方式</h2><p>登录<a href="https://sep.ucas.ac.cn">选课系统</a></p><h2 id="二、选课要求">二、选课要求</h2><h3 id="公共必修课">公共必修课</h3><p>1.《硕士学位英语》与《博士学位英语》由外语系开设，选课要求见附件1。</p><p>2.《新时代中国特色社会主义理论与实践》（以下简称“中特”）以及《自然辩证法概论》（以下简称“自辩”）由马克思主义学院在秋季学期开设。每位同学选择1个“中特”和1个“自辩”班级。</p><p>3.《学术道德与学术写作规范》。研究生须选择通论和分论班级各1个，通论班级由公共政策与管理学院开设，分论班级由本院系开设，可在同一学年的不同学期分别修读通论和分论，学年末所有通论和分论班级均结课且上传成绩后再根据通论和分论的成绩计算总成绩。通论和分论均通过视为课程通过。</p><p>4.《工程伦理》为工程类研究生公共必修课，由工程科学学院开设。每位工程硕士须选择1个通论班级和3个分论班级，不可跨学期修读，若秋季选课但未通过，须在春季学期重新选课。</p><hr><h3 id="公共选修课">公共选修课</h3><p>1.公共政策与管理学院和马克思主义学院的核心课和普及课可以作为公共选修课，选课时学生须自行将课程属性设置为公共选修课，具体课程信息请查看附件2《两用课程信息表》。</p><p>2.体育类公选课由体育部开设，每位学生每学期<strong>限选1门</strong>。</p><p>3.“人文系列讲座”课程（1学分），学生全学年听满<strong>20学时及以</strong>上获得该课程学分。</p><hr><h3 id="专业课程">专业课程</h3><p>包括一级学科核心课、一级学科普及课、一级学科研讨课、专业核心课、专业普及课、专业研讨课和科学前沿讲座。</p><p>1.每位学术型研究生须在导师和培养单位的指导下，修读本专业所属<strong>一级学科核心课</strong>以及<strong>一级学科下各专业核心课</strong>不少于<strong>2</strong>门；只开设1门核心课的学科或专业，学生须修读该核心课；未开设核心课的学科或专业，学生按导师或培养单位的意见进行选课。</p><blockquote><p><strong>专业硕士按所在培养单位的培养方案要求修读包括核心课在内的所有专业课程。</strong></p></blockquote><p>2.研究生须选择本学科的专业类课程以及经导师和培养单位审核的相关学科的专业类课程作为专业学位课。</p><p>3.“科学前沿讲座”课程（1学分），学生全学年听满20学时及以上获得该课程学分。</p><p><strong>（四）选课学分要求</strong></p><p>本学期每人选课总学分<strong>不得低于10学分</strong>，不含人文系列讲座和科学前沿讲座。</p><hr><p><strong>关于我的选课</strong></p><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825151103990.png" alt="image-20220825151103990" style="zoom:50%;"><ul><li>中特✅</li><li>自辩✅</li><li>学术❎</li><li>工程❎</li><li>英语❎</li></ul><p><strong>学期时间</strong></p><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825154410507.png" alt="image-20220825154410507" style="zoom: 33%;"><p><strong>课程分类</strong></p><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825154545951.png" alt="image-20220825154545951" style="zoom: 33%;"><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825154636639.png" alt="image-20220825154636639" style="zoom: 50%;"><p><strong>学分分配</strong></p><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825154654483.png" alt="image-20220825154654483" style="zoom:50%;"><p><strong>必选课程</strong></p><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825154918321.png" alt="image-20220825154918321" style="zoom:50%;"><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825154952112.png" alt="image-20220825154952112" style="zoom:50%;"><p><strong>审核流程</strong></p><img src="/2022/08/25/UCAS%E9%80%89%E8%AF%BE/image-20220825155046073.png" alt="image-20220825155046073" style="zoom:50%;"><hr><h2 id="现有课程"><strong>现有课程</strong></h2><p><strong>资环学院🌍</strong></p><p>1️⃣ 现代地图学</p><p>2️⃣ 现代自然地理学</p><p>3️⃣ 当代人文与经济地理学</p><p>4️⃣ 环境地学导论</p><p>5️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222844">现代水文学与水资源学</a></p><p>6️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222843">冰冻圈科学概论</a></p><p>7️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/223423">湖泊学概论</a></p><p>8️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/223424">湖泊沉积与环境</a></p><p>9️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222847">产业与交通地理学</a></p><p>🔟 <a href="https://jwxk.ucas.ac.cn/course/coursetime/223486">旅游资源评价与利用</a></p><hr><p>1️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222849">人口流动与城镇化讨论班</a></p><p>2️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/222574">全球导航卫星系统原理与应用</a></p><p>3️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222569">遥感物理</a></p><p>4️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222852">高光谱遥感</a></p><p>5️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/223118">资源经济学</a></p><p>6️⃣ 资源科学纲要</p><p>7️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/223120"> 资源生态学</a></p><p>8️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/227257">环境与自然资源系统建模</a></p><p>9️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222851">资源循环利用与生态经济</a></p><p>🔟 <a href="https://jwxk.ucas.ac.cn/course/coursetime/223400">自然与文化遗产</a></p><hr><p>1️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222853">全球变化生态学</a></p><p>2️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/222560">生态系统生态学A</a></p><p>4️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/223389">景观与区域生态学</a></p><p>5️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222854">环境规划与管理</a></p><p>6️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222561">生态统计学——原理与实践</a></p><p>7️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/223509">植物生理生态学</a></p><p>8️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/223125">土壤物理学</a></p><p>9️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/223437">生态遥感原理、技术与方法</a></p><p>🔟 <a href="https://jwxk.ucas.ac.cn/course/coursetime/223439"> 环境变化的生态效应</a></p><hr><p>1️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/223644">生态信息学原理、方法和应用</a></p><p>2️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/223643">大尺度宏观生态系统科学</a></p><p>4️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222856">高原生态系统生态学</a></p><p>5️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222588">恢复生态学前沿</a></p><p>6️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222858">大气环境化学</a></p><p>7️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222857">大气污染控制技术</a></p><p>8️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/222859">大气污染监测技术</a></p><p>9️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/223126">环境土壤学</a></p><p>🔟 <a href="https://jwxk.ucas.ac.cn/course/coursetime/223127">环境修复与资源工程</a></p><hr><p>1️⃣ <a href="https://jwxk.ucas.ac.cn/course/coursetime/222862">现代环境分析</a></p><p>2️⃣<a href="https://jwxk.ucas.ac.cn/course/coursetime/222861">高等环境化学</a></p><p>4️⃣ 高等环境生物学</p><p>5️⃣ 环境分子毒理学</p><p>6️⃣ 环境毒理学研究方法</p><p>7️⃣ 环境污染控制化学</p><p>8️⃣ 纳米毒理学</p><p>9️⃣ 环境纳米科学与技术</p><p>🔟 环境影响评价</p><hr><p>1️⃣ 新型有机污染物前沿进展</p><p>2️⃣ 水质界面过程原理</p><p>4️⃣ 饮用水安全</p><p>5️⃣ 膜分离原理与技术</p><p>6️⃣ 工业废气控制过程技术与工程设计</p><p>7️⃣ 环境工程数学模型与Matlab应用</p><p>8️⃣ 高级废水生物处理工程</p><p>9️⃣ 水处理药剂与材料</p><hr><p><strong>电子学院⚡</strong></p><blockquote><p>与遥感相关的可选课程</p></blockquote><p>1️⃣ 微波遥感概论</p><p>2️⃣ 合成孔径雷达原理</p><p>4️⃣ 干涉合成孔径雷达技术</p><p>5️⃣ 大气遥感</p><p>6️⃣ 城市环境遥感</p><p>7️⃣ 现代雷达系统</p><hr><p><strong>目前已选课程(占用中🏷️ )</strong></p><table><thead><tr><th style="text-align:center">课程</th><th style="text-align:center">学分</th><th style="text-align:center">学时</th></tr></thead><tbody><tr><td style="text-align:center">遥感科学A</td><td style="text-align:center">4</td><td style="text-align:center">76</td></tr><tr><td style="text-align:center">海洋遥感</td><td style="text-align:center">2</td><td style="text-align:center">42</td></tr><tr><td style="text-align:center">热红外遥感</td><td style="text-align:center">2.5</td><td style="text-align:center">48</td></tr><tr><td style="text-align:center">模式识别</td><td style="text-align:center">2</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">数据挖掘</td><td style="text-align:center">2</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">图像处理</td><td style="text-align:center">2</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">区域可持续发展理论与实践</td><td style="text-align:center">3</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">高光谱遥感基础与数据处理</td><td style="text-align:center">4</td><td style="text-align:center">60</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">秋季学期选课</summary>
    
    
    
    <category term="琐碎日常" scheme="http://example.com/categories/%E7%90%90%E7%A2%8E%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="杂谈" scheme="http://example.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Python位运算</title>
    <link href="http://example.com/2022/08/23/%E3%80%90Python%E3%80%91%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://example.com/2022/08/23/%E3%80%90Python%E3%80%91%E4%BD%8D%E8%BF%90%E7%AE%97/</id>
    <published>2022-08-23T14:58:37.510Z</published>
    <updated>2022-08-23T15:29:40.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运算符">运算符</h2><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">&amp;</td><td style="text-align:center">与，1&amp;1=1，其他情况为0</td></tr><tr><td style="text-align:center">|</td><td style="text-align:center">或，0|0=0，其他为1</td></tr><tr><td style="text-align:center">~</td><td style="text-align:center">逐位取反</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">异或，同0异1</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td style="text-align:center">左移</td></tr><tr><td style="text-align:center">&gt;&gt;</td><td style="text-align:center">右移</td></tr></tbody></table><p>简单来看一下操作吧：</p><p><strong>倍乘</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">5</span>&lt;&lt;<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 10</span></span><br></pre></td></tr></table></figure><p>5: <code>101=1*4+0*2+1*</code></p><p>5&lt;&lt;1: <code>1010=1*8+0*4+1*2+0*1=2(1*4+0*2+1*1+0*1)=2(101)</code></p><p><strong>倍除</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">5</span>&gt;&gt;<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 2</span></span><br></pre></td></tr></table></figure><p><strong>奇数判断</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A&amp;<span class="number">1</span>==<span class="number">1</span>?</span><br></pre></td></tr></table></figure><p><strong>案例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">coinChange</span>(<span class="params">self, coins, amount: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> amount:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="comment"># 将减法转换为除法进行运算</span></span><br><span class="line">        <span class="comment"># 一旦最低位为1，则说明找到解，停止运算</span></span><br><span class="line">        dp = <span class="number">1</span> &lt;&lt; amount</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> dp:</span><br><span class="line">            tmp = <span class="number">0</span></span><br><span class="line">            res += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 每一轮运算计算一遍dp除以2**i得到的所有可能解</span></span><br><span class="line">            <span class="keyword">for</span> coin <span class="keyword">in</span> coins:</span><br><span class="line">                <span class="comment"># tmp用于存储运算的中间结果</span></span><br><span class="line">                <span class="comment"># dp &gt;&gt; coin 实际上是进行除法运算：dp//2**coin</span></span><br><span class="line">                <span class="comment"># 使用位运算“或”来保存全部除法运算结果中的‘1’，实现批量运算</span></span><br><span class="line">                <span class="comment"># ps:这也是二进制移位的一个神奇之处，大家可以手动模拟一下这个过程</span></span><br><span class="line">                tmp |= dp &gt;&gt; coin</span><br><span class="line">            <span class="comment"># 一旦末尾出现1，则返回结果</span></span><br><span class="line">            <span class="keyword">if</span> tmp &amp; <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">            <span class="comment"># 将本轮运算的全部运算结果送入下一轮计算</span></span><br><span class="line">            dp = tmp</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Python位运算</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>常见词</title>
    <link href="http://example.com/2022/08/23/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%B8%B8%E8%A7%81%E8%AF%8D/"/>
    <id>http://example.com/2022/08/23/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91%E5%B8%B8%E8%A7%81%E8%AF%8D/</id>
    <published>2022-08-23T01:22:06.565Z</published>
    <updated>2022-09-08T14:16:35.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="8-23">8/23</h2><p><strong>expense</strong></p><ul><li><p>n. 花销，费用，支出</p></li><li><p>at the expense of … 以…为代价，在牺牲…的情况下</p></li></ul><p><strong>efficiency</strong></p><ul><li>n. 效率，效能</li><li>increase efficiency</li></ul><p><strong>establish</strong></p><ul><li>vt. 简历，创立，证实</li><li>establish a relationship</li><li>establish oneself 使自己立足</li></ul><p><strong>expand</strong></p><ul><li>vt. 扩充，扩大</li><li>vi. 详谈，详诉</li><li>expand the business</li></ul><p><strong>exact</strong></p><ul><li>adj. 精确的，严谨的，精密的</li><li>vt. 勒索，索取</li><li>your exact words 原话</li></ul><p><strong>effect</strong></p><ul><li>n. 影响，结果，特效，效果</li><li>v. 引起，使发生</li><li>a negative effect</li><li>in effect 实际上</li><li>take effect 见效</li><li>put sth into effect 实施，实行</li></ul><p><strong>examine</strong></p><ul><li>vt. 仔细研究，仔细检查，测试</li><li>examine data 剖析数据</li><li>examine sb on sth</li></ul><p><strong>efficient</strong></p><ul><li>adj. 效率高的</li><li>an efficient method</li></ul><p><strong>effective</strong></p><ul><li>adj. 有效的，实际的</li><li>effective power</li><li>an effective method</li></ul><p>He made an effective method, which is so efficient.</p><p><strong>exist</strong></p><ul><li>vi. 存在，生存</li></ul><p><strong>estate</strong></p><ul><li>n. 庄园，遗产</li><li>n. 住宅区，工业区</li><li>inherit the estate 继承遗产</li><li>a housing estate 住宅区</li></ul><p><strong>comprehension</strong></p><ul><li>n. 理解力</li></ul><p><strong>experience</strong></p><ul><li>n. 经历</li></ul><p><strong>experienced</strong></p><ul><li>adj. 经验丰富的</li></ul><p><strong>identify</strong></p><ul><li>vt. 认出，发现，识别</li><li>vt. 显示身份</li></ul><p><strong>intestine</strong></p><ul><li>n. 肠</li><li>adj. 内部的</li></ul><p><strong>thermal</strong></p><ul><li>adj. 热的</li></ul><hr><p><strong>performance</strong></p><ul><li>n. 表演，情况，<strong>执行</strong>，<strong>性能</strong></li><li>adj. 高性能的，性能卓越的 <strong>performance compute</strong></li></ul><p><strong>implement</strong></p><ul><li>v. 执行，贯彻</li><li>n. 工具，手段</li></ul><p><strong>concretely</strong></p><ul><li>adv. 具体地</li></ul><p><strong>creatively</strong></p><ul><li>adv. 创造性地</li></ul><p><strong>plagiarism</strong></p><ul><li>n. 剽窃</li></ul><p><strong>explosive</strong></p><ul><li>adj. 易爆的</li><li>n. 炸药</li></ul><p><strong>transaction</strong></p><ul><li>n. 交易，业务，公报</li></ul><p><strong>competitive pressure</strong></p><ul><li>竞争压力</li></ul><p><strong>starving for knowledge</strong></p><ul><li>渴望知识</li></ul><p><strong>starve</strong></p><ul><li>挨饿，需要，使极其缺乏</li></ul><p><strong>pattern</strong></p><ul><li>n. 模式</li></ul><p><strong>complexity</strong></p><ul><li>n. 复杂性</li><li>complexity of 复杂度</li></ul><p><strong>hypothesis</strong></p><ul><li>n. 假说</li></ul><p><strong>frequently</strong></p><ul><li>adv. 经常地</li></ul><p><strong>occur</strong></p><ul><li>v. 发生，存在，出现</li></ul><p><strong>promotional</strong></p><ul><li>adj. 促销的，推广的</li></ul><p><strong>assign</strong></p><ul><li><p>v. 分配，布置，转让，<strong>赋值</strong></p></li><li><p>assign a new record to one of  several predefined classes 将一条新记录分配给几个预定义类中的一个</p></li></ul><p><strong>bankrupt</strong></p><ul><li>adj. 破产的</li></ul><p><strong>profitability</strong></p><ul><li>n. 盈利能力</li></ul><p><strong>anomaly</strong></p><ul><li>n. 异常现象,离群点</li></ul><p><strong>citation</strong></p><ul><li>n. 引用，引语</li></ul><p><strong>domain</strong></p><ul><li>n. 领域,范围</li><li>domain experts 领域专家</li></ul><p><strong>temporal</strong></p><ul><li>adj. 时间的，世俗的</li><li>n. 世间万物，暂存的事物</li><li>spatio-temporal data 时空数据</li></ul><p><strong>decision makers</strong></p><ul><li>决策者</li></ul><p><strong>simulation</strong></p><ul><li>n. 模拟</li></ul><p><strong>disunderstand</strong></p><ul><li>不明白</li></ul><p><strong>incomprehension</strong></p><ul><li>不理解</li></ul><p><strong>unapprehensive</strong></p><ul><li>不理解的</li></ul><hr><p><strong>cross disciplines</strong></p><ul><li>跨学科</li></ul><p><strong>sophisticated</strong></p><ul><li>先进的，在行的</li></ul><p><strong>Scalable</strong></p><ul><li>可扩展的</li></ul><p><strong>Practical</strong></p><ul><li>切实可行的，真实的</li></ul><p><strong>partition</strong></p><ul><li>n. 隔墙，隔板，分裂，分治</li><li>v. 分割，分裂</li></ul><p><strong>considerably</strong></p><ul><li>adv. 非常，相当多地</li></ul><p><strong>heterogeneous</strong></p><ul><li>adj. 参差的，异质的</li><li>n. 异类</li></ul><p><strong>relevant</strong></p><ul><li>adj. 有关的</li></ul><p><strong>prior</strong></p><ul><li>adj. 先前的，先验的</li></ul><p><strong>invariant</strong></p><ul><li>adj. 不变的</li></ul><p><strong>optimization</strong></p><ul><li>优化</li></ul><hr><p><strong>axiomatic</strong></p><ul><li>adj. 公理的，自明的</li></ul><p><strong>blurry</strong></p><ul><li>adj. 模糊不清的</li></ul><p><strong>China-born</strong></p><ul><li>中国裔</li></ul><p><strong>as A put in B</strong></p><ul><li>正如A在B中说的</li></ul><p><strong>partly</strong></p><ul><li>adv. 部分地，在某种程度上</li></ul><p><strong>forged</strong></p><ul><li>adj. 锻造</li><li>v. 伪造，锻造</li></ul><p><strong>grocery</strong></p><ul><li>n. 食品杂货店</li></ul><p><strong>supervisor</strong></p><ul><li>导师</li></ul><p><strong>reflection</strong></p><ul><li>n. 反射，倒影，<strong>反思</strong>，反省，<strong>想法</strong></li></ul><p><strong>entangle with</strong></p><ul><li>交战、卷入、纠缠在一起</li></ul><p><strong>perspective</strong></p><ul><li>观点</li></ul><p><strong>instead</strong></p><ul><li>adv. 代替，顶替，<strong>反而</strong></li></ul><p><strong>notion</strong></p><ul><li>概念，想法</li></ul><hr><p><strong>fluctuate</strong></p><ul><li>波动，起伏不定</li></ul><p><strong>ambiguous</strong></p><ul><li>adj. 模棱两可的，不确定的</li></ul><p><strong>disconcerting</strong></p><ul><li>adj. 令人不安的，打扰人的</li></ul><p><strong>concert</strong></p><ul><li>n. 音乐会，一致，<strong>和谐</strong></li><li>v. 协调，<strong>共同协定</strong></li></ul><p><strong>essentially</strong></p><ul><li>adv. 本质上，根本上</li></ul><p><strong>self-contained</strong></p><ul><li>独立的，设备齐全的</li></ul><p><strong>inherently</strong></p><ul><li>adv. 内在的，固有的</li></ul><p><strong>rational</strong></p><ul><li>理性的</li></ul><p><strong>mind-bound</strong></p><ul><li>思想受到限制</li></ul><p><strong>skepticism</strong></p><ul><li>n. 怀疑态度，怀疑论</li></ul><p><strong>particular puzzle</strong></p><ul><li>特定的难题</li></ul><p><strong>decreed</strong></p><ul><li>adj. 任命的</li><li>v. 颁布法令(decree)</li></ul><p><strong>discern</strong></p><ul><li>v.(艰难地或努力地)看出，察觉，了解，辨识，<strong>分辨</strong></li></ul><p><strong>trade-off</strong></p><ul><li>n. <strong>平衡</strong>，协调，<strong>让步</strong></li></ul><p><strong>fickly</strong></p><ul><li>adj. 浮躁的，异变的，变化无常的</li></ul><p><strong>erratic</strong></p><ul><li>adj. 不稳定的，难以预测的</li><li>n. 漂泊无定的人</li></ul><p><strong>constitution</strong></p><ul><li>宪法，章程，体格</li></ul><p><strong>detach</strong></p><ul><li>v. 拆下，分离，脱离，分派</li></ul><p><strong>coherent</strong></p><ul><li>adj. 有条理的，<strong>连贯的</strong>，相干的，易于理解的</li></ul><p><strong>contemplative</strong></p><ul><li>adj. 沉思的，冥想的</li><li>n. 宗教思想家</li></ul><hr><p><strong>respected professor</strong></p><ul><li>令人尊敬的教授</li></ul><p><strong>identify as</strong></p><ul><li>把…视为</li></ul><p><strong>mind and matter</strong></p><ul><li>精神和物质</li></ul><p><strong>separate</strong></p><ul><li>分离</li></ul><p><strong>tend to proceed from the assumption</strong></p><ul><li>tend to 倾向于</li><li>proceed from 出发</li><li>assumption 假设</li><li>proceed v. 开展行动，来自，前往; n. 收入，收益</li></ul><p><strong>a sharp distinction</strong></p><ul><li>一个明显的区别</li></ul><p><strong>simple lives inside the skull</strong></p><ul><li>这个simple表示简单</li><li>但是可以引申为： 仅仅，只</li></ul><p><strong>recall</strong></p><ul><li>回想起，召回，收回</li><li>记忆力，记性，召回，撤销</li></ul><p><strong>confine</strong></p><ul><li>限制，局限</li><li>边界，限制</li></ul><p><strong>irrespective</strong></p><ul><li>adj. 不顾</li></ul><p><strong>respective</strong></p><ul><li>adj. 各自的，分别的</li></ul><p><strong>experimental</strong></p><ul><li>实验的</li></ul><p><strong>but even then</strong></p><ul><li>即使这样</li></ul><p><strong>presume</strong></p><ul><li>假设，摄像，料想</li></ul><p><strong>enquiry</strong></p><ul><li>n. 查询，询问</li></ul><p><strong>over time</strong></p><ul><li>超时</li><li>随时间过去</li></ul><p><strong>assaulted</strong></p><ul><li>武力攻击，袭击，解决</li></ul><p><strong>witness</strong></p><ul><li>目击者</li><li>目睹，见证</li></ul><p><strong>experiment</strong></p><ul><li>实验</li></ul><p><strong>epileptic</strong></p><ul><li>癫痫病</li></ul><p><strong>billow</strong></p><ul><li>n. 巨浪</li><li>v. 翻腾</li></ul><p><strong>distress</strong></p><ul><li>n. 忧虑，悲伤，贫困</li><li>v. 使悲伤，使忧虑</li></ul><p><strong>diffusion</strong></p><ul><li>n. 扩散，传播</li></ul><p><strong>dilute</strong></p><ul><li>v. 稀释，冲淡，削弱，降低</li><li>adj. 稀释了的，淡化了的</li></ul><hr><p><strong>numerical</strong></p><ul><li>adj. 数字的，用数字表示的</li></ul><p><strong>wipe away</strong></p><ul><li>擦去</li></ul><p><strong>vital contextual</strong></p><ul><li>vital 至关重要</li><li>contextual <strong>上下文</strong></li><li>至关重要的上下文</li></ul><p><strong>backdrop</strong></p><ul><li>幕布，背景</li><li>位于…后面</li></ul><p><strong>domestic dispute</strong></p><ul><li>内部争端</li><li>家庭暴力</li></ul><p><strong>reluctant</strong></p><ul><li>adj. 勉强的，不情愿的</li></ul><p><strong>more over</strong></p><ul><li>adv. 此外，而且</li></ul><p><strong>is there a way of</strong></p><ul><li>有方法吗</li></ul><p><strong>reconcile</strong></p><ul><li>v. 协调，和解</li></ul><p><strong>in ward</strong></p><ul><li>内心的，精神的</li><li>内向，想自己</li><li>内部，心脏</li></ul><p><strong>the answer lay in dialogue</strong></p><ul><li>the answer lay in 答案就在</li><li>dialogue 对话中</li></ul><p><strong>evaluate</strong></p><ul><li>评估，评价，估值</li></ul><p><strong>existence</strong></p><ul><li>存在，生活</li></ul><p><strong>luminous</strong></p><ul><li>夜光的，光亮的，发光的</li></ul><p><strong>struggle to summary your thought</strong></p><ul><li>struggle to <strong>努力</strong></li><li>summary 总结</li><li>努力总结你的想法</li></ul><p><strong>vivify</strong></p><ul><li>使生动，活跃</li></ul><p><strong>uncover</strong></p><ul><li>揭露，发现，发掘，挖出</li></ul><p><strong>conceive</strong></p><ul><li>构思，摄像，怀孕</li></ul><p><strong>depict as</strong></p><ul><li>描写成</li></ul><p><strong>by contrast</strong></p><ul><li>相比之下</li></ul><p><strong>emphasise</strong></p><ul><li>强调</li></ul><p><strong>scaffolding</strong></p><ul><li>脚手架</li></ul><hr><p><strong>a grimmer example</strong></p><ul><li>更严峻(残酷)的栗子</li></ul><p><strong>solitary confinement in prisons</strong></p><ul><li>solitary <strong>独自的</strong></li><li>监狱中的单独监禁</li></ul><p><strong>introspection</strong></p><ul><li>内省，反省</li></ul><p><strong>dissolve</strong></p><ul><li>解散，消失，溶解</li><li>淡出</li></ul><p><strong>punish</strong></p><ul><li>处罚，自责</li></ul><p><strong>anxiety</strong></p><ul><li>焦虑</li></ul><p><strong>insomnia</strong></p><ul><li>失眠</li></ul><p><strong>inadequacy</strong></p><ul><li>不充分，不足，缺乏信心</li></ul><p><strong>distorted</strong></p><ul><li>变形的，扭曲的</li><li>使变形，扭曲，曲解</li></ul><p><strong>deprived</strong></p><ul><li>贫困的</li><li><strong>剥夺</strong></li></ul><p><strong>embody</strong></p><ul><li>具体表现，体现，收录，包括，代表</li></ul><p><strong>phase</strong></p><ul><li>阶段，时期</li></ul><p><strong>but for the most part</strong></p><ul><li>在大多数情况下</li></ul><hr><p><strong>consummate</strong></p><ul><li>完成，实现</li></ul><p><strong>bystander</strong></p><ul><li>局外人，旁观者</li></ul><p><strong>purport</strong></p><ul><li>声称</li></ul><p><strong>inscribe</strong></p><ul><li>雕刻，印写</li></ul><p><strong>contour</strong></p><ul><li>轮廓，外形</li></ul><p><strong>inform</strong></p><ul><li>影响</li></ul><p><strong>forge</strong></p><ul><li>形成，缔造</li></ul><p><strong>crucible</strong></p><ul><li>坩埚，熔炉</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 百题留念</title>
    <link href="http://example.com/2022/08/22/%E3%80%90LeetCode%E3%80%91%E7%99%BE%E9%A2%98%E7%95%99%E5%BF%B5/"/>
    <id>http://example.com/2022/08/22/%E3%80%90LeetCode%E3%80%91%E7%99%BE%E9%A2%98%E7%95%99%E5%BF%B5/</id>
    <published>2022-08-22T14:19:16.191Z</published>
    <updated>2022-08-23T03:56:06.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="后日谈♎">后日谈♎</h2><p>不知不觉已经参加在LeetCode上刷了一百题啦！！！</p><p>该成就于2022/8/22达成！</p><img src="/2022/08/22/%E3%80%90LeetCode%E3%80%91%E7%99%BE%E9%A2%98%E7%95%99%E5%BF%B5/image-20220822222053312.png" alt="image-20220822222053312" style="zoom:50%;"><img src="/2022/08/22/%E3%80%90LeetCode%E3%80%91%E7%99%BE%E9%A2%98%E7%95%99%E5%BF%B5/image-20220822222105104.png" alt="image-20220822222105104" style="zoom:50%;"><p>用时27天！平均每天3.74T!!!</p><img src="/2022/08/22/%E3%80%90LeetCode%E3%80%91%E7%99%BE%E9%A2%98%E7%95%99%E5%BF%B5/image-20220822222204107.png" alt="image-20220822222204107" style="zoom:50%;"><p>中等题继上次60题后与简单分庭抗礼后，这一次实现了反超！！想不到，你这个萌新还是实力派！</p><hr><p>目前的大部分题型已经刷过啦！</p><p>包括热门tag</p><ul><li>bfs</li><li>dfs</li><li>并查集</li><li>二分</li><li>hash</li><li>bst</li><li>无向图</li><li>数学</li><li>dp</li><li>递归</li><li>迭代</li></ul><p>但还是有一些处于知识盲区，包括但不限于：</p><ul><li>有向图</li><li>路径分析</li><li>线段树</li><li>平衡树</li><li>红黑树</li><li>B+树</li><li>优先队列</li><li>堆</li><li>状态转移</li></ul><hr><p>周赛目前也是参加了三场！</p><ul><li>84场双赛 2372/4575 48.2%</li><li>85双赛 1681/4193 60%</li><li>307场周赛 2436/7064 65.5%</li></ul><p>总体而言，还是有所进步的！！</p><hr><p>最近也学了些黑科技：</p><ul><li>倒序并查集</li><li>查分数组</li><li>回溯构造</li><li>拓扑排序</li><li>图问题</li></ul><hr><p>希望两百把的时候，能过T3吧！目前的计划是：</p><ul><li>周赛+双赛</li><li>每日一题</li><li>LeetCode75 II</li></ul><p>满足以上条件，我会对目前做过的所有题进行复盘！(一天大概10道)</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">一伯题啦！</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>数据分析实例--随机抽取微信接龙人员</title>
    <link href="http://example.com/2022/08/22/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%AE%9E%E4%BE%8B%E9%9A%8F%E6%9C%BA%E9%80%89%E5%8F%96%E5%BE%AE%E4%BF%A1%E6%8E%A5%E9%BE%99%E7%9A%84%E4%BA%BA%E6%95%B0/"/>
    <id>http://example.com/2022/08/22/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%AE%9E%E4%BE%8B%E9%9A%8F%E6%9C%BA%E9%80%89%E5%8F%96%E5%BE%AE%E4%BF%A1%E6%8E%A5%E9%BE%99%E7%9A%84%E4%BA%BA%E6%95%B0/</id>
    <published>2022-08-22T13:16:59.719Z</published>
    <updated>2022-08-22T13:19:20.874Z</updated>
    
    <content type="html"><![CDATA[<h2 id="案例-v2">案例</h2><p>数据分析，要求从微信接龙中随机抽取<code>35</code>名选手参加毕业典礼。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params">s:<span class="built_in">str</span>,k:<span class="built_in">int</span>=<span class="number">35</span></span>)-&gt;<span class="literal">None</span>:</span><br><span class="line"></span><br><span class="line">    hashmap=defaultdict(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(s) <span class="keyword">as</span> f:</span><br><span class="line">        nameList=f.readlines()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nameList:</span><br><span class="line">        hashmap[val[<span class="number">0</span>]]=(val:=i.split(<span class="string">&quot;.&quot;</span>))[<span class="number">1</span>].strip(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> random.sample(<span class="built_in">range</span>(<span class="number">1</span>,(l:=<span class="built_in">len</span>(hashmap))+<span class="number">1</span>),l-k <span class="keyword">if</span> l&gt;k <span class="keyword">else</span> <span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span>(hashmap[<span class="built_in">str</span>(i)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">solve(<span class="string">r&quot;C:\Users\lenovo\Desktop\新建 XLS 工作表.txt&quot;</span>)</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
