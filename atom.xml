<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岁染</title>
  <icon>https://www.gravatar.com/avatar/7228219e90ece9b38ea5921da1fcc500</icon>
  <subtitle>别来无恙，你在心上</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-27T17:06:40.711Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Kagura</name>
    <email>651421775@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【深度学习实战】基于LSTM+CNN的厄尔尼诺现象预测</title>
    <link href="http://example.com/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/"/>
    <id>http://example.com/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/</id>
    <published>2022-10-27T15:40:15.851Z</published>
    <updated>2022-10-27T17:06:40.711Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Background">Background</h2><h3 id="一、什么是ENSO现象">一、什么是ENSO现象</h3><p><strong>ENSO</strong>（El Niño-Southern Oscillation）是发生于赤道东太平洋地区的风场和海面温度震荡。ENSO是低纬度的海-气相互作用现象，在海洋方面表现为厄尔尼诺-拉尼娜的转变，在大气方面表现为南方涛动。</p><h3 id="二、ENSO现象有什么影响">二、ENSO现象有什么影响</h3><p>包括厄尔尼诺现象及拉尼娜现象在内的厄尔尼诺-南方涛动现象会造成全球性的气温及降水变化。例如当厄尔尼诺现象发生时，南美洲地区会出现暴雨，而东南亚、澳大利亚则出现干旱。依赖农业和渔业的国家，特别是太平洋附近的发展中国家，通常受影响最大。</p><h3 id="三、数据集介绍">三、数据集介绍</h3><p>Nino3.4指数定义为Nino3.4区（170°W-120°W，5°S-5°N）区域平均海温距平，气候平均值是1981-2010年。可以在美国国家海洋大气管理局网站（<a href="https://psl.noaa.gov/data/timeseries/monthly/NINO34/%EF%BC%89%E4%B8%8B%E8%BD%BD%E3%80%82">https://psl.noaa.gov/data/timeseries/monthly/NINO34/）下载。</a></p><p>MEI.v2指数利用海平面气压、海表温度、地面风的纬向分量、地面风的经向分量、热带太平洋海盆（30°S-30°N和100°E-70°W）上空的长波辐射五个变量计算得到。可在美国国家海洋大气管理局网站（<a href="https://psl.noaa.gov/enso/mei/%EF%BC%89%E4%B8%8B%E8%BD%BD%E3%80%82">https://psl.noaa.gov/enso/mei/）下载。</a></p><hr><h2 id="基于LSTM-CNN的时间序列预测">基于LSTM+CNN的时间序列预测</h2><p>Nino指数能够在一定程度上反映厄尔尼诺或者拉尼娜现象，数据表现为一段时间序列。</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234607654.png" alt="image-20221027234607654" style="zoom:50%;"><p>针对该时间序列数据，我们可以对未来短期的Nino指数变化进行推测。时间序列处理算法按照算法类型大致可分为经典算法、深度学习算法、机器学习算法、启发式算法，按照数据维度可分为频域处理方法、时域处理方法。在本案例中，Nino指数是已经被处理好的数据，且由于数据量较少，经典算法和机器学习算法可能无法给出理想的解决办法。</p><p>在数据探索性分析(EDA)和特征工程(FE)之后，我们采用<strong>一维卷积神经网络</strong>对其进行预测。在设定一个窗口大小后，采用滑动窗口的思想，对原始数据的信息进行学习，得到的结果如下:</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234643608.png" alt="image-20221027234643608" style="zoom:50%;"><p>CNN虽然在原始数据集上有着不错的表现，但是在未来数据的预测中，效果却不是那么好。这是由于CNN注重局部特征，而在未来数据的推测中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo>=</mo><mi>C</mi><mi>N</mi><mi>N</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mi>w</mi><mi>s</mi><mo>−</mo><mn>1</mn><mo>:</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f[n]=CNN(f[n-ws-1:n-1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">CNN</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">])</span></span></span></span>，数据会倾向于收敛或是震荡。</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234704487.png" alt="image-20221027234704487" style="zoom:50%;"><p>为了解决模型无法从过往的信息中学习经验的问题，我们引入了LSTM长短期记忆模型，以期过往的经验模式能够为我们的预测提供决策。</p><p>基于LSTM模型得到的预测结果如下图所示：</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234720496.png" alt="image-20221027234720496" style="zoom:50%;"><p>相较于CNN模型，该模型的均方根误差(MSE)较高，拟合效果不如原始CNN，但它在未来趋势上的映射要优于CNN。可以发现，未来三年的特征模式与2010-2012年的模式类似。</p><p>既然CNN注重局部信息，LSTM又能保存长期信息，那如果采用CNN+LSTM的方式能不能有一些新的进展呢？</p><p>基于这个思想，我们采用了下图的模型作为预测模型。</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234756200.png" alt="image-20221027234756200" style="zoom:50%;"><p>两层CNN用于学习局部特征，两层LSTM用于学习长时间特征。</p><p>在激活函数方面，我们注意到原始数据有大量的负值，因而采用了对负值比较友好的LeakyReLu激活函数。</p><p>每层卷积之后，添加一个池化层，以期达到减少参数量和增强模型泛化能力(非线性能力)的作用。</p><p>最后一层通过多层感知机(MLP)对数据维度进行映射，得到我们的输出结果。</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234815985.png" alt="image-20221027234815985" style="zoom:50%;"><p>我们发现，该模型在前期的拟合上精度不是那么高，通过测试发现这是由于LeakReLu激活函数引起的现象。但是该模型在后半段已经有着可以接受的精度了。</p><p>由于模型比较简单，且训练样本较少，总所周知数据决定了模型的上限，为了解决这个问题，我们可以采用上采样的方式处理原始数据，以期得到更多的数据集。</p><p>诶，但是我们就是没有做，因为上采样也是基于该数据的，在误差将会被扩大。</p><p>于是我们采用了一种比较偷懒的方法，软投票Soft Voting来对单模进行集成，以期获得更好的学习效果和泛化能力。</p><p>我们通过三个模型(CNN、CNN+LSTM(LeakyReLu,三层CNN)、CNN+LSTM(用池化代替CNN的LeakyReLU,两层CNN)进行学习，根据损失误差分别赋予各自权重，最后的结果由三个模型投票得到。</p><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221027234839775.png" alt="image-20221027234839775" style="zoom:50%;"><p>可以发现，在未来，23年~24年有可能会发生拉尼娜现象。</p><hr><h2 id="代码实现">代码实现</h2><p>1️⃣<strong>数据预处理阶段</strong></p><p>首先是导入我们的模块，这部分不做过多的赘述~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><p>EDA阶段，读取数据并展示，我们选取了<code>1982~2021</code>年共四十年的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data=pd.read_excel(<span class="string">r&quot;data1.xlsx&quot;</span>)</span><br><span class="line">data.head()</span><br></pre></td></tr></table></figure><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221028001523253.png" alt="image-20221028001523253" style="zoom:50%;"><p>数据的维度是<code>13*40</code>，第一列并不是我们所需要的。</p><p>为了方便处理，可以通过<code>np.ravel()</code>函数对数据进行展平。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=np.array(data.drop(<span class="string">&quot;val&quot;</span>,axis=<span class="number">1</span>).values).ravel()</span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.plot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/27/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91LSTM+CNN%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A2%84%E6%B5%8B/image-20221028001705758.png" alt="image-20221028001705758" style="zoom:50%;"><p>我们将数据划分为训练集和测试集:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 划分数据集</span></span><br><span class="line">test_size=<span class="number">12</span></span><br><span class="line">train_set=data[:-test_size]</span><br><span class="line">test_set=data[-test_size:]</span><br></pre></td></tr></table></figure><p>在下一步的操作中，我们将会对数据进行归一化处理(其实也没有必要啦，因为只有单维度的数据，量纲影响不是那么关键)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"><span class="comment"># 归一化处理</span></span><br><span class="line">scaler = MinMaxScaler(feature_range=(-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">train_norm = scaler.fit_transform(train_set.reshape(-<span class="number">1</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>为了能够输入模型，需要构造一个可迭代的数据集！这里可以选择继承<code>DataLoader</code>类，或者自己设定一个数据迭代器！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转换成 tensor</span></span><br><span class="line">train_norm = torch.FloatTensor(train_norm).view(-<span class="number">1</span>)</span><br><span class="line">window_size = <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">input_data</span>(<span class="params">seq,ws</span>):</span><br><span class="line">    out = []</span><br><span class="line">    L = <span class="built_in">len</span>(seq)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(L-ws):</span><br><span class="line">        window = seq[i:i+ws]</span><br><span class="line">        label = seq[i+ws]</span><br><span class="line">        out.append((window, label))</span><br><span class="line">    <span class="keyword">return</span> out</span><br><span class="line">train_data = input_data(train_norm,window_size)</span><br><span class="line"><span class="comment"># 打印一组数据集</span></span><br><span class="line">train_data[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><code>window_size</code>表示了滑动窗口的大小。我们将滑动窗口内的数据作为<code>x</code>，输出结果作为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span>，与真实的<code>y</code>进行比较。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(tensor([-<span class="number">0.3926</span>, -<span class="number">0.4976</span>, -<span class="number">0.6175</span>, -<span class="number">0.7325</span>, -<span class="number">0.7338</span>, -<span class="number">0.6180</span>, -<span class="number">0.4849</span>, -<span class="number">0.3253</span>,</span><br><span class="line">         -<span class="number">0.0604</span>,  <span class="number">0.1461</span>,  <span class="number">0.2669</span>,  <span class="number">0.3300</span>]),</span><br><span class="line"> tensor(<span class="number">0.3674</span>))</span><br></pre></td></tr></table></figure><p>总结一下，在EDA阶段，我们做了：</p><p>✅ 数据格式处理，筛选出需要的数据</p><p>✅ 对数据分布进行探查</p><p>✅ 数据归一化</p><p>✅ 划分训练集</p><p>✅ 构建数据生成器</p><hr><h3 id="2️⃣模型准备">2️⃣模型准备</h3><p>在这阶段中，我们采用软投票的方式对多个模型的结果进行修正，具体内容可以见上文。</p><p>那我们先介绍模型一！正宗CNN！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CNN_Net2</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(CNN_Net2, self).__init__()</span><br><span class="line">        self.hidden=nn.Sequential(</span><br><span class="line">            nn.Conv1d(<span class="number">12</span>,<span class="number">64</span>,<span class="number">1</span>),</span><br><span class="line">            nn.AdaptiveAvgPool1d(output_size=<span class="number">32</span>),</span><br><span class="line">            nn.Conv1d(<span class="number">64</span>,<span class="number">128</span>,<span class="number">1</span>),</span><br><span class="line">            nn.AdaptiveAvgPool1d(output_size=<span class="number">32</span>),</span><br><span class="line"></span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Linear(<span class="number">128</span>*<span class="number">32</span>,<span class="number">512</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">512</span>,<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Linear(<span class="number">256</span>,<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        N, T = x.shape[<span class="number">0</span>], x.shape[<span class="number">1</span>]</span><br><span class="line">        x = x.transpose(<span class="number">1</span>, <span class="number">2</span>)  </span><br><span class="line">        <span class="keyword">return</span> self.hidden(x)</span><br></pre></td></tr></table></figure><p>一如既往的简洁明快，<code>一维卷积</code>也就是<code>nn.Conv1d</code>要求的输入格式为：<code>[bs,f,n]</code>，<code>f</code>为特征维度。而输入<code>nn.Linear()</code>的数据则要求是一维的，因此需要将其<code>展平</code>。</p><p>至于<code>x</code>为什么要做个<code>transpose</code>交换第二和第三维度，是因为我们输入的数据格式为<code>[bs,1,ws]</code>，这在后面会提到，这里按下不表。</p><p>下面是我们的模型二，CNN+LSTM模型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, output_dim=<span class="number">1</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(CNN, self).__init__()</span><br><span class="line">        self.relu = nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">        self.conv1 = nn.Conv1d(<span class="number">12</span>, <span class="number">64</span>, <span class="number">1</span>)</span><br><span class="line">        self.lr=nn.LeakyReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">        self.maxpool1 = nn.AdaptiveAvgPool1d(output_size=<span class="number">32</span>)</span><br><span class="line">        self.conv2 = nn.Conv1d(<span class="number">64</span>, <span class="number">128</span>, <span class="number">1</span>)</span><br><span class="line">        self.maxpool2 = nn.AdaptiveAvgPool1d(output_size=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">        self.flatten = nn.Flatten()</span><br><span class="line">        self.lstm1 = nn.LSTM(<span class="number">128</span> * <span class="number">32</span>, <span class="number">1024</span>)</span><br><span class="line">        self.lstm2 = nn.LSTM(<span class="number">1024</span>, <span class="number">256</span>)</span><br><span class="line">        self.fc = nn.Linear(<span class="number">256</span>, <span class="number">128</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">64</span>, <span class="number">32</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">32</span>, output_dim)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">       </span><br><span class="line">        N, T = x.shape[<span class="number">0</span>], x.shape[<span class="number">1</span>]</span><br><span class="line">        x = x.transpose(<span class="number">1</span>, <span class="number">2</span>)  </span><br><span class="line"></span><br><span class="line">        x = self.conv1(x)  <span class="comment"># torch.Size([1, 64, 1])</span></span><br><span class="line">        x=self.lr(x)</span><br><span class="line">        x = self.maxpool1(x)  <span class="comment"># torch.Size([1, 64, 32])</span></span><br><span class="line">        x = self.conv2(x)  <span class="comment"># torch.Size([1, 128, 32])</span></span><br><span class="line">        x=self.lr(x)</span><br><span class="line">        x = self.maxpool2(x)  <span class="comment"># torch.Size([1, 128, 32])</span></span><br><span class="line">        <span class="comment"># x = self.conv3(x)  # torch.Size([32, 300, 298])</span></span><br><span class="line">        <span class="comment"># x = self.maxpool3(x)  # torch.Size([32, 300, 100])</span></span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        <span class="comment"># 注意Flatten层后输出为(N×T,C_new)，需要转换成(N,T,C_new)</span></span><br><span class="line">        _, C_new = x.shape</span><br><span class="line">        x = x.view(N, T, C_new)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># LSTM部分</span></span><br><span class="line">        x, h = self.lstm1(x)</span><br><span class="line">        x, h = self.lstm2(x)</span><br><span class="line">        <span class="comment"># 注意这里只使用隐层的输出</span></span><br><span class="line">        x, _ = h</span><br><span class="line">  </span><br><span class="line">        x = self.fc(x.reshape(-<span class="number">1</span>,))</span><br><span class="line">        x = self.relu(x)</span><br><span class="line">        x = self.fc1(x)</span><br><span class="line">        x = self.relu(x)</span><br><span class="line">        x = self.fc2(x)</span><br><span class="line">        x = self.relu(x)</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><p>池化的操作会让第三维度有所变化，而输入LSTM的模型的数据维度应该是<code>[bs,F,T]</code>，其中<code>F</code>表示初始序列长度，<code>T</code>表示特征变化，在这里，经过卷积和池化后的数据维度为：<code>[1,128,32]</code>，经过<code>Flatten()</code>操作后，数据的维度变成<code>[bs,F*T]</code>也就是<code>[1,1*128*32]</code>,我们还需要将其转化为LSTM模型接受的维度。注意CNN和LSTM接收维度一个是<code>dim=1</code>一个是<code>dim=2</code>。</p><p>对于<code>LSTM</code>，在<code>Pytorch</code>中，有如下的输出关系：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo separator="true">,</mo><mi>h</mi><mo>=</mo><mi>L</mi><mi>S</mi><mi>T</mi><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y,h=LSTM(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.10903em;">STM</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>我们需要的最终结果是<code>h</code>里的第一个维度，但每次传递的依旧是<code>y</code>（实际上h[0]==y)。</p><hr><h3 id="3️⃣网络训练阶段">3️⃣网络训练阶段</h3><p>在本阶段，我们需要设置的有：</p><ul><li>设备(GPU)</li><li>损失函数</li><li>优化器</li><li>模型存储路径</li><li>训练参数<ul><li>精度</li><li>误差值</li><li>迭代次数等</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">device=<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">torch.manual_seed(<span class="number">101</span>)</span><br><span class="line">model =CNN()</span><br><span class="line">model=model.to(device)</span><br><span class="line">Mloss=<span class="number">100000</span></span><br><span class="line">path=<span class="string">&quot;./best_model.pth&quot;</span></span><br><span class="line"><span class="comment"># 设置损失函数,这里使用的是均方误差损失</span></span><br><span class="line">criterion = nn.MSELoss()</span><br><span class="line"><span class="comment"># 设置优化函数和学习率lr</span></span><br><span class="line">optimizer = torch.optim.Adam(model.parameters(), lr=<span class="number">0.001</span>) </span><br><span class="line"><span class="comment"># 设置训练周期</span></span><br><span class="line">epochs = <span class="number">100</span></span><br><span class="line">criterion=criterion.to(device)</span><br><span class="line">model.train()</span><br><span class="line">start_time = time.time()</span><br><span class="line">total_loss=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>检查你的<code>cuda</code>是否可用，如果可用，将<code>损失函数</code>和<code>模型</code>全部搬到<code>cuda</code>上处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="keyword">for</span> seq, y_train <span class="keyword">in</span> train_data:</span><br><span class="line">        <span class="comment"># 每次更新参数前都梯度归零和初始化</span></span><br><span class="line">        seq,y_train=seq.to(device),y_train.to(device)</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        <span class="comment"># 注意这里要对样本进行reshape，</span></span><br><span class="line">        <span class="comment"># 转换成conv1d的input size（batch size, channel, series length）</span></span><br><span class="line">        y_pred = model(seq.reshape(<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>))</span><br><span class="line">        loss = criterion(y_pred, y_train)</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        total_loss+=loss</span><br><span class="line">    <span class="keyword">if</span> total_loss.tolist()&lt;Mloss:</span><br><span class="line">        Mloss=total_loss.tolist()</span><br><span class="line">        torch.save(model.state_dict(),path)</span><br><span class="line">        Model_Loss[<span class="number">0</span>]=total_loss.tolist()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Saving&quot;</span>)</span><br><span class="line">    total_loss=<span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Epoch: <span class="subst">&#123;epoch+<span class="number">1</span>:<span class="number">2</span>&#125;</span> Loss: <span class="subst">&#123;loss.item():<span class="number">10.8</span>f&#125;</span>&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;\nDuration: <span class="subst">&#123;time.time() - start_time:<span class="number">.0</span>f&#125;</span> seconds&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以注意到，我们在每次训练的时候，都会从一个迭代器中读取数据，这个迭代器可以是继承自<code>DataLoader</code>的，也可以是自己设定的。将数据搬到<code>device</code>上后，我们就需要按照以下模板训练网络：</p><p>1️⃣ 优化器梯度归零</p><p>2️⃣ 利用模型对<code>bx</code>进行训练，得到<code>pred</code></p><p>3️⃣ 通过损失函数计算<code>loss(pred,by)</code></p><p>4️⃣ 损失函数反向更新梯度</p><p>5️⃣ 更新优化器</p><p>6️⃣ 记录误差与精度，并在设定好的规则下存储最优模型参数</p><p>我们可以将这个阶段封装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Train</span>(<span class="params">model,seed=<span class="number">1</span></span>):</span><br><span class="line">    device=<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">    model=model.to(device)</span><br><span class="line">    Mloss=<span class="number">100000</span></span><br><span class="line">    path=<span class="string">&quot;./best_model%d.pth&quot;</span>%seed</span><br><span class="line">    <span class="comment"># 设置损失函数,这里使用的是均方误差损失</span></span><br><span class="line">    criterion = nn.MSELoss()</span><br><span class="line">    <span class="comment"># 设置优化函数和学习率lr</span></span><br><span class="line">    optimizer = torch.optim.Adam(model.parameters(), lr=<span class="number">0.001</span>) </span><br><span class="line">    <span class="comment"># 设置训练周期</span></span><br><span class="line">    epochs = <span class="number">100</span></span><br><span class="line">    criterion=criterion.to(device)</span><br><span class="line">    model.train()</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    total_loss=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">        <span class="keyword">for</span> seq, y_train <span class="keyword">in</span> train_data:</span><br><span class="line">            <span class="comment"># 每次更新参数前都梯度归零和初始化</span></span><br><span class="line">            seq,y_train=seq.to(device),y_train.to(device)</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            <span class="comment"># 注意这里要对样本进行reshape，</span></span><br><span class="line">            <span class="comment"># 转换成conv1d的input size（batch size, channel, series length）</span></span><br><span class="line">            y_pred = model(seq.reshape(<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>))</span><br><span class="line">            loss = criterion(y_pred, y_train)</span><br><span class="line">            loss.backward()</span><br><span class="line">            optimizer.step()</span><br><span class="line">            total_loss+=loss</span><br><span class="line">        <span class="keyword">if</span> total_loss.tolist()&lt;Mloss:</span><br><span class="line">            Mloss=total_loss.tolist()</span><br><span class="line">            torch.save(model.state_dict(),path)</span><br><span class="line">            Model_Loss[seed]=total_loss.tolist()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Saving&quot;</span>)</span><br><span class="line">        total_loss=<span class="number">0</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Epoch: <span class="subst">&#123;epoch+<span class="number">1</span>:<span class="number">2</span>&#125;</span> Loss: <span class="subst">&#123;loss.item():<span class="number">10.8</span>f&#125;</span>&#x27;</span>)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;\nDuration: <span class="subst">&#123;time.time() - start_time:<span class="number">.0</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> model</span><br></pre></td></tr></table></figure><p>这样，方便我们对每个模型进行训练了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">m2=CNN_Net2()</span><br><span class="line">m2=Train(m2,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">m1=CNN_Net1()</span><br><span class="line">m1=Train(m1,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">m0=CNN()</span><br><span class="line">m0=Train(m0,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="4️⃣结果展示阶段">4️⃣结果展示阶段</h3><p>这个阶段要做的事情，就是让模型调成<code>eval()</code>模式，并且在冻结梯度更新的情况下，对数据进行预测。</p><p>我们的工作有：</p><ul><li>加载最优结果模型</li><li>根据现有数据计算得到预测曲线</li><li>根据预测曲线预测未来三年的结果</li><li>拼接数据并展示</li><li>对每个数据利用多个模型进行决策</li></ul><p>值得注意的是，我们之前做了归一化，最后的结果要返回去。需要借助<code>scaler.inverse_transform</code>函数。</p><p>然后我们可以通过<code>np.arange()</code>生成时间序列，作为坐标轴。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Show</span>(<span class="params">model,title=<span class="string">&quot;CNN+LSTM&quot;</span></span>):</span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    model=model.cpu()</span><br><span class="line">    model.state_dict=torch.load(path)</span><br><span class="line">    preds=train_norm</span><br><span class="line">    PreV=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">480</span>):</span><br><span class="line">        seq=torch.FloatTensor(preds[i:i+window_size]).reshape(<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                v=model(seq).item()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            PreV.append(v)</span><br><span class="line">            </span><br><span class="line">    <span class="comment"># 预测未来36个月</span></span><br><span class="line">    preds=PreV[-window_size:]</span><br><span class="line">    future=<span class="number">36</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(future):</span><br><span class="line">        seq=torch.FloatTensor(preds[i:i+window_size]).reshape(<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">            preds.append(model(seq).item())</span><br><span class="line">            </span><br><span class="line">    PreV=train_norm[:window_size ].tolist()+PreV+preds[window_size:]</span><br><span class="line">    true_predictions = scaler.inverse_transform(np.array(PreV).reshape(-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="built_in">print</span>(true_predictions.shape)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 对比真实值和预测值</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">    plt.grid(<span class="literal">True</span>)</span><br><span class="line">    x1=np.arange(<span class="string">&#x27;1982-01-01&#x27;</span>, <span class="string">&#x27;2022-01-01&#x27;</span>, dtype=<span class="string">&#x27;datetime64[M]&#x27;</span>).astype(<span class="string">&#x27;datetime64[D]&#x27;</span>)</span><br><span class="line">    plt.plot(x1,data,label=<span class="string">&#x27;real&#x27;</span>)</span><br><span class="line">    x2 = np.arange(<span class="string">&#x27;1982-01-01&#x27;</span>, <span class="string">&#x27;2025-02-01&#x27;</span>, dtype=<span class="string">&#x27;datetime64[M]&#x27;</span>).astype(<span class="string">&#x27;datetime64[D]&#x27;</span>).reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">    plt.plot(x2,true_predictions,label=<span class="string">&quot;pre&quot;</span>)</span><br><span class="line">    plt.legend()</span><br><span class="line">    plt.title(title)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>在软投票方面，我们只需要做以下修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">preds=train_norm</span><br><span class="line">PreV=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">480</span>):</span><br><span class="line">    seq=torch.FloatTensor(preds[i:i+window_size]).reshape(<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            v=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> i,m <span class="keyword">in</span> <span class="built_in">enumerate</span>(model_list):</span><br><span class="line">                v+=m(seq).item()*Model_Loss[i]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        PreV.append(v)</span><br></pre></td></tr></table></figure><p><code>Model_Loss</code>是三个模型的权重，算法为计算各自占比的逆事件的占比，简单作为权重放上去了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预测未来36个月</span></span><br><span class="line">preds=PreV[-window_size:]</span><br><span class="line">future=<span class="number">36</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(future):</span><br><span class="line">    seq=torch.FloatTensor(preds[i:i+window_size]).reshape(<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        v=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i,m <span class="keyword">in</span> <span class="built_in">enumerate</span>(model_list):</span><br><span class="line">             v+=m(seq).item()*Model_Loss[i]</span><br><span class="line">        preds.append(v)</span><br><span class="line">            </span><br><span class="line">PreV=train_norm[:window_size ].tolist()+PreV+preds[window_size:]</span><br><span class="line">true_predictions = scaler.inverse_transform(np.array(PreV).reshape(-<span class="number">1</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Background&quot;&gt;Background&lt;/h2&gt;
&lt;h3 id=&quot;一、什么是ENSO现象&quot;&gt;一、什么是ENSO现象&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ENSO&lt;/strong&gt;（El Niño-Southern Oscillation）是发生于赤道东太平洋地区</summary>
      
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="深度学习" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Presentation 常用句型</title>
    <link href="http://example.com/2022/10/27/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91Presentation/"/>
    <id>http://example.com/2022/10/27/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91Presentation/</id>
    <published>2022-10-27T12:05:35.232Z</published>
    <updated>2022-10-27T13:44:17.680Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-make-a-presentation">How to make a presentation?</h2><hr><h3 id="Part-One-Beginning">Part One  ---- Beginning</h3><p>🌟I’ am Chery. Today I’m going to give a short presentation on…</p><p>🌟 My name is Chery, it’s my pleasure to stand here and make a short presentation on…</p><p>🌟 I’m Chery, The topic of my presentation is …</p><p>🌟 I’m Chery, Today I will be giving a short presentation on …</p><hr><h3 id="Part-Two-Overview">Part Two ---- Overview</h3><p>🌟 My presentation is in three parts.</p><p>🌟 My presentation is divided into three main sections.</p><p>🌟 Firstly, Secondly, Finally</p><p>🌟 take a look at</p><p>🌟 talk about</p><p>🌟 focus on</p><p>🌟 tell you something about the background</p><p>🌟 give you some facts and figures</p><p>🌟 fill you on the history of</p><p>🌟concentrate on</p><hr><h3 id="Part-Three-Asking-Question">Part Three ---- Asking Question</h3><p>🌟 Please feel free to interrupt me if you have any questions.</p><p>🌟 There will time for question at the end of the presentation.</p><p>🌟 I’d be grateful if you could ask me questions at the end of the presentation.</p><hr><h3 id="Part-Four-Main-Body">Part Four ---- Main Body</h3><p>🌟 Let’s look at</p><p>🌟 Here are some facts about</p><p>🌟 Here are some of the reasons for</p><p>🌟 Several factors contribute to</p><p>🌟 It has merits as well certain drawbacks. Let’s consider the</p><p>🌟 Let’s look at the pros and cons of</p><p>🌟 There are several types of</p><p>🌟 Let’s compare A with B</p><p>🌟 Here is an interesting graph / picture / piece of information</p><p>🌟 I’d like you to focus on this graph / table / image</p><hr><h3 id="Part-Five-Moving-From-one-point-to-another">Part Five ---- Moving From one point to another</h3><p>🌟 Let’s move on to…</p><p>🌟 I 'd like to turn to…</p><p>🌟 That’s all I have to say about …</p><p>🌟 Now I’d like to look at</p><p>🌟 This leads me to my next point</p><p>🌟 Now, I’ll focus on</p><p>🌟 Let’s look at another aspect of</p><p>🌟 Now Let’s consider another aspect</p><p>🌟 Let’s come to the next point.</p><hr><h3 id="Part-Six-Thanking-and-inviting-questions">Part Six ---- Thanking and inviting questions</h3><p>🌟 Thank you for listening , and now if there are any questions, I ’ d be pleased to answer them.</p><p>🌟 That brings me to the end of my presentation. Thank you or your attention. I’ll be glad to answer any questions you might have.</p><p>🌟 Would anyone like to ask questions?</p><p>🌟 Does anyone have any questions?</p><p>🌟 If any one has any questions, I’ll be glad to answer them.</p><hr><h3 id="Part-Seven-Handing-Question">Part Seven ---- Handing Question</h3><p>🌟 Does this answer your question?</p><p>🌟 Do you follow what I’m saying?</p><p>🌟 I hope this explains the situation to you.</p><p>🌟 I hope that was what you wanted to hear.</p><p>🌟 was my answer clear enough?</p><p>🌟 Have I clarified your doubt?</p><hr><h3 id="Part-Eight-Admit-your-shortcoming">Part Eight ---- Admit your shortcoming</h3><p>🌟 That’s a very good question. However, We don’t have much information about that and I can not give you an accurate answer.</p><p>🌟 That’s a very good question, However I’m not very sure about the answer. Would anyone in the audience like to answer the question?</p><p>🌟 It doesn’t matter / Never Mind</p><hr><h3 id="Part-Nine-Language-for-visuals">Part Nine ---- Language for visuals</h3><p>🌟 This graph shows you</p><p>🌟 Take a look at this</p><p>🌟 If you look at this, you will see</p><p>🌟I would like you to look at this</p><p>🌟 This chart illustrates the figures</p><p>🌟 This graph gives you a breakdown of</p><p>🌟 As you can see</p><p>🌟 This clearly shows</p><p>🌟 From this we can understand</p><p>🌟 This area of the chart is interesting</p><hr><h3 id="Part-Ten-summarizing">Part Ten ---- summarizing</h3><p>🌟 This brings me to the end of my presentation. I’ve talk about …</p><p>🌟 Well, That’s about it for now. We’ve talk about…</p><p>🌟 Here are the key points of today’s talk</p><p>🌟 Let us sum up the main ideas,</p><p>🌟 To summarize,</p><hr><h3 id="Part-Eleven-Ending">Part Eleven ---- Ending</h3><p>🌟 That brings us to the end of the presentation. Thank you for listening.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">How to make a presentation</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>基于Cartopy绘制海洋表面温度动态变化图</title>
    <link href="http://example.com/2022/10/26/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <id>http://example.com/2022/10/26/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/</id>
    <published>2022-10-26T08:09:30.159Z</published>
    <updated>2022-10-26T11:23:54.585Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础概念">基础概念</h2><p>1️⃣ <strong>电磁波谱</strong></p><p>2️⃣ <strong>布拉格共振</strong></p><p>3️⃣ <strong>瑞丽-金斯定律</strong></p><p>4️⃣ <strong>辐亮度与辐照度</strong></p><p><strong>5️⃣ 离水辐亮度与遥感反射比</strong></p><p>6️⃣ <strong>水平极化与垂直极化</strong></p><p>7️⃣ <strong>传感器</strong></p><hr><h2 id="应用">应用</h2><p><strong>热红外分裂窗思想</strong></p><p><strong>温度遥感原理思想</strong></p><p><strong>盐度遥感原理思想</strong></p><p><strong>水色遥感原理思想</strong></p><p><strong>海风遥感原理思想</strong></p><p>空间分辨率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">1&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>相当于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>30</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">30m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">30</span><span class="mord mathnormal">m</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.05</mn><mi mathvariant="normal">°</mi></mrow><annotation encoding="application/x-tex">0.05°</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">0.05°</span></span></span></span>相当于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.05</mn><mo>∗</mo><mn>60</mn><mo>∗</mo><mn>60</mn><mo>∗</mo><mn>30</mn><mo>=</mo><mn>5400</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">0.05*60*60*30=5400m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.05</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">60</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">60</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">30</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5400</span><span class="mord mathnormal">m</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">°</mi><mo>=</mo><mn>1</mn><mo>∗</mo><mn>60</mn><mo>∗</mo><mn>60</mn><mo>∗</mo><mn>30</mn><mo>=</mo><mn>108</mn><mi>k</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">1°=1*60*60*30=108km</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">1°</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">60</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">60</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">30</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">108</span><span class="mord mathnormal">km</span></span></span></span></p><p><strong>海洋水色遥感–2类水体遥感</strong></p><ul><li>难点</li><li>解决方案</li></ul><hr><h2 id="方案设计">方案设计</h2><p>选取一个感兴趣的海洋现象或参数，并设计一个遥感研究方案。要求给出利用的传感器类型，卫星数据和遥感数据。</p><ul><li>提出问题，研究意义</li><li>选用材料、数据</li><li>选用方法、模拟、实验、模型</li><li>做出哪些研究</li><li>得出结果(预期)</li><li>分析结果。寻找规律认识，讨论各类有点局限性，提出未来改进方向</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">海洋遥感</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="海洋遥感" scheme="http://example.com/tags/%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】HW2</title>
    <link href="http://example.com/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/"/>
    <id>http://example.com/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/</id>
    <published>2022-10-23T07:33:59.524Z</published>
    <updated>2022-10-29T18:21:32.294Z</updated>
    
    <content type="html"><![CDATA[<h1>HW2</h1><h2 id="Submission-requirements">Submission requirements:</h2><h3 id="Please-submit-your-solutions-to-our-class-website">Please submit your solutions to our class website.</h3><hr><h2 id="Part-I-written-assignment">Part I: written assignment</h2><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/wps2.jpg" alt="img" style="zoom:50%;"><p>a) Compute the Information Gain for Gender, Car Type and Shirt Size. (15 points)</p><p>b) Construct a decision tree with Information Gain. (10 points)</p><hr><p><strong>Answer A</strong></p><p><strong>整体熵</strong></p><table><thead><tr><th style="text-align:center">C0</th><th style="text-align:center">C1</th></tr></thead><tbody><tr><td style="text-align:center">10</td><td style="text-align:center">20</td></tr></tbody></table><p>根据公式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mi>i</mi><mi>n</mi></munderover><mi>p</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(s)=-\sum_i^nplog_2(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p><p>有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>10</mn><mn>20</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>10</mn><mn>20</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>10</mn><mn>20</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>10</mn><mn>20</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E(s)=-\frac{10}{20}log_2(\frac{10}{20})-\frac{10}{20}log_2(\frac{10}{20})\\=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>下面我们计算各个属性列的信息增益</p><p><code>Gender</code>属性列：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">C0</th><th style="text-align:center">C1</th></tr></thead><tbody><tr><td style="text-align:center">F</td><td style="text-align:center">6</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">6</td><td style="text-align:center">4</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>6</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>6</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.97095</mn></mrow><annotation encoding="application/x-tex">E(F)=-(\frac{6}{10})log_2(\frac{6}{10})-(\frac{4}{10})log_2(\frac{4}{10})\\=0.97095</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.97095</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>6</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>6</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.97095</mn></mrow><annotation encoding="application/x-tex">E(M)=-(\frac{6}{10})log_2(\frac{6}{10})-(\frac{4}{10})log_2(\frac{4}{10})\\=0.97095</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.97095</span></span></span></span></span></p><p>根据信息增益公式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A)=E(D)-E(D|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></span></p><p>可得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>10</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>10</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.029</mn></mrow><annotation encoding="application/x-tex">Gain(Gender)=E(s)-\frac{10}{20}*E(F)-\frac{10}{20}*E(M)\\=0.029</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.029</span></span></span></span></span></p><p>同理，<strong>CarType</strong>属性列</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">C0</th><th style="text-align:center">C1</th></tr></thead><tbody><tr><td style="text-align:center">F</td><td style="text-align:center">1</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">1</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">8</td><td style="text-align:center">0</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.81127</mn></mrow><annotation encoding="application/x-tex">E(F)=-(\frac{1}{4})log_2(\frac{1}{4})-(\frac{3}{4})log_2(\frac{3}{4})\\=0.81127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.81127</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>8</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>8</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>7</mn><mn>8</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>7</mn><mn>8</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.543564</mn></mrow><annotation encoding="application/x-tex">E(L)=-(\frac{1}{8})log_2(\frac{1}{8})-(\frac{7}{8})log_2(\frac{7}{8})\\=0.543564</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.543564</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E(S)=-(1)log_2(1)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>最终结果为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>C</mi><mi>a</mi><mi>r</mi><mi>T</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>4</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>8</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>8</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.6205</mn></mrow><annotation encoding="application/x-tex">Gain(CarType)=E(s)-p(F)E(F)-p(L)E(L)-p(S)E(S)\\=1-\frac{4}{20}*E(F)-\frac{8}{20}*E(L)-\frac{8}{20}*E(S)\\=0.6205</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6205</span></span></span></span></span></p><p>对于<code>Shirt Size</code>属性列</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">C0</th><th style="text-align:center">C1</th></tr></thead><tbody><tr><td style="text-align:center">E</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">3</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">3</td><td style="text-align:center">2</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E(E)=-(\frac{2}{4})log_2(\frac{2}{4})-(\frac{2}{4})log_2(\frac{2}{4})\\=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>4</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E(L)=-(\frac{2}{4})log_2(\frac{2}{4})-(\frac{2}{4})log_2(\frac{2}{4})\\=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>7</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>7</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>7</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>7</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.985228</mn></mrow><annotation encoding="application/x-tex">E(M)=-(\frac{3}{7})log_2(\frac{3}{7})-(\frac{4}{7})log_2(\frac{4}{7})\\=0.985228</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.985228</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>5</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>5</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>5</mn></mfrac><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mn>2</mn><mn>5</mn></mfrac><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.97095</mn></mrow><annotation encoding="application/x-tex">E(S)=-(\frac{3}{5})log_2(\frac{3}{5})-(\frac{2}{5})log_2(\frac{2}{5})\\=0.97095</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.97095</span></span></span></span></span></p><p>最终结果为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>C</mi><mi>a</mi><mi>r</mi><mi>T</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>4</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>4</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>5</mn><mn>20</mn></mfrac><mo>∗</mo><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>7</mn><mn>20</mn></mfrac><mi>E</mi><mo stretchy="false">(</mo><mi>M</mi><mtext>）</mtext><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.012432</mn></mrow><annotation encoding="application/x-tex">Gain(CarType)=E(s)-p(E)E(E)-p(L)E(L)-p(S)E(S)-p(M)E(M)\\=1-\frac{4}{20}*E(E)-\frac{4}{20}*E(L)-\frac{5}{20}*E(S)-\frac{7}{20}E(M）\\=0.012432</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">）</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.012432</span></span></span></span></span></p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Val</th></tr></thead><tbody><tr><td style="text-align:center">Gain(Gender)</td><td style="text-align:center">0.029</td></tr><tr><td style="text-align:center">Gain(CarType)</td><td style="text-align:center">0.621</td></tr><tr><td style="text-align:center">Gain(ShirtSize)</td><td style="text-align:center">0.012</td></tr></tbody></table><p><strong>Answer B</strong></p><p>通过计算结果可知，<code>CarType</code>属性对<code>Class</code>属性的信息增益率最大，因而决策树的第一个节点可以选择<code>CarType</code>。</p><p>而此时<code>CarType</code>有三个分支，分别是</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Entropy</th></tr></thead><tbody><tr><td style="text-align:center">Family</td><td style="text-align:center">0.81</td></tr><tr><td style="text-align:center">Luxury</td><td style="text-align:center">0.54</td></tr><tr><td style="text-align:center">Sports</td><td style="text-align:center">0</td></tr></tbody></table><p>我们通过这三个分支划分数据，值得注意的是，<code>Sports</code>分支没必要再分了</p><p>所以第一个分裂节点为：</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023165024486.png" alt="image-20221023165024486" style="zoom:50%;"><p>我们进行第二次迭代，用<code>family</code>划分的数据集为：</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023165335924.png" alt="image-20221023165335924" style="zoom:50%;"><p>用<code>Luxury</code>划分的数据集为：</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023165343968.png" alt="image-20221023165343968" style="zoom:50%;"><p>迭代计算信息增益，<code>family</code>的信息增益为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.81127</mn></mrow><annotation encoding="application/x-tex">E(f)=0.81127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.81127</span></span></span></span></span></p><p>用<code>Gender</code>划分后的信息增益：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>−</mo><mfrac><mn>3</mn><mn>4</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>3</mn><mn>4</mn></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.811278</mn></mrow><annotation encoding="application/x-tex">E(G)=-\frac{1}{4}log_2{\frac{1}{4}}-\frac{3}{4}log_2{\frac{3}{4}}\\=0.811278</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.811278</span></span></span></span></span></p><p>用<code>ShirtSize</code>划分后:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo stretchy="false">[</mo><mn>0</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E(S)=\frac{1}{4}[0+0+0+0]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><table><thead><tr><th></th><th>Gain</th></tr></thead><tbody><tr><td>Gender</td><td>0</td></tr><tr><td>ShirtSize</td><td>0.81127</td></tr></tbody></table><p>我们选择<code>ShirtSize</code>进一步划分。此时，<code>Gender</code>已经不能提供任何的信息了，可以直接完成叶子结点的工作。</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023170534079.png" alt="image-20221023170534079" style="zoom:50%;"><p>再来看<code>luxury</code>划分的数据集，</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">C0</th><th style="text-align:center">C1</th></tr></thead><tbody><tr><td style="text-align:center">F</td><td style="text-align:center">1</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>l</mi><mi>u</mi><mi>x</mi><mi>u</mi><mi>r</mi><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>0</mn><mo>−</mo><mfrac><mn>7</mn><mn>8</mn></mfrac><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>7</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>1</mn><mn>7</mn></mfrac><mo>−</mo><mfrac><mn>6</mn><mn>7</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>6</mn><mn>7</mn></mfrac><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.022</mn></mrow><annotation encoding="application/x-tex">G(Gender)=E(luxury)-(0-\frac{7}{8}(\frac{1}{7}log_2{\frac{1}{7}}-\frac{6}{7}log_2\frac{6}{7}))\\=0.022</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">uxu</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">))</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.022</span></span></span></span></span></p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">C0</th><th style="text-align:center">C1</th></tr></thead><tbody><tr><td style="text-align:center">E</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">0</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">0</td><td style="text-align:center">2</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>S</mi><mi>h</mi><mi>i</mi><mi>r</mi><mi>t</mi><mi>S</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.515</mn></mrow><annotation encoding="application/x-tex">G(ShirtSize)=0.515</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.05764em;">tS</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.515</span></span></span></span></span></p><p>所以我们用<code>ShirtSize</code>进行划分。</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023171616919.png" alt="image-20221023171616919" style="zoom:50%;"><p>再往后的节点为：</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023171725261.png" alt="image-20221023171725261" style="zoom:50%;"><p>此时，该节点已经没办法带来任何的信息收益了，我们可以考虑将其进行剪枝，那最终的一个决策树结果为</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221023172055218.png" alt="image-20221023172055218" style="zoom:50%;"><hr><h3 id="Q2">Q2.</h3><p>a) Design a multilayer feed-forward neural network (one hidden layer) for the data set in Q1. Label the nodes in the input and output layers. (10 points)</p><p>(b) Using the neural network obtained above, show the weight values after one iteration of the back propagation algorithm, given the training instance “(M, Family, Small)&quot;. Indicate your initial weight values and biases and the learning rate used. (10 points)</p><hr><p>a.前馈神经网络如下</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221030013510049.png" alt="image-20221030013510049" style="zoom:50%;"><p>b.设定一个权重初始值</p><p><strong>隐层</strong></p><table><thead><tr><th style="text-align:center">w11</th><th style="text-align:center">w21</th><th style="text-align:center">w31</th><th style="text-align:center">w41</th><th style="text-align:center">w51</th><th style="text-align:center">w61</th><th style="text-align:center">w71</th><th style="text-align:center">w81</th><th style="text-align:center">w91</th></tr></thead><tbody><tr><td style="text-align:center">0.1</td><td style="text-align:center">0.2</td><td style="text-align:center">0.3</td><td style="text-align:center">-0.4</td><td style="text-align:center">-0.1</td><td style="text-align:center">-0.2</td><td style="text-align:center">-0.3</td><td style="text-align:center">0.4</td><td style="text-align:center">0.5</td></tr><tr><td style="text-align:center">w12</td><td style="text-align:center">w22</td><td style="text-align:center">w32</td><td style="text-align:center">w42</td><td style="text-align:center">w52</td><td style="text-align:center">w62</td><td style="text-align:center">w72</td><td style="text-align:center">w82</td><td style="text-align:center">w92</td></tr><tr><td style="text-align:center">0.2</td><td style="text-align:center">0.4</td><td style="text-align:center">0.1</td><td style="text-align:center">-0.2</td><td style="text-align:center">-0.4</td><td style="text-align:center">0.3</td><td style="text-align:center">0.2</td><td style="text-align:center">0.4</td><td style="text-align:center">-0.2</td></tr></tbody></table><p><strong>输出层</strong></p><table><thead><tr><th style="text-align:center">w1c</th><th style="text-align:center">w2c</th></tr></thead><tbody><tr><td style="text-align:center">0.7</td><td style="text-align:center">0.5</td></tr></tbody></table><p><strong>初始值为</strong></p><p><code>1,0,1,0,0,1,0,0,0</code></p><p><strong>学习率</strong></p><p><code>lr=0.01</code></p><p><strong>偏置</strong></p><table><thead><tr><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>h</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{h1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th><th style="text-align:center">-0.1</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>h</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{h2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center">0.2</td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center">0.1</td></tr></tbody></table><p>对于每个节点，净输入值表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mo>=</mo><mi>θ</mi><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">I=\theta+\sum_{i=1}^nw_iv_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span> 表示偏置量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示分支权重，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示节点值。</p><p>输出值表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>I</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">O=\frac{1}{1+e^{-I}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7673em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>输出结果</strong></p><table><thead><tr><th style="text-align:center">单元</th><th style="text-align:center">净输入</th><th style="text-align:center">输出</th></tr></thead><tbody><tr><td style="text-align:center">H1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>0.1</mn><mo>+</mo><mn>0.1</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>0.3</mn><mo>∗</mo><mn>1</mn><mo>−</mo><mn>0.2</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">-0.1+0.1*1+0.3*1-0.2*1=0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>0.1</mn></mrow></msup></mrow></mfrac><mo>=</mo><mn>0.525</mn></mrow><annotation encoding="application/x-tex">\frac{1}{1+e^{-0.1}}=0.525</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0.1</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.525</span></span></span></span></td></tr><tr><td style="text-align:center">H2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.2</mn><mo>+</mo><mn>0.2</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>0.1</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>0.3</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.8</mn></mrow><annotation encoding="application/x-tex">0.2+0.2*1+0.1*1+0.3*1=0.8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.8</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>0.8</mn></mrow></msup></mrow></mfrac><mo>=</mo><mn>0.690</mn></mrow><annotation encoding="application/x-tex">\frac{1}{1+e^{-0.8}}=0.690</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0.8</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.690</span></span></span></span></td></tr><tr><td style="text-align:center">C</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn><mo>+</mo><mn>0.7</mn><mo>∗</mo><mn>0.55</mn><mo>+</mo><mn>0.5</mn><mo>∗</mo><mn>0.65</mn><mo>=</mo><mn>0.81</mn></mrow><annotation encoding="application/x-tex">0.1+0.7*0.55+0.5*0.65=0.81</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.55</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.65</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.81</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>0.81</mn></mrow></msup></mrow></mfrac><mo>=</mo><mn>0.692</mn></mrow><annotation encoding="application/x-tex">\frac{1}{1+e^{-0.81}}=0.692</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0.81</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.692</span></span></span></span></td></tr></tbody></table><p>输出层的误差值计算为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>r</mi><mi>r</mi><mo>=</mo><mi>O</mi><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>O</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>T</mi><mo>−</mo><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Err=O*(1-O)*(T-O)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>表示节点输出，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>表示真实值</p><p>隐层节点的误差计算为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>r</mi><mi>r</mi><mo>=</mo><mi>O</mi><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>O</mi><mo stretchy="false">)</mo><mo>∗</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>E</mi><mi>r</mi><msub><mi>r</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Err=O*(1-O)*\sum_{i=1}^nErr_i*w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Err</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span></span></span></span>表示从高层传过来的误差。</p><p><strong>计算每个节点的误差</strong></p><table><thead><tr><th style="text-align:center">单元</th><th style="text-align:center">误差</th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.692</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.692</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.692</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0.066</mn></mrow><annotation encoding="application/x-tex">0.692*(1-0.692)*(1-0.692)=0.066</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.692</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.692</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.692</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.066</span></span></span></span></td></tr><tr><td style="text-align:center">H1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.525</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.525</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>0.066</mn><mo>∗</mo><mn>0.7</mn><mo>=</mo><mn>0.012</mn></mrow><annotation encoding="application/x-tex">0.525*(1-0.525)*0.066*0.7=0.012</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.525</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.525</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.066</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.012</span></span></span></span></td></tr><tr><td style="text-align:center">H2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.69</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.69</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>0.066</mn><mo>∗</mo><mn>0.5</mn><mo>=</mo><mn>0.007</mn></mrow><annotation encoding="application/x-tex">0.69*(1-0.69)*0.066*0.5=0.007</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.69</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.69</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.066</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.007</span></span></span></span></td></tr></tbody></table><p>偏置量的更新方程表示为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>θ</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><msub><mi>θ</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>+</mo><mi>l</mi><mi>r</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>E</mi><mi>r</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta_{new}=\theta_{old}+lr*(Err)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mclose">)</span></span></span></span></span></p><p>权重的更新方程表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><msub><mi>w</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>+</mo><mi>l</mi><mi>r</mi><mo>∗</mo><mi>E</mi><mi>r</mi><mi>r</mi><mo>∗</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">w_{new}=w_{old}+lr*Err*O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></span></p><p><strong>更新权重和偏置</strong></p><p>这里只给出了链式求导用到的节点和权重</p><table><thead><tr><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mn>1</mn><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{1c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.7</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.066</mn><mo>∗</mo><mn>0.525</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0.7003465</mn></mrow><annotation encoding="application/x-tex">0.7+0.01*(0.066*0.525)=0.7003465</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.066</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.525</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7003465</span></span></span></span></th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mn>2</mn><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{2c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.066</mn><mo>∗</mo><mn>0.69</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0.5004554</mn></mrow><annotation encoding="application/x-tex">0.5+0.01*(0.066*0.69)=0.5004554</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.066</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.69</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5004554</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>11</mn></msub></mrow><annotation encoding="application/x-tex">w_{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.012</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.10012</mn></mrow><annotation encoding="application/x-tex">0.1+0.01*(0.012)*1=0.10012</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.012</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.10012</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>12</mn></msub></mrow><annotation encoding="application/x-tex">w_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.2</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.007</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.20007</mn></mrow><annotation encoding="application/x-tex">0.2+0.01*(0.007)*1=0.20007</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.007</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.20007</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>31</mn></msub></mrow><annotation encoding="application/x-tex">w_{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.3</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.012</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.30012</mn></mrow><annotation encoding="application/x-tex">0.3+0.01*(0.012)*1=0.30012</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.012</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.30012</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>32</mn></msub></mrow><annotation encoding="application/x-tex">w_{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.007</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.1007</mn></mrow><annotation encoding="application/x-tex">0.1+0.01*(0.007)*1=0.1007</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.007</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1007</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>61</mn></msub></mrow><annotation encoding="application/x-tex">w_{61}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">61</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>0.2</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.012</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>1</mn><mo>=</mo><mo>−</mo><mn>0.19988</mn></mrow><annotation encoding="application/x-tex">-0.2+0.01*(0.012)*1=-0.19988</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.012</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.19988</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>62</mn></msub></mrow><annotation encoding="application/x-tex">w_{62}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">62</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.3</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.007</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>1</mn><mo>=</mo><mn>0.3007</mn></mrow><annotation encoding="application/x-tex">0.3+0.01*(0.007)*1=0.3007</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.007</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3007</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.066</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0.10066</mn></mrow><annotation encoding="application/x-tex">0.1+0.01*(0.066)=0.10066</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.066</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.10066</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>h</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{h1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>0.1</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.012</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>0.09988</mn></mrow><annotation encoding="application/x-tex">-0.1+0.01*(0.012)=-0.09988</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.012</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.09988</span></span></span></span></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mn>42</mn></msub></mrow><annotation encoding="application/x-tex">\theta_{42}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">42</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.2</mn><mo>+</mo><mn>0.01</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>0.007</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0.20007</mn></mrow><annotation encoding="application/x-tex">0.2+0.01*(0.007)=0.20007</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0.007</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.20007</span></span></span></span></td></tr></tbody></table><hr><h3 id="Q3">Q3</h3><p>a) Suppose the fraction of undergraduate students who smoke is 15% and the fraction of graduate students who smoke is 23%. If one-ﬁfth of the college students are graduate students and the rest are undergraduates, what is the probability that a student who smokes is a graduate student? (5 points)</p><p>b) Given the information in part (a), is a randomly chosen college student more likely to be a graduate or undergraduate student? (5 points)</p><p>c) Suppose 30% of the graduate students live in a dorm but only 10% of the undergraduate students live in a dorm. If a student smokes and lives in the dorm, is he or she more likely to be a graduate or undergraduate student? You can assume independence between students who live in a dorm and those who smoke. (5 points)</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221030021838522.png" alt="image-20221030021838522" style="zoom:50%;"><hr><h2 id="Part-II-Lab">Part II: Lab</h2><h3 id="Question-1">Question 1</h3><p>Assume this supermarket would like to promote milk. Use the data in “transactions” as training data to build a decision tree (C5.0 algorithm) model to predict whether the customer would buy milk or not.</p><ol><li><p>Build a decision tree using data set “transactions” that predicts milk as a function of the other fields. Set the “type” of each field to “Flag”, set the “direction” of “milk” as “out”, set the “type” of COD as “Typeless”, select “Expert” and set the “pruning severity” to 65, and set the “minimum records per child branch” to be 95. <strong>Hand-in</strong>: A figure showing your tree. (5 points)</p></li><li><p>Use the model (the full tree generated by Clementine in step 1 above) to make a prediction for each of the 20 customers in the “rollout” data to determine whether the customer would buy milk. **Hand-in:**your prediction for each of the 20 customers. (5 points)</p></li></ol><p>​3.<strong>Hand-in</strong>: rules for positive (yes) prediction of milk purchase identified from the decision tree (up to the fifth level. The root is considered as level 1). (5 points)</p><hr><p>1.决策树输出如下</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221029211843694.png" alt="image-20221029211843694" style="zoom: 50%;"><p>2.具体数据在附件<code>table1.csv</code></p><table><thead><tr><th>pasta</th><th>water</th><th>biscuits</th><th>coffee</th><th>brioches</th><th>yoghurt</th><th>frozen vegetables</th><th>tunny</th><th>beer</th><th>tomato souce</th><th>coke</th><th>rice</th><th>juices</th><th>crackers</th><th>oil</th><th>frozen fish</th><th>ice cream</th><th>mozzarella</th><th>tinned meat</th><th>$C-milk</th><th>$CC-milk</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.633</td></tr><tr><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.56</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0.613</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.566</td></tr><tr><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0.633</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.673</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.626</td></tr><tr><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.65</td></tr><tr><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0.613</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.521</td></tr><tr><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.568</td></tr><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.548</td></tr><tr><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.53</td></tr><tr><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.629</td></tr><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.53</td></tr><tr><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.633</td></tr><tr><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0.55</td></tr><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0.633</td></tr><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.633</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0.62</td></tr></tbody></table><p>3.输出规则集如下：</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221029211817778.png" alt="image-20221029211817778" style="zoom:50%;"><hr><h2 id="Q2-v2">Q2</h2><p>1.决策树<code>a</code>的混淆矩阵(56)：</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221030004711003.png" alt="image-20221030004711003" style="zoom:50%;"><p>决策树<code>b</code>的混淆矩阵(15):</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221030004511700.png" alt="image-20221030004511700" style="zoom:50%;"><p>决策树<code>c</code>的混淆矩阵(10):</p><img src="/2022/10/23/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW2/image-20221030004759601.png" alt="image-20221030004759601" style="zoom:50%;"><hr><p>2.我将使用决策树<code>b</code>作为最后预测数据的模型。该决策树在精度上高于<code>a</code>树和<code>b</code>树，具有更好的性能。</p><hr><p>3.表格内容在<code>table2.csv</code>附件中</p><table><thead><tr><th>age</th><th>sex</th><th style="text-align:center">region</th><th style="text-align:center">income</th><th style="text-align:center">married</th><th style="text-align:center">children</th><th style="text-align:center">car</th><th style="text-align:center">save_act</th><th style="text-align:center">current_act</th><th style="text-align:center">mortgage</th><th style="text-align:center">RECOMMEND PEP (Y/N)</th></tr></thead><tbody><tr><td>22</td><td>0</td><td style="text-align:center">1</td><td style="text-align:center">14000</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td>34</td><td>1</td><td style="text-align:center">0</td><td style="text-align:center">33000</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td>47</td><td>0</td><td style="text-align:center">0</td><td style="text-align:center">16700</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td>54</td><td>1</td><td style="text-align:center">1</td><td style="text-align:center">43400</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td>65</td><td>1</td><td style="text-align:center">2</td><td style="text-align:center">60000</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td>37</td><td>0</td><td style="text-align:center">0</td><td style="text-align:center">27700</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td>44</td><td>0</td><td style="text-align:center">0</td><td style="text-align:center">38784</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td>20</td><td>1</td><td style="text-align:center">0</td><td style="text-align:center">10200</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td>46</td><td>0</td><td style="text-align:center">0</td><td style="text-align:center">22000</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td>40</td><td>1</td><td style="text-align:center">1</td><td style="text-align:center">37400</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode Hot100 详细题解</title>
    <link href="http://example.com/2022/10/19/%E3%80%90LeetCode%E3%80%91%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E5%90%88%E9%9B%86/"/>
    <id>http://example.com/2022/10/19/%E3%80%90LeetCode%E3%80%91%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E5%90%88%E9%9B%86/</id>
    <published>2022-10-19T14:48:10.353Z</published>
    <updated>2022-10-20T11:00:21.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="每日一题">每日一题</h2><hr><h3 id="10-19">10/19</h3><p>学校的自助午餐提供圆形和方形的三明治，分别用数字 <code>0</code> 和 <code>1</code> 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。<br>餐厅里三明治的数量与学生的数量相同。所有三明治都放在一个 <strong>栈</strong> 里，每一轮：</p><ul><li>如果队列最前面的学生 <strong>喜欢</strong> 栈顶的三明治，那么会 <strong>拿走它</strong> 并离开队列。</li><li>否则，这名学生会 <strong>放弃这个三明治</strong> 并回到队列的尾部。</li></ul><p>这个过程会一直持续到队列里所有学生都不喜欢栈顶的三明治为止。</p><p>给你两个整数数组 <code>students</code> 和 <code>sandwiches</code> ，其中 <code>sandwiches[i]</code> 是栈里面第 <code>i</code> 个三明治的类型（<code>i = 0</code> 是栈的顶部）， <code>students[j]</code> 是初始队列里第 <code>j</code> 名学生对三明治的喜好（<code>j = 0</code> 是队列的最开始位置）。请你返回无法吃午餐的学生数量。</p><p><strong>tag</strong></p><ul><li>队列</li></ul><p><strong>抽象</strong></p><ul><li>学生列表是个轮换的队列【循环队列】</li><li>而三明治列表反而是一个【固定栈】</li></ul><p><strong>思路</strong></p><ul><li>学生可以任意取</li><li>但是三明治不行</li><li>也就是说，三明治[i]如果是0，所有喜欢0的学生都没了，那就会被卡住</li></ul><p><strong>算法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countStudents</span>(<span class="params">self, students: <span class="type">List</span>[<span class="built_in">int</span>], sandwiches: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        cnt=Counter(students)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> sandwiches:</span><br><span class="line">            <span class="keyword">if</span> cnt[j]!=<span class="number">0</span>:</span><br><span class="line">                cnt[j]-=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> cnt[<span class="number">1</span>-j]</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="10-20">10/20</h3><ol start="779"><li>第K个语法符号</li></ol><p>我们构建了一个包含 <code>n</code> 行( <strong>索引从 1 开始</strong> )的表。首先在第一行我们写上一个 <code>0</code>。接下来的每一行，将前一行中的<code>0</code>替换为<code>01</code>，<code>1</code>替换为<code>10</code>。</p><ul><li>例如，对于 <code>n = 3</code> ，第 <code>1</code> 行是 <code>0</code> ，第 <code>2</code> 行是 <code>01</code> ，第3行是 <code>0110</code> 。</li></ul><p>给定行数 <code>n</code> 和序数 <code>k</code>，返回第 <code>n</code> 行中第 <code>k</code> 个字符。（ <code>k</code> <strong>从索引 1 开始</strong>）</p><p><strong>tag</strong></p><ul><li>位运算</li><li>抽象</li></ul><p><strong>思路</strong></p><p>索引是从<code>1</code>开始的，且都是源自<code>1</code>行的<code>0</code>。</p><p>第<code>n</code>行的第<code>x</code>个元素，是由第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>行的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">floor(\frac{x+1}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">oor</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>元素生成的。</p><p>且满足：当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>时奇数，若是由0生成的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>01</mn></mrow><annotation encoding="application/x-tex">01</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">01</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>为0，否则为1，若是由1生成的10，则x为1，否则为0.</p><p>于是我们发现，假设第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>行的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>个元素为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">num1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord">1</span></span></span></span>，则它可以由第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>行的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">floor(\frac{x+1}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">oor</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>个元素生成而来，且满足：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">&amp;</mi><mn>1</mn><mo stretchy="false">)</mo><mo>∧</mo><mn>1</mn><mo>∧</mo><mi>n</mi><mi>u</mi><mi>m</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">num1=(x\&amp;1)\wedge1\wedge num2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">&amp;1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord">2</span></span></span></span></span></p><p>这里说明下，如果<code>num2</code>是0，当<code>num1</code>为奇数，则其值为0，否则为1。当<code>num2</code>是1，那么<code>num1</code>是奇数时，其值为1，否则为0。</p><p>说一个好玩的，关于</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>∧</mo><mn>1</mn><mo>∧</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y\wedge 1\wedge x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p><p>y异或1后，原先是0的变成1，原先是1的变成0，奇偶换位。</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kthGrammar</span>(<span class="params">self, n: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">not</span> (k &amp; <span class="number">1</span>) ) ^ self.kthGrammar(n - <span class="number">1</span>, (k + <span class="number">1</span>) // <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>或者是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kthGrammar</span>(<span class="params">self, n: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> ((k &amp; <span class="number">1</span>)^<span class="number">1</span> ) ^ self.kthGrammar(n - <span class="number">1</span>, (k + <span class="number">1</span>) // <span class="number">2</span>)</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">热题！还是热题！</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>海洋遥感EOF分析</title>
    <link href="http://example.com/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/</id>
    <published>2022-10-15T12:55:29.748Z</published>
    <updated>2022-10-21T07:51:30.834Z</updated>
    
    <content type="html"><![CDATA[<h1>Nino SST Indices</h1><hr><p>Niño 3.4 (5N-5S, 170W-120W): Niño 3.4异常可以被认为代表从日变线左右到南美海岸横跨太平洋的赤道海温平均水平。Niño 3.4指数通常使用5个月的运行平均值，当Niño 3.4 sst连续6个月或以上超过±0.4℃时，则定义El Niño或La Niña事件。</p><p>经验正交函数分析方法(Empirical Orthogonal Function,缩写为EOF)，也称特征向量分析(Eigenvector Analysis)，或者主成分分析(Principal Component Analysis,缩写PCA)，是一种分析<a href="https://baike.baidu.com/item/%E7%9F%A9%E9%98%B5/18069?fromModule=lemma_inlink">矩阵</a>数据中的结构特征，提取主要数据特征量的一种方法。Lorenz在1950年代首次将其引入气象和气候研究，在地学及水声学等其他学科中得到了非常广泛的应用。地学数据分析中通常特征向量对应的是空间样本，所以也称空间特征向量或者空间模态；主成分对应的是时间变化，也称时间系数。因此地学中也将EOF分析称为时空分解。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><mi>E</mi><mi>O</mi><mi>F</mi><mo>×</mo><mi>P</mi><mi>C</mi><mo>+</mo><mi>M</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">F=EOF\times PC+Mean</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EOF</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">PC</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">an</span></span></span></span></span></p><p>算法解释如下：</p><p><strong>Input</strong></p><p><code>time*(map)</code>矩阵，行表示时间，列表示空间</p><p><strong>Output</strong></p><p><code>EOF</code>空间模态，<code>PC</code>时间模态</p><p><strong>Step</strong></p><p>0️⃣ 预处理：经度处理</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><msqrt><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">F=\sqrt{cos(lat)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span></span></span></span></span></p><p>这一步的目的是计算协方差达到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=cos(lat)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></span></p><p>的效果。</p><p>本质上是因为分带在不同维度上的面积会发生变化，需要通过角度进行修正。</p><p>1️⃣ 计算矩阵距平</p><p>这步是主成分分析的关键，不利用距平的话在数学意义上就无法通过协方差矩阵进行特征分解。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><mo stretchy="false">(</mo><mi>F</mi><mo>−</mo><mi>M</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F=(F-Mean)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">e</span><span class="mord mathnormal">an</span><span class="mclose">)</span></span></span></span></span></p><p>2️⃣ 计算协方差矩阵</p><p>在相互独立的正交基上对原始矩阵进行空间变换，寻求方差最大的部分</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=cov(F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></span></p><p>3️⃣ 计算特征值和特征向量</p><p>特征值和特征向量分别表示了正交基上的缩放倍数和正交基，我们选取方差上最大的缩放倍数，也就是最大的特征值来对原始空间进行变换，得到的新数据能够保留最大的信息量。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>O</mi><mi>F</mi><mo separator="true">,</mo><mi>L</mi><mo>=</mo><mi>e</mi><mi>i</mi><mi>g</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">EOF,L=eig(C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EOF</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span></span></p><p>这个特征向量就是我们的<code>EOF</code>空间模态。</p><p>4️⃣计算时间模态</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>C</mi><mo>=</mo><mi>E</mi><mi>O</mi><msup><mi>F</mi><mi>T</mi></msup><mo>×</mo><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PC=EOF^T\times(F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">PC</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9747em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">EO</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></span></p><p>原始数据在新的向量空间上的变换，那就是主成分PC，在这里也就是我们的时间特征。</p><hr><p>结果如下：</p><p>空间模态:</p><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/image-20221015205552316.png" alt="image-20221015205552316" style="zoom: 33%;"><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/image-20221015205611304.png" alt="image-20221015205611304" style="zoom: 33%;"><p>对应的时间特征：</p><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/image-20221015205651316.png" alt="image-20221015205651316" style="zoom: 33%;"><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/image-20221015205733048.png" alt="image-20221015205733048" style="zoom: 33%;"><p>我们选择<code>Nino 3.4</code>指数进行相关性判别：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">PC1</th><th style="text-align:center">PC2</th><th style="text-align:center">NIno</th></tr></thead><tbody><tr><td style="text-align:center">PC1</td><td style="text-align:center">1</td><td style="text-align:center">4.17e-09</td><td style="text-align:center">-0.142</td></tr><tr><td style="text-align:center">PC2</td><td style="text-align:center">4.17e-09</td><td style="text-align:center">1</td><td style="text-align:center">0.831</td></tr><tr><td style="text-align:center">Nino</td><td style="text-align:center">-0.142</td><td style="text-align:center">0.831</td><td style="text-align:center">1</td></tr></tbody></table><p>可以发现，<code>PC2</code>与<code>NIno 3.4</code>指数具有强相关性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>≥</mo><mn>0.8</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\ge0.8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.8</span><span class="mclose">)</span></span></span></span>,可以用来探究厄尔尼诺现象。</p><p>我们也绘制了每个月的空间气候直方图，可以看到，有些月份的直方图具有明显的高峰和聚集程度。</p><hr><p><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/GIF.gif" alt="GIF"></p><p>年份箱线图变化趋势</p><p>例如：07年全球温度变化跨度最大，14年气温最高，98年气温比较集中且相对较低，数据量集中分布与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和中位数之间，以低温为主，高温为辅，但96年的时候，相对高温地区(高于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">Q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)较多。</p><p><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/%E4%B8%8B%E8%BD%BD.png" alt="下载"></p><hr><p>空间自相关指数</p><p>API代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用空间统计量Moran和Geary计算遥感数据的自相关程度</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getMoranV</span>(<span class="params">path,val=<span class="number">1</span>,t=<span class="number">0</span>,method=<span class="string">&quot;Moran&quot;</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param path: 图像路径</span></span><br><span class="line"><span class="string">    :param t: 卷积核类型</span></span><br><span class="line"><span class="string">    :param method: 空间自相关方法</span></span><br><span class="line"><span class="string">    :param val: 空间权重</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">    wb1 = path</span><br><span class="line">    data = wb1.values</span><br><span class="line">    n, m = wb1.shape</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义卷积核</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># queen 卷积</span></span><br><span class="line">    dir2 = [[<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">1</span>, <span class="number">1</span>], [-<span class="number">1</span>, -<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># Rook 卷积</span></span><br><span class="line">    dir1 = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># Bishop 卷积</span></span><br><span class="line">    dir3=[[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,-<span class="number">1</span>],[-<span class="number">1</span>,<span class="number">1</span>],[-<span class="number">1</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> t==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir1</span><br><span class="line">    <span class="keyword">elif</span> t==<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir3</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开辟O(n^4)权重矩阵</span></span><br><span class="line">    <span class="comment"># 这玩意很耗内存，所以可以考虑用局部计算代替全局计算</span></span><br><span class="line">    a = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n*m)]</span><br><span class="line">    a_weight=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="comment"># 找到他在二维上的临界点</span></span><br><span class="line">            loc=i*m+j</span><br><span class="line">            <span class="keyword">for</span> detX, detY <span class="keyword">in</span> <span class="built_in">dir</span>:</span><br><span class="line">                x = i + detX</span><br><span class="line">                y = j + detY</span><br><span class="line">                <span class="comment"># 转化为一维</span></span><br><span class="line">                <span class="comment"># 边界处理</span></span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; n <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; m:</span><br><span class="line">                    a[loc].append([x,y,val])</span><br><span class="line">                    a_weight+=val</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">moranIndex</span>(<span class="params">data,weight</span>):</span><br><span class="line">        <span class="comment"># 莫兰指数计算</span></span><br><span class="line">        <span class="comment"># s_0=np.sum(np.sum(weight))</span></span><br><span class="line">        s_0=a_weight</span><br><span class="line">        n,m=<span class="built_in">len</span>(data),<span class="built_in">len</span>(data[<span class="number">0</span>])</span><br><span class="line">        x_hat=np.mean(data)</span><br><span class="line">        up_sum=<span class="number">0</span></span><br><span class="line">        down_sum=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="comment"># 下一轮</span></span><br><span class="line">                loc=i*m+j</span><br><span class="line">                <span class="keyword">for</span> v <span class="keyword">in</span> weight[loc]:</span><br><span class="line">                    up_sum+=v[<span class="number">2</span>]*(data[i][j]-x_hat)*(data[v[<span class="number">0</span>]][v[<span class="number">1</span>]]-x_hat)</span><br><span class="line">                down_sum+=(data[i][j]-x_hat)**<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> (n*m/s_0)*(up_sum/down_sum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Geary_C</span>(<span class="params">data,weight</span>):</span><br><span class="line">        <span class="comment"># Geary&#x27;s C计算</span></span><br><span class="line">        s_0=a_weight*<span class="number">2</span></span><br><span class="line">        n, m = <span class="built_in">len</span>(data), <span class="built_in">len</span>(data[<span class="number">0</span>])</span><br><span class="line">        x_hat = np.mean(data)</span><br><span class="line">        up_sum = <span class="number">0</span></span><br><span class="line">        down_sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="comment"># 下一轮</span></span><br><span class="line">                loc = i * m + j</span><br><span class="line">                <span class="keyword">for</span> v <span class="keyword">in</span> weight[loc]:</span><br><span class="line"></span><br><span class="line">                    up_sum += v[<span class="number">2</span>] * (data[i][j] - data[v[<span class="number">0</span>]][v[<span class="number">1</span>]])**<span class="number">2</span></span><br><span class="line">                down_sum += (data[i][j] - x_hat) ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> ((n*m-<span class="number">1</span>)/(s_0))*(up_sum/down_sum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (M:=method.upper())==<span class="string">&quot;MORAN&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> moranIndex(data,a)</span><br><span class="line">    <span class="keyword">elif</span> M==<span class="string">&quot;GEARY&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> Geary_C(data,a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHelp</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Method: &#123;&#x27;Moran&#x27;,&#x27;Geary&#x27;&#125;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;t: &#123;0:Rook,1:Queen,2:bishop&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getHelp()</span><br><span class="line">    path = <span class="string">r&quot;\data.xlsx&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;墨兰指数为: %s&quot;</span>%getMoranV(path,val=<span class="number">1</span>,t=<span class="number">0</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Geary&#x27;s C为: %s&quot;</span>%getMoranV(path,val=<span class="number">1</span>,t=<span class="number">0</span>,method=<span class="string">&quot;Geary&quot;</span>))</span><br></pre></td></tr></table></figure><p><strong>处理</strong></p><p>逐月遍历数据即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span>=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(data.shape[<span class="number">0</span>]): </span><br><span class="line">    <span class="type">List</span>.append(getMoranV(pd.DataFrame(data[i]),val=<span class="number">1</span>,t=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p><strong>结果可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">6</span>))</span><br><span class="line">plt.plot(<span class="built_in">range</span>((v:=data.shape[<span class="number">0</span>])),<span class="type">List</span>,<span class="string">&#x27;r-&#x27;</span>)</span><br><span class="line">Mean=<span class="built_in">sum</span>(<span class="type">List</span>)/(<span class="built_in">len</span>(<span class="type">List</span>))</span><br><span class="line">plt.plot(<span class="built_in">range</span>(v),[Mean]*v,<span class="string">&#x27;b&#x27;</span>,linestyle=<span class="string">&#x27;--&#x27;</span>,alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.title(<span class="string">&quot;基于Queen邻接的SST空间自相关月变化&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;时间&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;日期&quot;</span>)</span><br><span class="line">T=[]</span><br><span class="line">M,Y=<span class="number">1</span>,<span class="number">1990</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">360</span>):</span><br><span class="line">    T.append(<span class="string">&quot;%s年%s月&quot;</span>%(Y,M))</span><br><span class="line">    <span class="keyword">if</span> M%<span class="number">12</span>==<span class="number">0</span>:</span><br><span class="line">        M=<span class="number">1</span></span><br><span class="line">        Y+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        M+=<span class="number">1</span></span><br><span class="line">plt.xticks(<span class="built_in">range</span>(<span class="number">360</span>)[::<span class="number">20</span>],T[::<span class="number">20</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/%E4%B8%8B%E8%BD%BD-1665994586589-4.png" alt="下载"></p><hr><p><strong>绘制逐月动图</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span>=[[]]</span><br><span class="line">t=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> t&lt;data.shape[<span class="number">0</span>]:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="type">List</span>[-<span class="number">1</span>])==<span class="number">12</span>:</span><br><span class="line">        <span class="type">List</span>.append([])</span><br><span class="line">    <span class="type">List</span>[-<span class="number">1</span>].append(getMoranV(pd.DataFrame(data[t]),val=<span class="number">1</span>,t=<span class="number">1</span>))</span><br><span class="line">    t+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>我们通过二维列表的方式对年份加以区分，这也是常见的手段。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逐年绘制</span></span><br><span class="line">path=<span class="string">r&quot;\yourpath&quot;</span></span><br><span class="line">timeList=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="type">List</span>)):</span><br><span class="line">    lis=<span class="type">List</span>[i]</span><br><span class="line">    plt.figure(figsize=(<span class="number">20</span>,<span class="number">6</span>))</span><br><span class="line">    plt.plot(<span class="built_in">range</span>(<span class="number">12</span>),lis,<span class="string">&#x27;r-&#x27;</span>)</span><br><span class="line">    Mean=<span class="built_in">sum</span>(lis)/<span class="number">12</span></span><br><span class="line">    plt.plot(<span class="built_in">range</span>(<span class="number">12</span>),[Mean]*<span class="number">12</span>,<span class="string">&#x27;b&#x27;</span>,linestyle=<span class="string">&#x27;--&#x27;</span>,alpha=<span class="number">0.2</span>)</span><br><span class="line">    plt.title(<span class="string">&quot;%s年&quot;</span>%(i+<span class="number">1990</span>))</span><br><span class="line">    plt.xticks(<span class="built_in">range</span>(<span class="number">12</span>),[<span class="string">&quot;%s月&quot;</span>%(m+<span class="number">1</span>) <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>)])</span><br><span class="line">    plt.savefig((val:=path+<span class="string">&quot;\\&quot;</span>+<span class="string">&quot;%s.png&quot;</span>%i),dpi=<span class="number">200</span>)</span><br><span class="line">    timeList.append(val)</span><br></pre></td></tr></table></figure><p>接着就是正常的绘制，我们需要将图像存储下来，并记录存储位置。</p><p>通过<code>imageio</code>模块制作动图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">IMG=[]</span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line">path=<span class="string">r&quot;C:\Users\lenovo\Desktop\Ocean\Spatial&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> timeList:</span><br><span class="line">    IMG.append(imageio.imread(i))</span><br><span class="line">imageio.mimsave(path+<span class="string">&quot;\\&quot;</span>+<span class="string">&quot;GIF1.gif&quot;</span>,IMG,<span class="string">&quot;GIF&quot;</span>,duration=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="/2022/10/15/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91EOF%E5%88%86%E6%9E%90/GIF1-1665995063358-1.gif" alt="GIF1"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">海洋遥感</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="海洋遥感" scheme="http://example.com/tags/%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>100个句子</title>
    <link href="http://example.com/2022/10/12/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91100%E4%B8%AA%E5%8F%A5%E5%AD%90/"/>
    <id>http://example.com/2022/10/12/%E3%80%90%E8%8B%B1%E8%AF%AD%E3%80%91100%E4%B8%AA%E5%8F%A5%E5%AD%90/</id>
    <published>2022-10-12T14:35:34.196Z</published>
    <updated>2022-10-13T12:48:26.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="One-Hundred-Sentence">One Hundred Sentence</h2><hr><p>1️⃣ There is considerable debate over how we should react if we detect  a signal from an alien civilisation,</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;One-Hundred-Sentence&quot;&gt;One Hundred Sentence&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;1️⃣ There is considerable debate over how we should react if we detect  a si</summary>
      
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】Chapter 3. 回归分析</title>
    <link href="http://example.com/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/"/>
    <id>http://example.com/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/</id>
    <published>2022-10-11T08:17:22.475Z</published>
    <updated>2022-10-11T12:58:17.678Z</updated>
    
    <content type="html"><![CDATA[<h1>回归分析</h1><hr><blockquote><p>回归分析的核心在于确定变量之间存在着的<strong>函数关系</strong></p></blockquote><p>各个变量之间可以分为确定关系和非确定关系(相对关系)，我们要做的就是对这种关系进行<strong>建模和解释</strong>。</p><p>其主要流程可以解释如下：</p><ul><li>收集一组包含因变量和自变量的数据</li><li>根据因变量和自变量之间的关系，初步设定回归模型</li><li>求解合理的回归系数</li><li>进行相关性检验，确定相关系数</li><li>利用模型对因变量做出预测或解释，并计算预测值的置信区间。</li></ul><hr><h2 id="一、一元线性回归分析">一、一元线性回归分析</h2><p>表达式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>ε</mi><mo>=</mo><msub><mi>β</mi><mn>0</mn></msub><mo>+</mo><msub><mi>β</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><mi>ε</mi></mrow><annotation encoding="application/x-tex">y=f(x,\theta)+\varepsilon=\beta_0+\beta_1x+\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>表示<strong>误差</strong>项，其期望<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>ε</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E(\varepsilon)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">ε</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，方差等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>ε</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">D(\varepsilon)=\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal">ε</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\beta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为常数项，也称为<strong>截距</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为<strong>斜率</strong>。</p><p>求解参数的主流方法有<code>最小二乘法</code>、<code>最大似然法</code>、<code>矩方法</code>。下面介绍最小二乘法。</p><p>最小二乘法(Least Squares Estimation,LSE)通过最小化误差的平方和来寻找数据的最佳匹配。</p><p>我们定义残差平方和(Residual Sum of Squares,RSS),<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\triangle y=(y-\hat y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">△</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span>表示残差：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Q</mi><mo stretchy="false">(</mo><msub><mi>β</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mspace linebreak="newline"></mspace><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><msub><mi>x</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">Q(\beta_0,\beta_1)=\sum_{i=1}^n(y_i-\hat y_i)^2\\=\sum_{i=1}^n(y_i-\hat\beta_0-\hat\beta_1x_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据微积分知识，这玩意的极值点应该在导数为0的时候取得，我们对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span>求偏导，得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>σ</mi><mi>Q</mi></mrow><mrow><mi>σ</mi><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub></mrow></mfrac><mo>=</mo><mo>−</mo><mn>2</mn><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>σ</mi><mi>Q</mi></mrow><mrow><mi>σ</mi><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mo>−</mo><mn>2</mn><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}\frac{\sigma Q}{\sigma \hat\beta_0}=-2\sum_{i=1}^n(y_i-\hat\beta_0-\hat\beta_1x_i)\\\frac{\sigma Q}{\sigma \hat\beta_1}=-2\sum_{i=1}^n(y_i-\hat\beta_0-\hat\beta_1x_i)x_i\\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2492em;vertical-align:-1.3746em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8746em;"><span style="top:-3.8746em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9244em;"><span style="top:-2.5195em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span><span style="top:-2.9634em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0528em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6166em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9244em;"><span style="top:-2.5195em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span><span style="top:-2.9634em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0528em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6166em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3746em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>求解方程组得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>=</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}\hat\beta_0=\bar y-\hat\beta_1\bar x\\\hat\beta_1=\frac{\sum_{i=1}^n(x_i-\bar x)(y_i-\bar y)}{\sum_{i=1}^n(x_i-\bar x)^2}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.07em;vertical-align:-1.285em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.785em;"><span style="top:-3.837em;"><span class="pstrut" style="height:3.06em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span><span style="top:-2.345em;"><span class="pstrut" style="height:3.06em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.06em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7047em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight">x</span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord mtight">ˉ</span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.535em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight">x</span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord mtight">ˉ</span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord mtight">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.57em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.285em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>将其带入方程，即可得到最佳拟合曲线。</p><p><strong>误差估计</strong></p><p>SSE：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>e</mi><mi>i</mi><mn>2</mn></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sum_{i=1}^ne_i^2=\sum_{i=1}^n(y_i-\hat y_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>MSE是对SSE的无偏估计量</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></mfrac><mo>=</mo><mi>M</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\sigma^2=\frac{SSE}{n-2}=MSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">SSE</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">MSE</span></span></span></span></span></p><h3 id="Python实现一元线性回归">Python实现一元线性回归</h3><p><strong>Step 1️⃣ 数据准备</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据集</span></span><br><span class="line">iris=load_iris()</span><br><span class="line">data=pd.DataFrame(iris.data)</span><br><span class="line">data.columns=[<span class="string">&#x27;sepal-length&#x27;</span>,<span class="string">&#x27;sepal-width&#x27;</span>,<span class="string">&#x27;petal-length&#x27;</span>,<span class="string">&#x27;petal-width&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(data.head())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   sepal-length  sepal-width  petal-length  petal-width</span><br><span class="line"><span class="number">0</span>           <span class="number">5.1</span>          <span class="number">3.5</span>           <span class="number">1.4</span>          <span class="number">0.2</span></span><br><span class="line"><span class="number">1</span>           <span class="number">4.9</span>          <span class="number">3.0</span>           <span class="number">1.4</span>          <span class="number">0.2</span></span><br><span class="line"><span class="number">2</span>           <span class="number">4.7</span>          <span class="number">3.2</span>           <span class="number">1.3</span>          <span class="number">0.2</span></span><br><span class="line"><span class="number">3</span>           <span class="number">4.6</span>          <span class="number">3.1</span>           <span class="number">1.5</span>          <span class="number">0.2</span></span><br><span class="line"><span class="number">4</span>           <span class="number">5.0</span>          <span class="number">3.6</span>           <span class="number">1.4</span>          <span class="number">0.2</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用scikit-learn完成回归</span></span><br><span class="line">x=data[<span class="string">&#x27;petal-length&#x27;</span>].values</span><br><span class="line">y=data[<span class="string">&#x27;petal-width&#x27;</span>].values</span><br><span class="line">x=x.reshape(<span class="built_in">len</span>(x),<span class="number">1</span>)</span><br><span class="line">y=y.reshape(<span class="built_in">len</span>(y),<span class="number">1</span>)</span><br><span class="line">clf=LinearRegression()</span><br><span class="line">clf.fit(x,y)</span><br><span class="line">pre=clf.predict(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图形</span></span><br><span class="line">plt.scatter(x,y,s=<span class="number">50</span>)</span><br><span class="line">plt.plot(x,pre,<span class="string">&#x27;r-&#x27;</span>,linewidth=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;petal-length&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;petal-wdith&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> idx,m <span class="keyword">in</span> <span class="built_in">enumerate</span>(x):</span><br><span class="line">    <span class="comment"># 绘制长条</span></span><br><span class="line">    <span class="comment"># 从(m,y[idx])到(m,pre[idx])</span></span><br><span class="line">    plt.plot([m,m],[y[idx],pre[idx]],<span class="string">&#x27;g-&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/image-20221011172111955.png" alt="image-20221011172111955" style="zoom:50%;"><p><strong>step 2️⃣ 显示回归参数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;斜率&quot;</span>,clf.coef_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;截距&quot;</span>,clf.intercept_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;MSE&quot;</span>,np.mean((y-pre)**<span class="number">2</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">斜率 [[<span class="number">0.41575542</span>]]</span><br><span class="line">截距 [-<span class="number">0.36307552</span>]</span><br><span class="line">MSE <span class="number">0.04206730919499318</span></span><br></pre></td></tr></table></figure><p><strong>step 3️⃣ 进行预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(clf.predict([[<span class="number">3.9</span>]]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1.2583706</span>]]</span><br></pre></td></tr></table></figure><hr><h2 id="二、多元线性回归">二、多元线性回归</h2><p>也就是有多个参数啦。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据集</span></span><br><span class="line">d=load_boston()</span><br><span class="line">data=pd.DataFrame(d.data)</span><br><span class="line">data[<span class="string">&#x27;price&#x27;</span>]=d.target</span><br><span class="line"><span class="built_in">print</span>(data.sample(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">            <span class="number">0</span>    <span class="number">1</span>      <span class="number">2</span>    <span class="number">3</span>      <span class="number">4</span>  ...      <span class="number">9</span>    <span class="number">10</span>      <span class="number">11</span>     <span class="number">12</span>  price</span><br><span class="line"><span class="number">373</span>  <span class="number">11.10810</span>  <span class="number">0.0</span>  <span class="number">18.10</span>  <span class="number">0.0</span>  <span class="number">0.668</span>  ...  <span class="number">666.0</span>  <span class="number">20.2</span>  <span class="number">396.90</span>  <span class="number">34.77</span>   <span class="number">13.8</span></span><br><span class="line"><span class="number">491</span>   <span class="number">0.10574</span>  <span class="number">0.0</span>  <span class="number">27.74</span>  <span class="number">0.0</span>  <span class="number">0.609</span>  ...  <span class="number">711.0</span>  <span class="number">20.1</span>  <span class="number">390.11</span>  <span class="number">18.07</span>   <span class="number">13.6</span></span><br><span class="line"><span class="number">91</span>    <span class="number">0.03932</span>  <span class="number">0.0</span>   <span class="number">3.41</span>  <span class="number">0.0</span>  <span class="number">0.489</span>  ...  <span class="number">270.0</span>  <span class="number">17.8</span>  <span class="number">393.55</span>   <span class="number">8.20</span>   <span class="number">22.0</span></span><br><span class="line"><span class="number">363</span>   <span class="number">4.22239</span>  <span class="number">0.0</span>  <span class="number">18.10</span>  <span class="number">1.0</span>  <span class="number">0.770</span>  ...  <span class="number">666.0</span>  <span class="number">20.2</span>  <span class="number">353.04</span>  <span class="number">14.64</span>   <span class="number">16.8</span></span><br><span class="line"><span class="number">322</span>   <span class="number">0.35114</span>  <span class="number">0.0</span>   <span class="number">7.38</span>  <span class="number">0.0</span>  <span class="number">0.493</span>  ...  <span class="number">287.0</span>  <span class="number">19.6</span>  <span class="number">396.90</span>   <span class="number">7.70</span>   <span class="number">20.4</span></span><br><span class="line"></span><br><span class="line">[<span class="number">5</span> rows x <span class="number">14</span> columns]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>多元线性回归</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">y=d.target</span><br><span class="line">x=d.data</span><br><span class="line">clf=LinearRegression()</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="comment"># 分割训练集</span></span><br><span class="line">x_train,x_test,y_train,y_test=train_test_split(x,y)</span><br><span class="line">clf.fit(x_train,y_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;多元线性回归模型参数&quot;</span>,clf.coef_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;多元线性回归模型常数项&quot;</span>,clf.intercept_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测&quot;</span>,clf.predict([x_test[<span class="number">0</span>]]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">多元线性回归模型参数 [-<span class="number">1.11747256e-01</span>  <span class="number">4.05201935e-02</span> -<span class="number">6.69439553e-04</span>  <span class="number">3.34919157e+00</span></span><br><span class="line"> -<span class="number">1.83818082e+01</span>  <span class="number">3.95199967e+00</span> -<span class="number">9.12733246e-03</span> -<span class="number">1.31523502e+00</span></span><br><span class="line">  <span class="number">2.44628300e-01</span> -<span class="number">1.08309725e-02</span> -<span class="number">1.00522555e+00</span>  <span class="number">7.56771086e-03</span></span><br><span class="line"> -<span class="number">4.23492114e-01</span>]</span><br><span class="line">多元线性回归模型常数项 <span class="number">36.524193135861886</span></span><br><span class="line">预测 [<span class="number">15.9054318</span>]</span><br></pre></td></tr></table></figure><p><strong>模型分析</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">y_predict=clf.predict(x_test)</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> r2_score</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测值均方误差&quot;</span>,mean_squared_error(y_test,y_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;R2得分&quot;</span>,r2_score(y_test,y_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;回归得分&quot;</span>,clf.score(x_test,y_test))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;各个特征间的系数矩阵&quot;</span>,clf.coef_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;影响房价的特征排序&quot;</span>,np.argsort(clf.coef_))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;影响房价的特征排序&quot;</span>,d.feature_names[np.argsort(clf.coef_)])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">预测值均方误差 <span class="number">26.66065801123315</span></span><br><span class="line">R2得分 <span class="number">0.7170059315243467</span></span><br><span class="line">回归得分 <span class="number">0.7170059315243467</span></span><br><span class="line">各个特征间的系数矩阵 [-<span class="number">1.24752898e-01</span>  <span class="number">4.23381228e-02</span>  <span class="number">7.89030069e-03</span>  <span class="number">2.76191464e+00</span></span><br><span class="line"> -<span class="number">1.86055326e+01</span>  <span class="number">3.76015663e+00</span> -<span class="number">3.25002550e-03</span> -<span class="number">1.49233753e+00</span></span><br><span class="line">  <span class="number">3.12843628e-01</span> -<span class="number">1.40160600e-02</span> -<span class="number">8.47213267e-01</span>  <span class="number">7.64996205e-03</span></span><br><span class="line"> -<span class="number">5.32883469e-01</span>]</span><br><span class="line">影响房价的特征排序 [ <span class="number">4</span>  <span class="number">7</span> <span class="number">10</span> <span class="number">12</span>  <span class="number">0</span>  <span class="number">9</span>  <span class="number">6</span> <span class="number">11</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">8</span>  <span class="number">3</span>  <span class="number">5</span>]</span><br><span class="line">影响房价的特征排序 [<span class="string">&#x27;NOX&#x27;</span> <span class="string">&#x27;DIS&#x27;</span> <span class="string">&#x27;PTRATIO&#x27;</span> <span class="string">&#x27;LSTAT&#x27;</span> <span class="string">&#x27;CRIM&#x27;</span> <span class="string">&#x27;TAX&#x27;</span> <span class="string">&#x27;AGE&#x27;</span> <span class="string">&#x27;B&#x27;</span> <span class="string">&#x27;INDUS&#x27;</span> <span class="string">&#x27;ZN&#x27;</span> <span class="string">&#x27;RAD&#x27;</span></span><br><span class="line"> <span class="string">&#x27;CHAS&#x27;</span> <span class="string">&#x27;RM&#x27;</span>]</span><br></pre></td></tr></table></figure><hr><h2 id="三、逻辑回归">三、逻辑回归</h2><blockquote><p>如果说线性回归偏向数学，那么逻辑回归就是机器学习从统计领域借鉴来的技术</p></blockquote><p>逻辑回归用来分析二分类或有序的因变量与解释变量之间的关系，算是广义上的线性回归分析方法。他在线性回归的基础上利用<code>Sigmoid</code>函数对事件发生的概率进行预测。</p><p>线性回归可以得到一个预测值，然后通过S函数封装后，就能得到一个概率值，再通过概率值进行<strong>分类</strong>。(上清下浊)</p><p><code>Sigmoid</code>的函数能够将任意值转化为[0,1]范围内，其定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(z)=\frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>我们来看下函数曲线</p><p>宏观尺度</p><img src="/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/image-20221011180841230.png" alt="image-20221011180841230" style="zoom:50%;"><p>微观尺度</p><img src="/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/image-20221011181213717.png" alt="image-20221011181213717" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sigmoid</span>(<span class="params">x</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="number">1.</span>/(<span class="number">1.</span>+np.exp(-x))</span><br></pre></td></tr></table></figure><h3 id="Python-实现">Python 实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">x=load_iris().data</span><br><span class="line">y=load_iris().target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line">x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=<span class="number">0.25</span>,random_state=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line">sc=StandardScaler()</span><br><span class="line">x_train=sc.fit_transform(x_train)</span><br><span class="line">x_test=sc.transform(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行逻辑回归</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line">classifier=LogisticRegression(random_state=<span class="number">0</span>)</span><br><span class="line">classifier.fit(x_train,y_train)</span><br><span class="line">y_pred=classifier.predict(x_test)</span><br><span class="line"><span class="comment"># 测试准确性</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Accuracy of LR %.3f&quot;</span>%classifier.score(x_test,y_test))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Accuracy of LR <span class="number">0.974</span></span><br></pre></td></tr></table></figure><p>我们可以看一下经过逻辑回归后的数据：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>这是个多分类的回归。</p><hr><h2 id="四、多项式回归">四、多项式回归</h2><p>适用于非线性关系。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 线性回归</span></span><br><span class="line">lin_reg=LinearRegression()</span><br><span class="line">lin_reg.fit(X,y)</span><br><span class="line">y_pre=lin_reg.predict(X)</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="literal">False</span></span><br><span class="line">ax[<span class="number">1</span>].scatter(x,y)</span><br><span class="line">ax[<span class="number">1</span>].plot(x,y_pre,color=<span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多项式回归</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br><span class="line">POLY=PolynomialFeatures(degree=<span class="number">2</span>) <span class="comment"># 设置最多几次幂</span></span><br><span class="line">POLY.fit(X)</span><br><span class="line">x2=POLY.transform(X)</span><br><span class="line"><span class="comment"># 这个多项式回归是对x进行处理后，让其成为非线性关系</span></span><br><span class="line"><span class="comment"># 譬如：</span></span><br><span class="line"><span class="built_in">print</span>(x.shape)</span><br><span class="line"><span class="built_in">print</span>(x2.shape)</span><br><span class="line"><span class="comment"># (100,)</span></span><br><span class="line"><span class="comment"># (100, 3)</span></span><br><span class="line"><span class="comment"># 之后的操作与LR完全相同，所以Polynomial并没有作为独立的API</span></span><br><span class="line"><span class="comment"># 而是放在preprocessing</span></span><br><span class="line">lin_reg2=LinearRegression()</span><br><span class="line">lin_reg2.fit(x2,y)</span><br><span class="line">y_pre2=lin_reg2.predict(x2)</span><br><span class="line"></span><br><span class="line">ax[<span class="number">2</span>].scatter(x,y)</span><br><span class="line"><span class="comment"># 此时的关系并不再是原先的对应了</span></span><br><span class="line">ax[<span class="number">2</span>].plot(np.sort(x),y_pre2[np.argsort(x)],color=<span class="string">&quot;b&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># degree调成10 后</span></span><br><span class="line">POLY=PolynomialFeatures(degree=<span class="number">10</span>) <span class="comment"># 设置最多几次幂</span></span><br><span class="line">POLY.fit(X)</span><br><span class="line">x2=POLY.transform(X)</span><br><span class="line"><span class="comment"># 这个多项式回归是对x进行处理后，让其成为非线性关系</span></span><br><span class="line"><span class="comment"># 譬如：</span></span><br><span class="line"><span class="built_in">print</span>(x.shape)</span><br><span class="line"><span class="built_in">print</span>(x2.shape)</span><br><span class="line"><span class="comment"># (100,)</span></span><br><span class="line"><span class="comment"># (100, 11)</span></span><br><span class="line"><span class="comment"># 之后的操作与LR完全相同，所以Polynomial并没有作为独立的API</span></span><br><span class="line"><span class="comment"># 而是放在preprocessing</span></span><br><span class="line">lin_reg2=LinearRegression()</span><br><span class="line">lin_reg2.fit(x2,y)</span><br><span class="line">y_pre2=lin_reg2.predict(x2)</span><br><span class="line">ax[<span class="number">3</span>].scatter(x,y)</span><br><span class="line">ax[<span class="number">3</span>].plot(np.sort(x),y_pre2[np.argsort(x)],color=<span class="string">&quot;g&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/image-20221011191449277.png" alt="image-20221011191449277" style="zoom:50%;"><hr><h2 id="五、岭回归">五、岭回归</h2><p>岭回归(Ridge Regression)是一种专用于共线性数据分析的有偏估计回归方法，实质上是改良的最小二乘法。通过放弃无偏性，降低部分信息为代价，使回归系数更加可靠，对病态数据的耐受性远高于最小二乘法。</p><p>通常的岭回归是在顺势函数中加入L2正则项：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(\theta)=\frac{1}{N}\sum_{i=1}^N(f(x_i;\theta)-y_i)^2+\frac{\lambda}{2}||\theta||^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||\theta||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣∣</span></span></span></span>表示向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">2</span></span></span></span>范数。岭回归的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>往往会小于线性回归，但其具有更强的泛化能力，也能解决线性回归汇总的不可逆问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Ridge,RidgeCV</span><br><span class="line"><span class="comment"># Ridge CV是广义交叉验证的岭回归</span></span><br><span class="line">X,y=load_iris(return_X_y=<span class="literal">True</span>)</span><br><span class="line">x=X[:,<span class="number">1</span>].reshape(<span class="built_in">len</span>(X),-<span class="number">1</span>)</span><br><span class="line">y=X[:,<span class="number">0</span>].reshape(<span class="built_in">len</span>(X),-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">model=Ridge(alpha=<span class="number">0.5</span>)</span><br><span class="line">model1=RidgeCV(alphas=[<span class="number">0.1</span>,<span class="number">1.0</span>,<span class="number">10.0</span>]) <span class="comment"># cross validation</span></span><br><span class="line"></span><br><span class="line">model.fit(x,y)</span><br><span class="line">model1.fit(x,y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;系数矩阵&quot;</span>,model.coef_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;线性回归模型&quot;</span>,model)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;CV最优alpha值&quot;</span>,model1.alpha_)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型预测</span></span><br><span class="line">pre=model.predict(x)</span><br><span class="line">plt.scatter(x,y)</span><br><span class="line">plt.plot(x,pre)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">系数矩阵 [[-<span class="number">0.2194842</span>]]</span><br><span class="line">线性回归模型 Ridge(alpha=<span class="number">0.5</span>)</span><br><span class="line">CV最优alpha值 <span class="number">10.0</span></span><br></pre></td></tr></table></figure><img src="/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/image-20221011192944017.png" alt="image-20221011192944017" style="zoom:50%;"><hr><h2 id="六、Lasso回归">六、Lasso回归</h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">2</span></span></span></span>正则只能削弱影响，而不能剔除变量。Lasso(Least Absolute Shrinkage and Selection Operator)模型将惩罚项换为了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">1</span></span></span></span>正则，从而达到剔除变量的作用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> r2_score</span><br><span class="line"><span class="comment"># 产生一些稀疏数据</span></span><br><span class="line">np.random.seed(<span class="number">42</span>)</span><br><span class="line">n_samples,n_features=<span class="number">50</span>,<span class="number">100</span></span><br><span class="line"></span><br><span class="line">X=np.random.randn(n_samples,n_features)</span><br><span class="line">coef=<span class="number">3</span>*np.random.randn(n_features) <span class="comment"># 每个特征对应一个系数</span></span><br><span class="line"></span><br><span class="line">inds=np.arange(n_features)</span><br><span class="line">np.random.shuffle(inds)</span><br><span class="line">coef[inds[<span class="number">10</span>:]]=<span class="number">0</span> <span class="comment"># 随机将向量中的10个变为0 稀疏化</span></span><br><span class="line">y=np.dot(X,coef)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加高斯噪声</span></span><br><span class="line">y+=<span class="number">0.01</span>*np.random.normal(size=n_samples)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 划分数据集</span></span><br><span class="line">n_samples=X.shape[<span class="number">0</span>]</span><br><span class="line">X_train,y_train=X[:n_samples//<span class="number">2</span>],y[:n_samples//<span class="number">2</span>]</span><br><span class="line">X_test,y_test=X[n_samples//<span class="number">2</span>:],y[n_samples//<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练Lasson模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br><span class="line">alpha=<span class="number">0.1</span></span><br><span class="line">lass=Lasso(alpha=alpha)</span><br><span class="line">y_pre=lass.fit(X_train,y_train).predict(X_test)</span><br><span class="line">r2_score_lasso=r2_score(y_test,y_pre)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;R^2 socre&quot;</span>,r2_score_lasso)</span><br><span class="line">plt.plot(lass.coef_,color=<span class="string">&#x27;gold&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;Lasso R^2 %s&quot;</span>%r2_score_lasso)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/11/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E5%9B%9E%E5%BD%92/image-20221011200249640.png" alt="image-20221011200249640" style="zoom:50%;"><hr><h2 id="回归案例–波士顿数据处理">回归案例–波士顿数据处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression,SGDRegressor,Ridge,Lasso</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error,accuracy_score</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">linearModel</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. load dataset</span></span><br><span class="line">    X,y=load_boston(return_X_y=<span class="literal">True</span>)</span><br><span class="line">    X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=<span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. Standard</span></span><br><span class="line">    std=StandardScaler()</span><br><span class="line">    X_train=std.fit_transform(X_train)</span><br><span class="line">    X_test=std.transform(X_test)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加维度</span></span><br><span class="line">    <span class="comment"># y=y[:,np.newaxis]</span></span><br><span class="line">    y_test=y_test[:,np.newaxis]</span><br><span class="line">    y_train=y_train[:,np.newaxis]</span><br><span class="line"></span><br><span class="line">    std_y=StandardScaler()</span><br><span class="line">    y_train=std_y.fit_transform(y_train)</span><br><span class="line">    y_test=std_y.transform(y_test)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. training</span></span><br><span class="line"></span><br><span class="line">    lr=LinearRegression()</span><br><span class="line">    sgd=SGDRegressor()</span><br><span class="line">    rid=Ridge(alpha=<span class="number">0.5</span>)</span><br><span class="line">    las=Lasso(alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    lr.fit(X_train,y_train)</span><br><span class="line">    y_lr_pre=lr.predict(X_test)</span><br><span class="line">    <span class="comment"># 还原真实值</span></span><br><span class="line">    <span class="comment"># 这是因为我们做处理用的都是标准化</span></span><br><span class="line">    <span class="comment"># 所以最后跟原始数据比较需要反标准化</span></span><br><span class="line">    y_lr_pre=std_y.inverse_transform(y_lr_pre)</span><br><span class="line"></span><br><span class="line">    sgd.fit(X_train,y_train)</span><br><span class="line">    y_sgd_pre=sgd.predict(X_test)</span><br><span class="line">    y_sgd_pre=std_y.inverse_transform(y_sgd_pre)</span><br><span class="line"></span><br><span class="line">    rid.fit(X_train, y_train)</span><br><span class="line">    y_rid_pre = rid.predict(X_test)</span><br><span class="line">    y_rid_pre = std_y.inverse_transform(y_rid_pre)</span><br><span class="line"></span><br><span class="line">    las.fit(X_train, y_train)</span><br><span class="line">    y_las_pre = las.predict(X_test)</span><br><span class="line">    y_las_pre = std_y.inverse_transform(y_las_pre)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4. evaluation</span></span><br><span class="line">    y_test=std_y.inverse_transform(y_test)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;线性回归的均方误差为: &quot;</span>,mean_squared_error(y_test,y_lr_pre))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;梯度下降的均方误差为: &quot;</span>,mean_squared_error(y_test,y_sgd_pre))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;岭回归的均方误差为: &quot;</span>,mean_squared_error(y_test,y_rid_pre))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Lasson均方误差为: &quot;</span>,mean_squared_error(y_test,y_las_pre))</span><br><span class="line"></span><br><span class="line">linearModel()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">线性回归的均方误差为:  <span class="number">24.474589501317524</span></span><br><span class="line">梯度下降的均方误差为:  <span class="number">23.82902862765662</span></span><br><span class="line">岭回归的均方误差为:  <span class="number">24.433234356526174</span></span><br><span class="line">Lasson均方误差为:  <span class="number">61.95307932912878</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】HW1</title>
    <link href="http://example.com/2022/10/09/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW1/"/>
    <id>http://example.com/2022/10/09/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW1/</id>
    <published>2022-10-09T15:37:47.738Z</published>
    <updated>2022-10-09T15:38:16.150Z</updated>
    
    <content type="html"><![CDATA[<h1>HW1</h1><h2 id="Submission-requirements">Submission requirements:</h2><h3 id="Please-submit-your-solutions-to-our-class-website">Please submit your solutions to our class website.</h3><hr><p>Q1.Suppose that a data warehouse consists of four dimensions, <strong>date</strong>, <strong>spectator</strong>, <strong>location</strong>, and <strong>game</strong>, and two measures, <strong>count and charge</strong>, where charge is the fare that a spectator pays when watching a game on a given date. Spectators may be students, adults, or seniors, with each category having its own charge rate.</p><p>(a) Draw a <strong>star schema diagram</strong> for the data warehouse.</p><img src="/2022/10/09/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW1/image-20221009222600782.png" alt="image-20221009222600782" style="zoom:25%;"><p>(b) Starting with the base cuboid [<strong>date,</strong> <strong>spectator, location, game</strong>]，what specific <strong>OLAP operations</strong> should one perform in order to list the total charge paid by student spectators in Los Angeles?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">step <span class="number">1.</span> Roll-up on date <span class="keyword">from</span> date_key to <span class="built_in">all</span></span><br><span class="line">step <span class="number">2.</span> Roll-up on spectator <span class="keyword">from</span> spectator_key to status</span><br><span class="line">step <span class="number">3.</span> Roll-up on location <span class="keyword">from</span> location_key to location_name</span><br><span class="line">step <span class="number">4.</span> Roll-up on game <span class="keyword">from</span> game_key to <span class="built_in">all</span></span><br><span class="line"></span><br><span class="line">step <span class="number">5.</span> Dice <span class="keyword">with</span> <span class="string">&quot;status=student&quot;</span> <span class="keyword">and</span> <span class="string">&quot;location_name=Los Angeles&quot;</span></span><br></pre></td></tr></table></figure><p>© Bitmap indexing is a very useful optimization technique. Please present the pros and cons of using bitmap indexing in this given data warehouse.</p><p><strong>优点</strong></p><p>位图索引是一种高效的索引结构，在查询、过滤等方面上，由于进行的是位运算，所以比常规的查询方式快很多。例如在本仓库中，假设对于<code>spectator</code>表的子列<code>status</code>，我们有：</p><table><thead><tr><th style="text-align:center">spectator_key</th><th style="text-align:center">status</th><th style="text-align:center">gender</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">学生</td><td style="text-align:center">男</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">成人</td><td style="text-align:center">女</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">学生</td><td style="text-align:center">男</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">学生</td><td style="text-align:center">女</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">老人</td><td style="text-align:center">女</td></tr></tbody></table><p><code>status</code>就可以建立以下位图索引：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">status=<span class="string">&quot;学生&quot;</span> : <span class="number">10110</span></span><br><span class="line">status=<span class="string">&quot;成人&quot;</span> : <span class="number">01000</span></span><br><span class="line">status=<span class="string">&quot;老人&quot;</span> : <span class="number">00001</span></span><br></pre></td></tr></table></figure><p><code>gender</code>可以建立以下位图索引：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gender=<span class="string">&quot;男&quot;</span>: <span class="number">10100</span></span><br><span class="line">gender=<span class="string">&quot;女&quot;</span>: <span class="number">01011</span></span><br></pre></td></tr></table></figure><p>例如，我们想要查询学生，只需要用<code>10110</code>去过滤原始数据就行。</p><p>我们想混合查询，比如同时查询<code>status=&quot;学生&quot;</code>和<code>gender=&quot;男&quot;</code>的数据，只需要进行并操作就行了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10110</span> &amp; <span class="number">10100</span> = <span class="number">10100</span></span><br></pre></td></tr></table></figure><p>可以大大提高计算速度。</p><p>此外，位图索引可以在一定程度上<code>绕开</code>原始数据，进一步提高处理速度。例如，我们想统计满足上面条件的人数，只需要:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ans=<span class="number">0</span></span><br><span class="line">x=(<span class="number">10110</span>&amp;<span class="number">10100</span>)</span><br><span class="line"><span class="keyword">while</span> x:</span><br><span class="line">x&amp;=(x-<span class="number">1</span>)</span><br><span class="line">ans+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>缺点</strong></p><p>位图索引比较适合枚举类型，也就是离散型变量，对于连续变量，位图索引并不适用，往往需要先做离散化。比如本仓库中，<code>phone number</code>字段可能就不太适合(也许这个字段没有存在的必要？)</p><p>而当属性列非常多时，我们做位图索引的开销也比较大。</p><hr><p>Q2．某电子邮件数据库中存储了大量的电子邮件。请设计数据仓库的结构，以便用户从多个维度进行查询和挖掘。</p><img src="/2022/10/09/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW1/image-20221009232956580.png" alt="image-20221009232956580" style="zoom:33%;"><hr><p>Q3. Suppose a hospital tested the age and body fat data for 18 random selected adults with the following result:</p><table><thead><tr><th><strong>age</strong></th><th>23</th><th>23</th><th>27</th><th>27</th><th>39</th><th>41</th><th>47</th><th>49</th><th>50</th><th>52</th><th>54</th><th>54</th><th>56</th><th>57</th><th>58</th><th>58</th><th>60</th><th>61</th></tr></thead><tbody><tr><td><strong>%fat</strong></td><td>9.5</td><td>26.5</td><td>7.8</td><td>17.8</td><td>31.4</td><td>25.9</td><td>27.4</td><td>27.2</td><td>31.2</td><td>34.6</td><td>42.5</td><td>28.8</td><td>33.4</td><td>30.2</td><td>34.1</td><td>32.9</td><td>41.2</td><td>35.7</td></tr></tbody></table><p>(a) Calculate the mean, median, and standard deviation of <strong>age</strong> and <strong>%fat</strong>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">             age       %fat</span><br><span class="line">mean   <span class="number">46.444444</span>  <span class="number">28.783333</span></span><br><span class="line">std    <span class="number">13.218624</span>   <span class="number">9.254395</span></span><br><span class="line">median      <span class="number">51.0</span>       <span class="number">30.7</span></span><br></pre></td></tr></table></figure><p>(b) Draw the boxplots for <strong>age</strong> and <strong>%fat</strong>.</p><img src="/2022/10/09/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW1/image-20221009223335906.png" alt="image-20221009223335906" style="zoom: 25%;"><p>© Draw a scatter plot based on these two variables.</p><img src="/2022/10/09/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91HW1/image-20221009224804969.png" alt="image-20221009224804969" style="zoom: 25%;"><p>(d) Normalize <strong>age</strong> based on <strong>min-max normalization</strong>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=data[<span class="string">&quot;age&quot;</span>]</span><br><span class="line">y=data[<span class="string">&#x27;%fat&#x27;</span>]</span><br><span class="line">X=(x-x.<span class="built_in">min</span>())/(x.<span class="built_in">max</span>()-x.<span class="built_in">min</span>())</span><br><span class="line">Y=(y-y.<span class="built_in">min</span>())/(y.<span class="built_in">max</span>()-y.<span class="built_in">min</span>())</span><br><span class="line"><span class="built_in">print</span>(X,Y)</span><br></pre></td></tr></table></figure><p>Result is:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>     <span class="number">0.000000</span></span><br><span class="line"><span class="number">1</span>     <span class="number">0.000000</span></span><br><span class="line"><span class="number">2</span>     <span class="number">0.105263</span></span><br><span class="line"><span class="number">3</span>     <span class="number">0.105263</span></span><br><span class="line"><span class="number">4</span>     <span class="number">0.421053</span></span><br><span class="line"><span class="number">5</span>     <span class="number">0.473684</span></span><br><span class="line"><span class="number">6</span>     <span class="number">0.631579</span></span><br><span class="line"><span class="number">7</span>     <span class="number">0.684211</span></span><br><span class="line"><span class="number">8</span>     <span class="number">0.710526</span></span><br><span class="line"><span class="number">9</span>     <span class="number">0.763158</span></span><br><span class="line"><span class="number">10</span>    <span class="number">0.815789</span></span><br><span class="line"><span class="number">11</span>    <span class="number">0.815789</span></span><br><span class="line"><span class="number">12</span>    <span class="number">0.868421</span></span><br><span class="line"><span class="number">13</span>    <span class="number">0.894737</span></span><br><span class="line"><span class="number">14</span>    <span class="number">0.921053</span></span><br><span class="line"><span class="number">15</span>    <span class="number">0.921053</span></span><br><span class="line"><span class="number">16</span>    <span class="number">0.973684</span></span><br><span class="line"><span class="number">17</span>    <span class="number">1.000000</span></span><br></pre></td></tr></table></figure><p>(e) Calculate the <strong>correlation coefficient</strong> (Pearson’s product moment coefficient). Are these two variables positively or negatively correlated?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.corrcoef(x,y))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;相关系数&quot;</span> ,stats.pearsonr(x,y)[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>Result is</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1.</span>        <span class="number">0.8176188</span>]</span><br><span class="line"> [<span class="number">0.8176188</span> <span class="number">1.</span>       ]]</span><br><span class="line">相关系数 <span class="number">0.8176187964565874</span></span><br></pre></td></tr></table></figure><p>I think they are positively correlated.</p><p>(f) Smooth the fat data by bin means, using a bin depth of 6.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mean</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">round</span>(<span class="built_in">sum</span>(x)/<span class="built_in">len</span>(x),<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">N_y=<span class="built_in">sorted</span>(y)</span><br><span class="line">bins=[[]]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> N_y:</span><br><span class="line">    bins[-<span class="number">1</span>].append(j)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>((v:=bins[-<span class="number">1</span>]))==<span class="number">6</span>:</span><br><span class="line">        v[:]=[mean(v)]*<span class="built_in">len</span>(v)</span><br><span class="line">        bins.append([])</span><br><span class="line"><span class="keyword">for</span> i,j  <span class="keyword">in</span> <span class="built_in">enumerate</span>(bins[:-<span class="number">1</span>]):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;bin %d is :&quot;</span>%(i+<span class="number">1</span>),j)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bin</span> <span class="number">1</span> <span class="keyword">is</span> : [<span class="number">19.12</span>, <span class="number">19.12</span>, <span class="number">19.12</span>, <span class="number">19.12</span>, <span class="number">19.12</span>, <span class="number">19.12</span>]</span><br><span class="line"><span class="built_in">bin</span> <span class="number">2</span> <span class="keyword">is</span> : [<span class="number">30.32</span>, <span class="number">30.32</span>, <span class="number">30.32</span>, <span class="number">30.32</span>, <span class="number">30.32</span>, <span class="number">30.32</span>]</span><br><span class="line"><span class="built_in">bin</span> <span class="number">3</span> <span class="keyword">is</span> : [<span class="number">36.92</span>, <span class="number">36.92</span>, <span class="number">36.92</span>, <span class="number">36.92</span>, <span class="number">36.92</span>, <span class="number">36.92</span>]</span><br></pre></td></tr></table></figure><p>(g) Smooth the fat data by bin boundaries, using a bin depth of 6.</p><p>这里因为我们是对排好序的数据做处理，所以可以通过二分法进行优化，获取中间分界。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">close</span>(<span class="params">x,a,b</span>):</span><br><span class="line">    <span class="comment"># 是否靠近下界</span></span><br><span class="line">    <span class="keyword">return</span> (x-a)&lt;=(b-x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">boundary</span>(<span class="params">x</span>):</span><br><span class="line">    Min=x[<span class="number">0</span>]</span><br><span class="line">    Max=x[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    l,r=<span class="number">0</span>,<span class="built_in">len</span>(x)-<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> l&lt;=r:</span><br><span class="line">        mid=(r-l)//<span class="number">2</span>+l</span><br><span class="line">        <span class="keyword">if</span> close(x[mid],Min,Max):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> close(x[mid+<span class="number">1</span>],Min,Max):</span><br><span class="line">                l=mid</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            l=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> close(x[mid-<span class="number">1</span>],Min,Max):</span><br><span class="line">                l=mid</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            r=mid-<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> [[Min]*l+[Max]*(<span class="built_in">len</span>(x)-l)]</span><br><span class="line"></span><br><span class="line">N_y=<span class="built_in">sorted</span>(y)</span><br><span class="line">bins=[[]]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> N_y:</span><br><span class="line">    bins[-<span class="number">1</span>].append(j)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>((v:=bins[-<span class="number">1</span>]))==<span class="number">6</span>:</span><br><span class="line">        v[:]=boundary(v)</span><br><span class="line">        bins.append([])</span><br><span class="line"><span class="keyword">for</span> i,j  <span class="keyword">in</span> <span class="built_in">enumerate</span>(bins[:-<span class="number">1</span>]):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;bin %d is :&quot;</span>%(i+<span class="number">1</span>),j)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bin</span> <span class="number">1</span> <span class="keyword">is</span> : [[<span class="number">7.8</span>, <span class="number">7.8</span>, <span class="number">27.2</span>, <span class="number">27.2</span>, <span class="number">27.2</span>, <span class="number">27.2</span>]]</span><br><span class="line"><span class="built_in">bin</span> <span class="number">2</span> <span class="keyword">is</span> : [[<span class="number">27.4</span>, <span class="number">27.4</span>, <span class="number">32.9</span>, <span class="number">32.9</span>, <span class="number">32.9</span>, <span class="number">32.9</span>]]</span><br><span class="line"><span class="built_in">bin</span> <span class="number">3</span> <span class="keyword">is</span> : [[<span class="number">33.4</span>, <span class="number">33.4</span>, <span class="number">33.4</span>, <span class="number">33.4</span>, <span class="number">42.5</span>, <span class="number">42.5</span>]]</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】Chapter 2. 数据预处理</title>
    <link href="http://example.com/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/"/>
    <id>http://example.com/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/</id>
    <published>2022-10-08T03:51:54.528Z</published>
    <updated>2022-10-09T04:53:34.896Z</updated>
    
    <content type="html"><![CDATA[<p>现实生活中的数据极易收到噪声、缺失值和不一致数据的影响。数据预处理是数据挖掘过程中的第一个步骤，主要有数据清洗、数据集成、数据归约和数据变换等方式。</p><h2 id="一、数据预处理的必要性">一、数据预处理的必要性</h2><hr><p>数据的质量决定了数据挖掘的效果。而在原始数据中，大多数据都是<code>Dirty</code>数据，他们存在以下几个方面的问题。</p><ul><li>数据不一致</li><li>噪声数据</li><li>缺失值</li></ul><blockquote><p>那，既然数据如此重要，我们就需要一套体系来评估数据的好坏不是吗</p></blockquote><p>1️⃣ <strong>准确性</strong></p><p>数据记录是否存在异常或者误差</p><p>2️⃣ <strong>一致性</strong></p><p>数据是否符合某一规则</p><p>3️⃣ <strong>完整性</strong></p><p>是否存在确实</p><p>4️⃣ <strong>时效性</strong></p><p>能否及时更新</p><p>5️⃣ <strong>可信性</strong></p><p>用户可以信赖的数据</p><p>6️⃣ <strong>可解释性</strong></p><p>是否易于理解</p><hr><h2 id="二、数据清洗">二、数据清洗</h2><h3 id="2-1-数据清洗方法">2.1  数据清洗方法</h3><p>1️⃣ <strong>缺失值处理</strong></p><ul><li>忽略元组</li><li>人工填写缺失值</li><li>使用常量填充缺失值</li><li>使用中心趋势度填充缺失值</li><li>采用均值或者中位数填充</li><li>利用最可能的值进行填充</li></ul><hr><p>2️⃣ <strong>噪声数据处理</strong></p><ul><li>分箱–借助邻域来光滑数据值</li><li>回归–采样函数来拟合光滑数据</li><li>离去点分析</li></ul><hr><h3 id="2-2-基于Pandas进行数据清洗">2.2  基于Pandas进行数据清洗</h3><p>1️⃣ <strong>检测与处理缺失值</strong></p><p>👦 <strong>检测非空值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.isnull()</span><br></pre></td></tr></table></figure><p>📧 <strong>统计非空值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.isnull().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><p>🏁 <strong>查看非空值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></table></figure><hr><p>2️⃣ <strong>缺失值处理</strong></p><p>🅱️ <strong>删除</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dropna()</span><br></pre></td></tr></table></figure><p><code>dropna()</code>对于<code>Series</code>，会返回一个仅含非空数据和索引的<code>Series</code>，而对于一个<code>DataFrame</code>对象，则会默认丢弃任何含有缺失值的行。</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">axis</td><td style="text-align:center">0是行 1是列</td></tr><tr><td style="text-align:center">how</td><td style="text-align:center">确认缺失值的个数，'any’表示只要有缺失值就丢了,'all’则要全部</td></tr><tr><td style="text-align:center">thresh</td><td style="text-align:center">可以确定缺失值阈值</td></tr><tr><td style="text-align:center">subset</td><td style="text-align:center">只对子列进行操作，例如subset=[‘a’,'b]</td></tr><tr><td style="text-align:center">inplace</td><td style="text-align:center">不返回</td></tr></tbody></table><p>🅰️ <strong>填充</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fillna()</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">value</td><td style="text-align:center">用于填充缺失值的标量值或者字典对象</td></tr><tr><td style="text-align:center">method</td><td style="text-align:center">插值方法</td></tr><tr><td style="text-align:center">axis</td><td style="text-align:center">待填充的轴</td></tr><tr><td style="text-align:center">inplace</td><td style="text-align:center">原地修改</td></tr><tr><td style="text-align:center">limit</td><td style="text-align:center">可以连续填充的最大数量</td></tr></tbody></table><p><strong>举个栗子</strong></p><p><code>fillna()</code>可以通过字典的方式进行填充。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df=pd.DataFrame(np.random.randn(<span class="number">5</span>,<span class="number">3</span>))</span><br><span class="line">df.iloc[:<span class="number">3</span>,<span class="number">1</span>:]=pd.NA</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="built_in">print</span>(df.fillna(&#123;<span class="number">1</span>:<span class="number">0.1</span>,<span class="number">2</span>:<span class="number">0.2</span>&#125;))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">          <span class="number">0</span>         <span class="number">1</span>         <span class="number">2</span></span><br><span class="line"><span class="number">0</span>  <span class="number">0.078301</span>      &lt;NA&gt;      &lt;NA&gt;</span><br><span class="line"><span class="number">1</span>  <span class="number">1.310107</span>      &lt;NA&gt;      &lt;NA&gt;</span><br><span class="line"><span class="number">2</span>  <span class="number">0.025339</span>      &lt;NA&gt;      &lt;NA&gt;</span><br><span class="line"><span class="number">3</span>  <span class="number">0.011049</span> -<span class="number">0.053258</span> -<span class="number">0.259365</span></span><br><span class="line"><span class="number">4</span>  <span class="number">0.664727</span>  <span class="number">0.023836</span> -<span class="number">2.092003</span></span><br><span class="line">          <span class="number">0</span>         <span class="number">1</span>         <span class="number">2</span></span><br><span class="line"><span class="number">0</span>  <span class="number">0.078301</span>  <span class="number">0.100000</span>  <span class="number">0.200000</span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.310107</span>  <span class="number">0.100000</span>  <span class="number">0.200000</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.025339</span>  <span class="number">0.100000</span>  <span class="number">0.200000</span></span><br><span class="line"><span class="number">3</span>  <span class="number">0.011049</span> -<span class="number">0.053258</span> -<span class="number">0.259365</span></span><br><span class="line"><span class="number">4</span>  <span class="number">0.664727</span>  <span class="number">0.023836</span> -<span class="number">2.092003</span></span><br></pre></td></tr></table></figure><p>使用均值填充：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.fillna(data.mean())</span><br></pre></td></tr></table></figure><hr><p>3️⃣ <strong>数据值替换</strong></p><p>通过<code>relpace()</code>方法进行替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;<span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;小明&#x27;</span>,<span class="string">&#x27;马芳&#x27;</span>,<span class="string">&#x27;国志&#x27;</span>],<span class="string">&#x27;性别&#x27;</span>:[<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>],</span><br><span class="line">      <span class="string">&#x27;籍贯&#x27;</span>:[<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;甘肃&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>]&#125;</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line">df=df.replace(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;我是你爹&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   姓名 性别    籍贯</span><br><span class="line"><span class="number">0</span>  张三  <span class="number">0</span>    北京</span><br><span class="line"><span class="number">1</span>  小明  <span class="number">1</span>    甘肃</span><br><span class="line"><span class="number">2</span>  马芳  <span class="number">0</span>  我是你爹</span><br><span class="line"><span class="number">3</span>  国志  <span class="number">1</span>    上海</span><br></pre></td></tr></table></figure><p>当然，也可以通过传入<code>列表</code>的方式进行多列更改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df=df.replace([<span class="string">&quot;我是你爹&quot;</span>,<span class="string">&quot;北京&quot;</span>],[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;PK&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><p>哦提一嘴，这里需要接收！！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   姓名 性别  籍贯</span><br><span class="line"><span class="number">0</span>  张三  <span class="number">0</span>  PK</span><br><span class="line"><span class="number">1</span>  小明  <span class="number">1</span>  甘肃</span><br><span class="line"><span class="number">2</span>  马芳  <span class="number">0</span>  北京</span><br><span class="line"><span class="number">3</span>  国志  <span class="number">1</span>  上海</span><br></pre></td></tr></table></figure><p>不难发现，第一个列表是需要替换的值，第二个列表是替换后的值，且他们之间是并行的！不能链式替换~</p><p>也可以通过字典实现多值替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df=df.replace(&#123;<span class="string">&quot;1&quot;</span>:<span class="string">&quot;男&quot;</span>,<span class="string">&quot;0&quot;</span>:<span class="string">&#x27;女&#x27;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   姓名 性别  籍贯</span><br><span class="line"><span class="number">0</span>  张三  女  PK</span><br><span class="line"><span class="number">1</span>  小明  男  甘肃</span><br><span class="line"><span class="number">2</span>  马芳  女  北京</span><br><span class="line"><span class="number">3</span>  国志  男  上海</span><br></pre></td></tr></table></figure><p>通过自定义函数<code>map</code>实现~！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;<span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;小明&#x27;</span>,<span class="string">&#x27;马芳&#x27;</span>,<span class="string">&#x27;国志&#x27;</span>],<span class="string">&#x27;性别&#x27;</span>:[<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>],</span><br><span class="line">      <span class="string">&#x27;籍贯&#x27;</span>:[<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;甘肃&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>]&#125;</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line">df[<span class="string">&#x27;成绩&#x27;</span>]=[<span class="number">58</span>,<span class="number">62</span>,<span class="number">71</span>,<span class="number">99</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">grade</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">90</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;优&quot;</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">80</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;良&quot;</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">60</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;及格&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;不及格&quot;</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">&#x27;成绩&#x27;</span>]=df[<span class="string">&#x27;成绩&#x27;</span>].<span class="built_in">map</span>(grade)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   姓名 性别  籍贯   成绩</span><br><span class="line"><span class="number">0</span>  张三  <span class="number">0</span>  北京  不及格</span><br><span class="line"><span class="number">1</span>  小明  <span class="number">1</span>  甘肃   及格</span><br><span class="line"><span class="number">2</span>  马芳  <span class="number">0</span>       及格</span><br><span class="line"><span class="number">3</span>  国志  <span class="number">1</span>  上海    优</span><br></pre></td></tr></table></figure><hr><p>4️⃣ <strong>异常值检测</strong></p><p><strong>散点图</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wdf=pd.DataFrame(np.arange(<span class="number">20</span>),columns=[<span class="string">&#x27;W&#x27;</span>])</span><br><span class="line">wdf[<span class="string">&#x27;Y&#x27;</span>]=wdf[<span class="string">&#x27;W&#x27;</span>]*<span class="number">1.5</span>+<span class="number">2</span></span><br><span class="line">wdf.iloc[<span class="number">3</span>,<span class="number">1</span>]=<span class="number">128</span></span><br><span class="line">wdf.iloc[<span class="number">18</span>,<span class="number">1</span>]=<span class="number">150</span></span><br><span class="line">wdf.plot(kind=<span class="string">&#x27;scatter&#x27;</span>,x=<span class="string">&#x27;W&#x27;</span>,y=<span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/image-20221008171302620.png" alt="image-20221008171302620" style="zoom:50%;"><p><strong>箱线图</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(wdf[<span class="string">&#x27;Y&#x27;</span>].values,notch=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/image-20221008171417603.png" alt="image-20221008171417603" style="zoom:50%;"><p><strong>3<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>法则</strong></p><p>数据服从正态分布时，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>σ</mi></mrow><annotation encoding="application/x-tex">3\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>法则下，异常值被定义为一组测定值中与均值偏差超过三倍标准差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>的值。因为在正态分布下，距离均值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>σ</mi></mrow><annotation encoding="application/x-tex">3\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>之外的值出现的概率小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.003</mn></mrow><annotation encoding="application/x-tex">0.003</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.003</span></span></span></span>，可看做小概率时间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outRange</span>(<span class="params">S</span>):</span><br><span class="line">    blidx=(S.mean()-<span class="number">3</span>*S.std()&gt;S)|(S.mean()+<span class="number">3</span>*S.std()&lt;S)</span><br><span class="line">    idx=np.arange(S.shape[<span class="number">0</span>])[blidx]</span><br><span class="line">    outRange=S.iloc[idx]</span><br><span class="line">    <span class="keyword">return</span> outRange</span><br><span class="line"><span class="built_in">print</span>(outRange(wdf[<span class="string">&#x27;Y&#x27;</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">18</span>    <span class="number">150.0</span></span><br><span class="line">Name: Y, dtype: float64</span><br></pre></td></tr></table></figure><p>值得注意的是啊，像这种表达式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S.mean()-S.std()&gt;S</span><br></pre></td></tr></table></figure><p>会返回有个只有<code>True</code>或者<code>False</code>的<code>Series</code>，也就是<code>0,1</code>。此时可以用位运算<code>|</code>保留<code>1</code>的结果。</p><p>但是拿到了<code>Series</code>，我们还要原始数据呐不是，所以还需要获取原始数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idx=np.arange(S.shape[<span class="number">0</span>])[blidx]</span><br><span class="line">S.iloc[idx]</span><br></pre></td></tr></table></figure><hr><h3 id="2-3-数据集成">2.3  数据集成</h3><p>有时候需要挖掘的数据可能来自多个数据源，导致数据存在冗余与不一致的情况。数据集成是将多个数据源中的数据合并，并存放到一个一致的数据存储中。</p><p>1️⃣ <strong>数据冗余和相关性分析</strong></p><p>冗余是数据继承的重要问题，如果一个属性能由另一个属性或者另一组属性值推导而出，那么这个属性可能就是冗余的哦。此外，属性命名不一致也会导致冗余。</p><p>我们下面介绍如何判断属性是不是冗余的哈！</p><hr><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>χ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\chi^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">χ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>检验</strong></p><p>卡方检验适用于标称属性，假设对于两个属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A,B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>个不同的取值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>个不同的取值，用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>描述的数据元组可以用一个相依表显示，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>个值构成列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>个值构成行。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>B</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(A_i,B_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>表示属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>，属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>的联合事件。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>χ</mi><mn>2</mn></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>o</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><msub><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">\chi^2=\sum_{i=1}^c\sum_{j=1}^c\frac{(o_{ij}-e_{ij})^2}{e_{ij}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">χ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">O_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示联合事件的观测频度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">e_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示期望频度，计算式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>A</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>B</mi><mo>=</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">e_{ij}=\frac{count(A=a_i)\times count(B=b_j)}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>为元组个数。</p><hr><p><strong>相关系数</strong></p><p>又称为皮尔逊矩阵系数(Pearson)，相关系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r_{A,B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>可定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mn>1</mn><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>b</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><mrow><mi>n</mi><msub><mi>σ</mi><mi>A</mi></msub><msub><mi>σ</mi><mi>B</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mn>1</mn><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>n</mi><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover></mrow><mrow><mi>n</mi><msub><mi>σ</mi><mi>A</mi></msub><msub><mi>σ</mi><mi>B</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">r_{A,B}=\frac{\sum_1^n(a_i-\bar{A})(b_i-\bar{B})}{n\sigma_A\sigma_B}=\frac{\sum_1^n(a_ib_j)-n\bar{A}\bar{B}}{n\sigma_A\sigma_B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3458em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5098em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3458em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5098em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">n</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>为元组个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>为均值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>为标准差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i,b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为元组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>上的取值。</p><p>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>独立，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">r_{A,B}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1,1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span></span></span></span></p><hr><p><strong>协方差</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mi>E</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Cov(X,Y)=E[(X-E(X))(Y-E(Y))]=E(XY)-E(X)E(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">))</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">))]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></span></p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.A.cov(df.B)</span><br><span class="line">df.A.corr(df.B)</span><br></pre></td></tr></table></figure><p>协方差反映二者趋势程度，取值没有界定，而相关系数则是将其标准化后评估趋近程度，具有取值界定。</p><hr><p><strong>2️⃣ 基于Pandas进行数据合并</strong></p><p><code>merge()</code></p><p><strong>例如</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(a,b,left_on=&quot;fruit&quot;,right_on=&quot;green&quot;,how=&quot;left&quot;)</span><br></pre></td></tr></table></figure><p>在合并过程中可能或出现重复列名，我们可以通过<code>suffixes</code>进行修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left,right,on=<span class="string">&quot;key1&quot;</span>,suffixes=(<span class="string">&#x27;_left&#x27;</span>,<span class="string">&#x27;_right&#x27;</span>))</span><br></pre></td></tr></table></figure><hr><p><code>concat()</code></p><p><strong>例如</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([data1,data2],axis=<span class="number">0</span>,join=<span class="string">&quot;inner&quot;</span>,sort=<span class="string">&quot;False&quot;</span>)</span><br></pre></td></tr></table></figure><hr><p>如果需要合并的两个DF存在重复索引，那么前面两个函数将无法正确合并，我们可以使用<code>combine_first()</code>进行合并，该方法会优先考虑第一个值。</p><hr><h3 id="2-4-数据标准化">2.4  数据标准化</h3><p>由于量纲的问题，不同特征之间可能会产生较大的影响。为此，往往需要对数据进行标准化处理。</p><p>1️⃣ <strong>离差标准化</strong></p><p>做一个简单的线性变化，将数据映射到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_1=\frac{x-min}{max-min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1059em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">min</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>2️⃣ <strong>标准差标准化</strong></p><p>又称零均值标准化或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>分数标准化，处理后的均值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，标准差为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>m</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><mrow><mi>s</mi><mi>t</mi><mi>d</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_1=\frac{x-mean}{std}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord mathnormal">an</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><hr><h3 id="2-5-数据归约">2.5  数据归约</h3><p>Data Reduction是指在尽可能保证数据完整性的基础上得到数据的归约表示。也就是说，在归约后的数据集上挖掘更加有效，且会产生相同或相似的结果。</p><p>1️⃣ <strong>维归约</strong></p><p>减少随机变量或属性的个数，常见的方法有：</p><ul><li>属性子集选择</li><li>小波变换</li><li>主成分分析</li></ul><hr><p><strong>属性子集选择</strong></p><p>通过删除不相关或冗余属性减少数据量，旨在找出最小属性集，使其分布尽可能接近原始分布。</p><p>如何选择一个好的子集？穷举是不显示的，所以一般使用压缩空间的启发式算法进行最优子集选取。</p><p>基本的启发式算法包含以下技术：</p><ul><li>逐步向前选择<ul><li>也就是状态移动</li></ul></li><li>逐步向后删除<ul><li>末位淘汰</li></ul></li><li>选择+删除<ul><li>混合</li></ul></li><li>决策树归纳</li></ul><hr><p><strong>小波变换</strong></p><p>这玩意继承和发展了短时傅里叶变换局部化的思想，又克服了窗口大小不随频率变化等缺点。能提供一个随频率改变的时间-频率窗口，是进行信号时频分析和处理的理想工具。</p><p>一般在频域，信号能量主要集中在低频，可以截取中低频系数保留近似的压缩数据。</p><hr><p><strong>主成分分析</strong></p><p>PCA搜索<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个最能代表数据的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>维正交向量，是最常使用将为方法。</p><p>核心思想是找到数据里最主要的方面代替原始数据。</p><p><strong>步骤</strong></p><ul><li>对样本中心化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mi>x</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(i)=x(i)-\frac{1}{m}\sum_{j=1}^mx(j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.4358em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></li><li>计算样本的协方差矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><msup><mi>x</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">xx^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></li><li>对协方差矩阵进行特征分析</li><li>取出最大的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个特征值对应的特征向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(w_1,w_2,...,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，将所有的特征向量标准化后，组成特征向量矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></li><li>将每个样本通过特征向量矩阵转化为新的样本，并得到样本集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z(i)=W^Tx(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></li></ul><p><strong>尝试</strong></p><p>对鸢尾花数据集进行降维</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"></span><br><span class="line">data=load_iris()</span><br><span class="line">y,x=data.target,data.data</span><br><span class="line"></span><br><span class="line">pca=PCA(n_components=<span class="number">2</span>)</span><br><span class="line">reduced_x=pca.fit_transform(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘出降维后的样本点分布</span></span><br><span class="line">red_x,red_y=[],[]</span><br><span class="line">blue_x,blue_y=[],[]</span><br><span class="line">green_x,green_y=[],[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(reduced_x)):</span><br><span class="line">    <span class="keyword">if</span> y[i]==<span class="number">0</span>:</span><br><span class="line">        red_x.append(reduced_x[i][<span class="number">0</span>])</span><br><span class="line">        red_y.append(reduced_x[i][<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">elif</span> y[i]==<span class="number">1</span>:</span><br><span class="line">        blue_x.append(reduced_x[i][<span class="number">0</span>])</span><br><span class="line">        blue_y.append(reduced_x[i][<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        green_x.append(reduced_x[i][<span class="number">0</span>])</span><br><span class="line">        green_y.append(reduced_x[i][<span class="number">1</span>])</span><br><span class="line">plt.scatter(red_x,red_y,c=<span class="string">&#x27;r&#x27;</span>,marker=<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">plt.scatter(blue_x,blue_y,c=<span class="string">&#x27;b&#x27;</span>,marker=<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">plt.scatter(green_x,green_y,c=<span class="string">&#x27;g&#x27;</span>,marker=<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/image-20221008212427831.png" alt="image-20221008212427831" style="zoom:50%;"><hr><p>2️⃣ <strong>数量归约</strong></p><p>用较小、替代的数据表示原始数据。</p><ul><li>回归和对数线性模型</li><li>直方图</li><li>积累</li><li>抽样</li><li>数据立方体聚类</li><li>数据压缩</li></ul><hr><h2 id="2-6-数据变换与数据离散化">2.6  数据变换与数据离散化</h2><p>数据变换是一种将原始数据变化为比较合适的数据格式的方法，以便作为数据处理前特定数据挖掘算法的输入。</p><p>数据离散化则是一种数据变化的形式。</p><h3 id="数据变换的策略">数据变换的策略</h3><p>1️⃣ 光滑</p><p>2️⃣ 属性构造</p><p>3️⃣ 聚集</p><p>4️⃣规范化</p><p>5️⃣ 离散化</p><blockquote><p>用于将概念标签递归组织成更高层的概念，形成数值属性的概念分层，以便不同用户需要</p></blockquote><ul><li>分箱离散化<ul><li>基于指定的箱个数的自顶向下的分裂技术，例如使用等宽或等频分箱，再通过箱均值或者中位数替换箱中的每个值，使得属性值离散化。</li></ul></li><li>直方图离散化<ul><li>可以按照规定生成直方图，并且递归调用产生概念级</li></ul></li><li>聚类、决策树、相关性分析进行离散化</li></ul><hr><h3 id="Python数据变化与离散化">Python数据变化与离散化</h3><p>1️⃣ <strong>数据规范化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a=[<span class="number">47</span>,<span class="number">83</span>,<span class="number">81</span>,<span class="number">18</span>,<span class="number">72</span>,<span class="number">41</span>]</span><br><span class="line">b=[<span class="number">56</span>,<span class="number">96</span>,<span class="number">84</span>,<span class="number">21</span>,<span class="number">87</span>,<span class="number">67</span>]</span><br><span class="line"></span><br><span class="line">data=np.array([a,b]).T</span><br><span class="line">df=pd.DataFrame(data,columns=[<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;离差标准化: &quot;</span>,(df-df.<span class="built_in">min</span>())/(df.<span class="built_in">max</span>()-df.<span class="built_in">min</span>()))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;标准差标准化: &quot;</span>,(df-df.mean())/df.std())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">离差标准化:            A         B</span><br><span class="line"><span class="number">0</span>  <span class="number">0.446154</span>  <span class="number">0.466667</span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.000000</span>  <span class="number">1.000000</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.969231</span>  <span class="number">0.840000</span></span><br><span class="line"><span class="number">3</span>  <span class="number">0.000000</span>  <span class="number">0.000000</span></span><br><span class="line"><span class="number">4</span>  <span class="number">0.830769</span>  <span class="number">0.880000</span></span><br><span class="line"><span class="number">5</span>  <span class="number">0.353846</span>  <span class="number">0.613333</span></span><br><span class="line"></span><br><span class="line">标准差标准化:            A         B</span><br><span class="line"><span class="number">0</span> -<span class="number">0.386103</span> -<span class="number">0.456223</span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.003868</span>  <span class="number">1.003690</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.926648</span>  <span class="number">0.565716</span></span><br><span class="line"><span class="number">3</span> -<span class="number">1.505803</span> -<span class="number">1.733646</span></span><br><span class="line"><span class="number">4</span>  <span class="number">0.579155</span>  <span class="number">0.675209</span></span><br><span class="line"><span class="number">5</span> -<span class="number">0.617765</span> -<span class="number">0.054747</span></span><br></pre></td></tr></table></figure><hr><p>2️⃣ <strong>哑变量处理</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.get_dummies(df)</span><br></pre></td></tr></table></figure><p>3️⃣ <strong>连续变量的离散化</strong></p><p><strong>等宽法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.cut(x,bins,right=<span class="literal">True</span>,labels=<span class="literal">None</span>,retbins=<span class="literal">False</span>,precision=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><strong>举个栗子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">666</span>)</span><br><span class="line">score_list=np.random.randint(<span class="number">25</span>,<span class="number">100</span>,size=<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原始数据&quot;</span>,score_list)</span><br><span class="line">bins=[<span class="number">0</span>,<span class="number">59</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">100</span>]</span><br><span class="line">score_cut=pd.cut(score_list,bins)</span><br><span class="line"><span class="built_in">print</span>(pd.value_counts(score_cut))</span><br><span class="line">c=pd.get_dummies(score_cut)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">原始数据 [<span class="number">27</span> <span class="number">70</span> <span class="number">55</span> <span class="number">87</span> <span class="number">95</span> <span class="number">98</span> <span class="number">55</span> <span class="number">61</span> <span class="number">86</span> <span class="number">76</span>]</span><br><span class="line">(<span class="number">80</span>, <span class="number">100</span>]    <span class="number">4</span></span><br><span class="line">(<span class="number">0</span>, <span class="number">59</span>]      <span class="number">3</span></span><br><span class="line">(<span class="number">59</span>, <span class="number">70</span>]     <span class="number">2</span></span><br><span class="line">(<span class="number">70</span>, <span class="number">80</span>]     <span class="number">1</span></span><br><span class="line">dtype: int64</span><br><span class="line">   (<span class="number">0</span>, <span class="number">59</span>]  (<span class="number">59</span>, <span class="number">70</span>]  (<span class="number">70</span>, <span class="number">80</span>]  (<span class="number">80</span>, <span class="number">100</span>]</span><br><span class="line"><span class="number">0</span>        <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">0</span></span><br><span class="line"><span class="number">1</span>        <span class="number">0</span>         <span class="number">1</span>         <span class="number">0</span>          <span class="number">0</span></span><br><span class="line"><span class="number">2</span>        <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">0</span></span><br><span class="line"><span class="number">3</span>        <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">1</span></span><br><span class="line"><span class="number">4</span>        <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">1</span></span><br><span class="line"><span class="number">5</span>        <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">1</span></span><br><span class="line"><span class="number">6</span>        <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">0</span></span><br><span class="line"><span class="number">7</span>        <span class="number">0</span>         <span class="number">1</span>         <span class="number">0</span>          <span class="number">0</span></span><br><span class="line"><span class="number">8</span>        <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>          <span class="number">1</span></span><br><span class="line"><span class="number">9</span>        <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span>          <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>等频法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SameRateCut</span>(<span class="params">data,k=<span class="number">2</span></span>):</span><br><span class="line">    w=data.quantile(np.arange(<span class="number">0</span>,<span class="number">1</span>+<span class="number">1.0</span>/k,<span class="number">1.0</span>/k))</span><br><span class="line">    data=pd.cut(data.w)</span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><p>简单介绍一下这个方法啊，<code>quantile</code>表示返回指定位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>的百分位数，通过这个方法生成等频率。</p><hr><p><strong>聚类分析法</strong></p><p>简单来说，有两步：</p><ul><li>将连续性数据用聚类算法进行聚类，处理聚类得到的簇</li><li>为合并到一个簇的连续性数据做统一标记</li></ul><hr><h2 id="2-7-基于scikit-learn进行数据预处理">2.7  基于scikit-learn进行数据预处理</h2><p>1️⃣ <strong>数据标准化与缩放</strong></p><p>这边有一个api</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.preprocessing.scale(X,axis=<span class="number">0</span>,with_mean=<span class="literal">True</span>,with_std=<span class="literal">True</span>,copy=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>实际作用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sklearn.preprocessing <span class="keyword">as</span> pre</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x_train=np.array([[<span class="number">1.</span>,-<span class="number">2.</span>,<span class="number">1.5</span>],[<span class="number">2.2</span>,<span class="number">1.3</span>,<span class="number">0.5</span>],[<span class="number">0.3</span>,<span class="number">1.</span>,-<span class="number">1.5</span>]])</span><br><span class="line">x_scaled=pre.scale(x_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;均值: &quot;</span>,x_scaled.mean(axis=<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;标准差: &quot;</span>,x_scaled.std(axis=<span class="number">0</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">均值:  [<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]</span><br><span class="line">标准差:  [<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br></pre></td></tr></table></figure><p>此外，pre模块还提供了一个实用程序类<code>StandardScaler</code>，可以记录训练时的参数，以便进行相同的转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scale=pre.StandardScaler().fit(x_train)</span><br><span class="line">scale.transform(x_test)</span><br></pre></td></tr></table></figure><p>2️⃣ <strong>特征缩放</strong></p><p>这里介绍三个API</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pre.MinMaxScaler() <span class="comment"># 范围为[0,1]</span></span><br><span class="line">pre.MaxAbsScaler() <span class="comment"># 范围为[-1,1]</span></span><br><span class="line">pre.RobustScaler() <span class="comment"># 适用于异常值较多</span></span><br></pre></td></tr></table></figure><p>3️⃣ <strong>非线性变换</strong></p><p>非线性变换分为分位数变换和幂变换。二者都能保证每个特征值的秩。分位数变换将所有特征置于相同的期望分布中，而幂变换则是将数据从任意分布映射到接近高斯分布的位置。</p><blockquote><p>映射到[0,1]均匀分布</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">X,y=load_iris(return_X_y=<span class="literal">True</span>)</span><br><span class="line">X_train,X_test,Y_train,Y_test=train_test_split(X,y,random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分位数变换</span></span><br><span class="line">quantile_transformer=preprocessing.QuantileTransformer(random_state=<span class="number">0</span>)</span><br><span class="line">X_train_trans=quantile_transformer.fit(X_train)</span><br><span class="line">X_test_trans=quantile_transformer.transform(X_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分布</span></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">ax[<span class="number">0</span>].hist(X_test_trans)</span><br><span class="line">ax[<span class="number">1</span>].hist(X_train)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/image-20221009121559481.png" alt="image-20221009121559481" style="zoom:50%;"><blockquote><p>映射到高斯分布</p></blockquote><p>高斯分布具有稳定的方差和最小化偏度，<code>PowerTransformer</code>提供了两种幂变换：<code>Yeo-Johnson</code>和<code>Box-Cox</code>变换，<code>Box-Cox</code>仅可用于严格的政数局，这两种变换均通过<code>lambda</code>进行参数化，通过最大似然进行估计。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pt=preprocessing.PowerTransformer(method=<span class="string">&#x27;box-cox&#x27;</span>,standardize=<span class="literal">False</span>)</span><br><span class="line">X_lognormal=np.random.RandomState(<span class="number">616</span>).lognormal(size=(<span class="number">300</span>,<span class="number">30</span>))</span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">ax[<span class="number">0</span>].hist(X_lognormal)</span><br><span class="line"></span><br><span class="line">T=pt.fit_transform(X_lognormal)</span><br><span class="line">ax[<span class="number">1</span>].hist(T)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/image-20221009122141808.png" alt="image-20221009122141808" style="zoom:50%;"><blockquote><p>映射到正态分布</p></blockquote><p>这里我们调用<code>QuantileTransformer(output_distribution=&quot;normal&quot;)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pt=preprocessing.QuantileTransformer(output_distribution=<span class="string">&quot;normal&quot;</span>)</span><br><span class="line">X_lognormal=np.random.RandomState(<span class="number">616</span>).lognormal(size=(<span class="number">300</span>,<span class="number">30</span>))</span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">ax[<span class="number">0</span>].hist(X_lognormal)</span><br><span class="line"></span><br><span class="line">T=pt.fit_transform(X_lognormal)</span><br><span class="line">ax[<span class="number">1</span>].hist(T)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/08/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/image-20221009122317710.png" alt="image-20221009122317710" style="zoom:50%;"><hr><p>4️⃣ <strong>正则化</strong></p><p>正则化是将单个样本缩放到单位范数中(每个样本范数为1)，如果计划使用点积或者其他核的二次形式量化任意一堆样本的相似性，此过程可能会很有用。通常使用于文本分类和聚类中。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">make\ ||a||=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">mak</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mord">∣∣</span><span class="mord mathnormal">a</span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=[[<span class="number">1.</span>,-<span class="number">1.</span>,<span class="number">2.</span>],[<span class="number">2.</span>,<span class="number">0.</span>,<span class="number">0.</span>],[<span class="number">0.</span>,<span class="number">1.</span>,-<span class="number">1.</span>]]</span><br><span class="line"><span class="comment"># l2正则化</span></span><br><span class="line">x_nor=preprocessing.normalize(x,norm=<span class="string">&quot;l2&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(x_nor)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[ <span class="number">0.40824829</span> -<span class="number">0.40824829</span>  <span class="number">0.81649658</span>]</span><br><span class="line"> [ <span class="number">1.</span>          <span class="number">0.</span>          <span class="number">0.</span>        ]</span><br><span class="line"> [ <span class="number">0.</span>          <span class="number">0.70710678</span> -<span class="number">0.70710678</span>]]</span><br></pre></td></tr></table></figure><p>同样也有一个<code>Normalizer</code>类，可以通过<code>Transformer</code>API实现相同操作。</p><hr><p>5️⃣ <strong>编码分类特征</strong></p><p>如果要把定性数据转化为整数，可以使用<code>OrdinalEncoder</code>，该估计其可以将每个范畴特征转换为整数的一个新特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enc=preprocessing.OrdinalEncoder()</span><br><span class="line">x=[[<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;17&#x27;</span>],[<span class="string">&#x27;fm&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;22&#x27;</span>]]</span><br><span class="line">enc.fit(x)</span><br><span class="line"><span class="built_in">print</span>(enc.transform([[<span class="string">&#x27;fm&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;17&#x27;</span>]]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">0.</span> <span class="number">1.</span> <span class="number">0.</span>]]</span><br></pre></td></tr></table></figure><p>除此之外，有个升级版的<code>OneHotEncoder</code>，这玩意可以将<code>n_categories</code>转化为一个二进制编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enc=preprocessing.OneHotEncoder()</span><br><span class="line">x=[[<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;17&#x27;</span>],[<span class="string">&#x27;fm&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;22&#x27;</span>]]</span><br><span class="line">enc.fit(x)</span><br><span class="line"><span class="built_in">print</span>(enc.transform([[<span class="string">&#x27;fm&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;17&#x27;</span>],[<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;22&#x27;</span>]]).toarray())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">0.</span>]</span><br><span class="line"> [<span class="number">0.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">1.</span>]]</span><br></pre></td></tr></table></figure><hr><p>6️⃣ <strong>离散化</strong></p><p>离散化预处理可以将非线性特征引入线性模型中。</p><blockquote><p>K桶离散化</p></blockquote><p><code>KBinsDiscretizer</code>将特征离散到<code>K</code>个桶中</p><p><strong>介绍</strong></p><p>分桶是离散化的常用方法，将连续型特征离线化为一系列0/1的离散特征。</p><p>当数值特征跨越不同的数量级的时候，模型可能只会对大的特征值敏感，这种情况就可以考虑分桶操作。</p><p>分桶操作可以看作是对数值变量的离散化，然后通过二值化进行 one hot 编码。</p><p><strong>优点</strong></p><p>1️⃣分桶后得到的稀疏向量，内积乘法运算速度更快，计算结果更方便存储。</p><p>2️⃣对异常数据有很强的鲁棒性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X = np.array([[-<span class="number">3.</span>,<span class="number">5.</span>,<span class="number">15</span>],[<span class="number">0.</span>,<span class="number">6.</span>,<span class="number">14</span>],[<span class="number">6.</span>,<span class="number">3.</span>,<span class="number">11</span>]])</span><br><span class="line">est = preprocessing.KBinsDiscretizer(n_bins=[<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>],encode=<span class="string">&#x27;ordinal&#x27;</span>).fit(X)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(est.transform(X))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">0.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">2.</span> <span class="number">0.</span> <span class="number">0.</span>]]</span><br></pre></td></tr></table></figure><blockquote><p>特征二值化</p></blockquote><p>特征二值化是对数字特征进行于阈值化以获得布尔值的过程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">X = [[<span class="number">1.</span>,-<span class="number">1.</span>,<span class="number">2.</span>],[<span class="number">2.</span>,<span class="number">0.</span>,<span class="number">0.</span>],[<span class="number">0.</span>,<span class="number">1.</span>,-<span class="number">1.</span>]]</span><br><span class="line">binarizer = preprocessing.Binarizer().fit(X)</span><br><span class="line">Y1 = binarizer.transform(X)</span><br><span class="line"><span class="built_in">print</span>(Y1)</span><br><span class="line">binarizer = preprocessing.Binarizer(threshold=<span class="number">1.1</span>)</span><br><span class="line">Y2 = binarizer.transform(X)</span><br><span class="line"><span class="built_in">print</span>(Y2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1.</span> <span class="number">0.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">1.</span> <span class="number">0.</span> <span class="number">0.</span>]</span><br><span class="line"> [<span class="number">0.</span> <span class="number">1.</span> <span class="number">0.</span>]]</span><br><span class="line">[[<span class="number">0.</span> <span class="number">0.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">1.</span> <span class="number">0.</span> <span class="number">0.</span>]</span><br><span class="line"> [<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]]</span><br></pre></td></tr></table></figure><hr><p>最后，附上一个大佬对数据离散化的<a href="https://zhuanlan.zhihu.com/p/442837780">总结</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】Chapter 1. 认识数据</title>
    <link href="http://example.com/2022/10/06/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2022/10/06/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/</id>
    <published>2022-10-06T12:57:54.670Z</published>
    <updated>2022-10-08T03:51:32.907Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>数据集由<strong>数据对象</strong>组成，每个数据对象都代表一个<strong>对象</strong>或者一个实体。</p><p>例如在一张学生名单中，每个记录就表示着一个学生实体。</p></blockquote><hr><h2 id="一、属性">一、属性</h2><h3 id="1-1-什么是属性">1.1  什么是属性</h3><p>说白了，属性就是一个能够<strong>表征对象</strong>的东西，它反映了对象的性质，或者说特征。属性，也可以称作特征(Feature)，字段(Field)，维度(Dimension)，变量(Variable)。</p><h3 id="1-2-属性的类型">1.2  属性的类型</h3><img src="/2022/10/06/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/image-20221006211327075.png" alt="image-20221006211327075" style="zoom: 33%;"><p>如上图所示，属性通过是否具有<strong>可比性</strong>，可以分为定性和定量属性。定性属性又可以往下细分为对称属性，二元属性和序数属性，而定量属性可再分为区间标度属性和比率标度属性。</p><hr><h2 id="二、数据的基本统计描述">二、数据的基本统计描述</h2><blockquote><p>评价一个数据的好坏一般是通过其分布形态，而对其分布形态进行的描述不仅可以认识数据，判断好坏，更能识别噪声或是离群点。</p><p>常见的统计性描述可以概括为：集中趋势、离散趋势、相对离散程度和分布形态四个维度。</p></blockquote><h3 id="2-1-中心趋势度">2.1  中心趋势度</h3><p>指的是一组数据向某一中心值靠拢的程度，反映了一组数据的中心点所在。</p><p>1️⃣ <strong>均值</strong></p><p>最常见的统计量，可以表征数据的总体水平。但均值对于噪声比较敏感。</p><p>2️⃣ <strong>中位数</strong></p><p>先排序，再找中心。毫无疑问，这个方法的时间开销至少是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>级别的。所以有时候，我们可以采用近似估计的方式去计算。</p><p>假定数据可以通过数值划分为区间，且知道每个区间的个数。于是，中位数可用以下的公式表示。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>n</mi><mo>=</mo><msub><mi>L</mi><mn>1</mn></msub><mo>+</mo><mrow><mo fence="true">[</mo><mfrac><mrow><mfrac><mi>N</mi><mn>2</mn></mfrac><mo>−</mo><mo stretchy="false">(</mo><mo>∑</mo><mi>f</mi><msub><mo stretchy="false">)</mo><mi>l</mi></msub></mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>n</mi></mrow></msub></mfrac><mo fence="true">]</mo></mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">median=L_1+\left [\frac{\frac{N}{2}-(\sum f)_l}{f_{median}}\right ]width</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal">ian</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6073em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">ian</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span></span></span></p><p>3️⃣ <strong>众数</strong></p><p>众数是一组数据中出现最多的数值，有多少个众数，那么我们称数据集为多少峰，例如一个众数：单峰，两个：双峰。</p><p>4️⃣ <strong>中列数</strong></p><p>Midrange，表示最大值和最小值的均值。也可以度量中心趋势哦。不过与其说度量中心，倒不如说是数据范围的中心，正如<code>mid</code>和<code>range</code>的意思一般。</p><hr><h3 id="2-2-散布-离中-度量">2.2  散布(离中)度量</h3><p>用于评估数据的散布或发散程度。</p><p><strong>1️⃣ 极差、四分位数和四分位数极差</strong></p><p>极差(Range)也称范围误差或者全距，指的是最大值和最小值的差距。也是衡量变动最简单的指标。</p><p>四分位数：将数据从大到小排序后，用三个点(25,50,75)将数据分为三等分，这三个点上对应的位置就是四分位数。例如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>Q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">Q_1,Q_2,Q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示第一四分位数，第二四分位数，第三四分位数。（四大天王有三个很奇怪吗🐕）</p><p>分半四分位差：即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>Q</mi><mn>3</mn></msub><mo>−</mo><msub><mi>Q</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(Q_3-Q_1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/2</span></span></span></span></p><p>四分位数极差(IQR)：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>3</mn></msub><mo>−</mo><msub><mi>Q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Q_3-Q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，它给出了数据中间一半的部分。</p><p><strong>2️⃣ 五数概括、盒图和离群点</strong></p><p>哪五个数？</p><ul><li>min</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">Q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">Q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>max</li></ul><p>盒图又称箱线图，盒须图，体现了五数概括。利用四分位数间距<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>Q</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">IQR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span></span></span></span>，我们可以判断界限，找出异常值。通常设定1.5倍<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>Q</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">IQR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span></span></span></span>外的为异常值。所以边界为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>Q</mi><msub><mi>R</mi><mtext>左</mtext></msub><mo>=</mo><msub><mi>Q</mi><mn>1</mn></msub><mo>−</mo><mn>1.5</mn><mo>×</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mspace linebreak="newline"></mspace><mi>I</mi><mi>Q</mi><msub><mi>R</mi><mtext>右</mtext></msub><mo>=</mo><msub><mi>Q</mi><mn>3</mn></msub><mo>+</mo><mn>1.5</mn><mo>×</mo><mi>I</mi><mi>Q</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">IQR_{左}=Q_1-1.5\times IQR\\IQR_右=Q_3+1.5\times IQR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">左</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">右</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span></span></span></span></span></p><hr><h2 id="三、数据可视化">三、数据可视化</h2><blockquote><p>一个好的数据分析，应当是要做到简单易懂的，复杂的事情交给机器去做吧~</p></blockquote><p>通过图形清晰有效地表达数据称为数据可视化，他将数据所包含的信息的综合体，包括属性和变量，抽象化为一些图表形式。</p><p>这部分的话暂时不打算展开来讲了，我可能会新开一章专门介绍<code>matplotlib+sns+pyecharts</code>(排面)。</p><p>这里简单贴一个小小的散点图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">n=<span class="number">50</span></span><br><span class="line">x=np.random.rand(n)*<span class="number">2</span></span><br><span class="line">y=np.random.rand(n)*<span class="number">2</span></span><br><span class="line">colors=np.random.rand(n)</span><br><span class="line">area=np.pi*(<span class="number">10</span>*np.random.randn(n))**<span class="number">2</span></span><br><span class="line">plt.scatter(x,y,s=area,c=colors,alpha=<span class="number">0.5</span>,marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/10/06/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/image-20221006215808879.png" alt="image-20221006215808879" style="zoom: 33%;"><hr><h2 id="四、数据对象的相似性对量">四、数据对象的相似性对量</h2><blockquote><p>现实中，我们需要处理的数据具有不同的形式和特征，而对数据相似性的度量又是数据挖掘中非常重要的环节</p></blockquote><h3 id="4-1-数据矩阵和相异性矩阵">4.1  数据矩阵和相异性矩阵</h3><p><strong>数据矩阵</strong></p><p>这就是一张二维表</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Q</mi><mrow><mn>1</mn><mi>m</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>n</mi><mi>m</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\begin{vmatrix}O_{11} &amp; \dots &amp;Q_{1m} \\\dots&amp; &amp;\dots\\O_{n1}&amp; \dots &amp; O_{nm}\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.612em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.062em;"><span style="top:-2.866em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.464em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="2.416em" style="width:0.3333em" viewbox="0 0 333.33000000000004 2416" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V2416 H145z M145 0 H188 V2416 H145z"/></svg></span></span><span style="top:-5.872em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nm</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.062em;"><span style="top:-2.866em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.464em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="2.416em" style="width:0.3333em" viewbox="0 0 333.33000000000004 2416" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V2416 H145z M145 0 H188 V2416 H145z"/></svg></span></span><span style="top:-5.872em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>属性为列，对象为行。</p><p><strong>相异性矩阵</strong></p><p>是相似性矩阵的反矩阵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\begin{vmatrix}0 &amp;d(1,2)&amp; \\d(2,1)&amp;0&amp; \end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.412em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.462em;"><span style="top:-2.266em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.864em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.3333em" height="1.216em" style="width:0.3333em" viewbox="0 0 333.33000000000004 1216" preserveaspectratio="xMinYMin"><path d="M145 0 H188 V1216 H145z M145 0 H188 V1216 H145z"/></svg></span></span><span style="top:-4.072em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="4-2-常见的数值距离度量">4.2  常见的数值距离度量</h3><p>1️⃣ <strong>欧氏距离 Eulidean Distance</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>n</mi></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">d(i,j)=\sqrt{(x_{i1}-x_{j1})^2+\dots+(x_{in}-x_{jn})^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.5742em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2658em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2258em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.88em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5742em;"><span></span></span></span></span></span></span></span></span></span></p><p><strong>2️⃣ 曼哈顿距离 Manhattan Distance</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">d(i,j)=|x_{i1}-x_{j1}|+|x_{i2}-x_{j2}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><p>3️⃣ <strong>切比雪夫距离 Chebyshev Distance</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>k</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>f</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>f</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>f</mi></mrow></msub><msup><mi mathvariant="normal">∣</mi><mi>k</mi></msup><msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mi>k</mi></mfrac></msup><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi><mi>f</mi></mrow></msub><mo>−</mo><mi>x</mi><mrow><mi>j</mi><mi>f</mi></mrow><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(i,j)=\lim_{k\to\infin}(\sum_{f=1}^p|x_{if}-x_{jf}|^k)^\frac{1}{k}=max(|x_{if}-x{jf}|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1367em;vertical-align:-1.4382em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3471em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4382em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2901em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.004em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">chebyshev</span>(<span class="params">x,y</span>):</span><br><span class="line"><span class="keyword">return</span> np.<span class="built_in">max</span>(np.<span class="built_in">abs</span>(x-y))</span><br></pre></td></tr></table></figure><p><strong>4️⃣ 闵可夫斯基距离 Minkowski Distance</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><msup><mo>=</mo><mi>q</mi></msup><msqrt><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub><msup><mo stretchy="false">)</mo><mi>q</mi></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>n</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>q</mi></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">d(i,j)=^q\sqrt{(x_{i1}-x_{j_1})^q+\dots+(x_{in}-x_{jn})^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.5742em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2658em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0572em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2258em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.88em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5742em;"><span></span></span></span></span></span></span></span></span></span></p><p>可以说，曼哈顿距离和欧氏距离都是闵氏距离的推广</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">minkowski</span>(<span class="params">x,y,p</span>):</span><br><span class="line"><span class="keyword">return</span> np.<span class="built_in">sum</span>(np.<span class="built_in">abs</span>(x-y)**p)**(<span class="number">1</span>/p)</span><br></pre></td></tr></table></figure><p><strong>5️⃣ 汉明距离 Hamming Distance</strong></p><p>两个等长字符串之间变换需要的最小次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Hamming</span>(<span class="params">a,b</span>):</span><br><span class="line">x=a^b</span><br><span class="line">    ans=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> x:</span><br><span class="line">        x&amp;=(x-<span class="number">1</span>)</span><br><span class="line">        ans+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Hamming</span>(<span class="params">a,b</span>):</span><br><span class="line"><span class="keyword">return</span> np.<span class="built_in">sum</span>(a!=b)/<span class="built_in">len</span>(a)</span><br></pre></td></tr></table></figure><p><strong>6️⃣ 余弦相似性</strong></p><p>一般用于文档数据的相似性度量。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>x</mi><mo>⋅</mo><mi>y</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">sim(x,y)=\frac{x\cdot y}{||x||\cdot||y||}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">im</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cos_similarity</span>(<span class="params">x,y</span>):</span><br><span class="line"><span class="keyword">return</span> np.dot(x,y)/(np.linalg.norm(x)*np.linalg.norm(y))</span><br></pre></td></tr></table></figure><p>这个<code>np.linalg.norm</code>表示范数</p><hr><p><strong>4.3  混合类型属性的相似性</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>f</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>σ</mi><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow></msubsup><msubsup><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><mrow><munderover><mo>∑</mo><mrow><mi>f</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>σ</mi><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">d(i,j)=\frac{\sum_{f=1}^p\sigma^{(f)}_{ij}d_{ij}^{(f)}}{\sum_{f=1}^p\sigma^{(f)}_{ij}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2412em;vertical-align:-1.3706em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8706em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8706em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3706em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>emmm，这个意思就是，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">\sigma^{(f)}_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4578em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>表示对象<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>之间是否具有共同的属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>，我们只统计具有共同属性的，没有的话<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>就将被设置为0</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>计算莫兰指数和Geary&#39;s C 空间自相关程度</title>
    <link href="http://example.com/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/"/>
    <id>http://example.com/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/</id>
    <published>2022-10-06T04:32:32.000Z</published>
    <updated>2022-10-17T08:27:03.574Z</updated>
    
    <content type="html"><![CDATA[<h1>计算莫兰指数和Geary’s C 空间自相关程度</h1><hr><p><strong>卷积核类型</strong></p><img src="/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/image-20221006165257287.png" alt="image-20221006165257287" style="zoom:50%;"><p>常见的卷积核为Rook,Bishop,Queen，如上图所示。</p><p><strong>Molan’s I</strong></p><img src="/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/image-20221006165428724.png" alt="image-20221006165428724" style="zoom:50%;"><p><strong>Geary’s C</strong></p><img src="/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/image-20221006165334932.png" alt="image-20221006165334932" style="zoom:50%;"><p><strong>代码实现为</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用空间统计量Moran和Geary计算遥感数据的自相关程度</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getMoranV</span>(<span class="params">path,t=<span class="number">0</span>,method=<span class="string">&quot;Moran&quot;</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param path: 图像路径</span></span><br><span class="line"><span class="string">    :param t: 卷积核类型</span></span><br><span class="line"><span class="string">    :param method: 空间自相关方法</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">    wb1 = pd.read_excel(path, index_col=<span class="number">0</span>)</span><br><span class="line">    data = wb1.values</span><br><span class="line">    n, m = wb1.shape</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义卷积核</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># queen 卷积</span></span><br><span class="line">    dir2 = [[<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">1</span>, <span class="number">1</span>], [-<span class="number">1</span>, -<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># Rook 卷积</span></span><br><span class="line">    dir1 = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># Bishop 卷积</span></span><br><span class="line">    dir3=[[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,-<span class="number">1</span>],[-<span class="number">1</span>,<span class="number">1</span>],[-<span class="number">1</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> t==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir1</span><br><span class="line">    <span class="keyword">elif</span> t==<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir3</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开辟O(n^4)权重矩阵</span></span><br><span class="line">    <span class="comment"># 这玩意很耗内存，所以可以考虑用局部计算代替全局计算</span></span><br><span class="line">    a = [[<span class="number">0</span>]*(n*m) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>((n*m))]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="comment"># 二维的点转到一维</span></span><br><span class="line">            loc = i * m + j  <span class="comment"># 一维上的坐标</span></span><br><span class="line">            <span class="comment"># 找到他在二维上的临界点</span></span><br><span class="line">            <span class="keyword">for</span> detX, detY <span class="keyword">in</span> <span class="built_in">dir</span>:</span><br><span class="line">                x = i + detX</span><br><span class="line">                y = j + detY</span><br><span class="line">                <span class="comment"># 转化为一维</span></span><br><span class="line">                <span class="comment"># 边界处理</span></span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; m <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; m:</span><br><span class="line">                    a[loc][x * m + y] = <span class="number">1</span>  <span class="comment"># 表示临接</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">moranIndex</span>(<span class="params">data,weight</span>):</span><br><span class="line">        <span class="comment"># 莫兰指数计算</span></span><br><span class="line">        s_0=np.<span class="built_in">sum</span>(np.<span class="built_in">sum</span>(weight))</span><br><span class="line">        n,m=<span class="built_in">len</span>(data),<span class="built_in">len</span>(data[<span class="number">0</span>])</span><br><span class="line">        x_hat=np.mean(data)</span><br><span class="line">        up_sum=<span class="number">0</span></span><br><span class="line">        down_sum=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="comment"># 下一轮</span></span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> (val:=weight[i*m+j][x*m+y]):</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        up_sum+=val*(data[i][j]-x_hat)*(data[x][y]-x_hat)</span><br><span class="line">                down_sum+=(data[i][j]-x_hat)**<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> (n*m/s_0)*(up_sum/down_sum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Geary_C</span>(<span class="params">data,weight</span>):</span><br><span class="line">        <span class="comment"># Geary&#x27;s C计算</span></span><br><span class="line">        s_0=np.<span class="built_in">sum</span>(np.<span class="built_in">sum</span>(weight))*<span class="number">2</span></span><br><span class="line">        n, m = <span class="built_in">len</span>(data), <span class="built_in">len</span>(data[<span class="number">0</span>])</span><br><span class="line">        x_hat = np.mean(data)</span><br><span class="line">        up_sum = <span class="number">0</span></span><br><span class="line">        down_sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="comment"># 下一轮</span></span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> (val := weight[i * m + j][x * m + y]):</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        up_sum += val * (data[i][j] - data[x][y])**<span class="number">2</span></span><br><span class="line">                down_sum += (data[i][j] - x_hat) ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> ((n*m-<span class="number">1</span>)/(s_0))*(up_sum/down_sum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (M:=method.upper())==<span class="string">&quot;MORAN&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> moranIndex(data,a)</span><br><span class="line">    <span class="keyword">elif</span> M==<span class="string">&quot;GEARY&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> Geary_C(data,a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHelp</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Method: &#123;&#x27;Moran&#x27;,&#x27;Geary&#x27;&#125;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;t: &#123;0:Rook,1:Queen,2:bishop&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getHelp()</span><br><span class="line">    path = <span class="string">r&quot;data.xlsx&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;墨兰指数为: %s&quot;</span>%getMoranV(path,<span class="number">0</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Geary&#x27;s C为: %s&quot;</span>%getMoranV(path,<span class="number">0</span>,<span class="string">&quot;Geary&quot;</span>))</span><br></pre></td></tr></table></figure><p><strong>输出结果为</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method: &#123;<span class="string">&#x27;Moran&#x27;</span>,<span class="string">&#x27;Geary&#x27;</span>&#125;</span><br><span class="line">t: &#123;<span class="number">0</span>:Rook,<span class="number">1</span>:Queen,<span class="number">2</span>:bishop&#125;</span><br><span class="line">墨兰指数为: <span class="number">0.5579039646993681</span></span><br><span class="line">Geary<span class="string">&#x27;s C为: 0.4355131948652942</span></span><br></pre></td></tr></table></figure><p><strong>优化</strong></p><p>我们发现，这样子需要开辟<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">n^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>大小的权重矩阵，且需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>4</mn><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><msup><mi>n</mi><mn>4</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(4n^2+n^4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>4</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的时间复杂度，那能不能对其做一些剪枝，降低复杂度呢？</p><p>我们可以动态开辟空间权重矩阵，从而将空间复杂度降低到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>M</mi><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(M*n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>表示卷积核的有效大小。(非空洞大小)</p><p>这样子也能将时间复杂度降低为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>M</mi><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(M*n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>级别。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用空间统计量Moran和Geary计算遥感数据的自相关程度</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getMoranV</span>(<span class="params">path,val=<span class="number">1</span>,t=<span class="number">0</span>,method=<span class="string">&quot;Moran&quot;</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param path: 图像路径</span></span><br><span class="line"><span class="string">    :param t: 卷积核类型</span></span><br><span class="line"><span class="string">    :param method: 空间自相关方法</span></span><br><span class="line"><span class="string">    :param val: 空间权重</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">    wb1 = pd.read_excel(path, index_col=<span class="number">0</span>)</span><br><span class="line">    data = wb1.values</span><br><span class="line">    n, m = wb1.shape</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义卷积核</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># queen 卷积</span></span><br><span class="line">    dir2 = [[<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">1</span>, <span class="number">1</span>], [-<span class="number">1</span>, -<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># Rook 卷积</span></span><br><span class="line">    dir1 = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># Bishop 卷积</span></span><br><span class="line">    dir3=[[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,-<span class="number">1</span>],[-<span class="number">1</span>,<span class="number">1</span>],[-<span class="number">1</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> t==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir1</span><br><span class="line">    <span class="keyword">elif</span> t==<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">dir</span>=dir3</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开辟O(n^4)权重矩阵</span></span><br><span class="line">    <span class="comment"># 这玩意很耗内存，所以可以考虑用局部计算代替全局计算</span></span><br><span class="line">    a = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n*m)]</span><br><span class="line">    a_weight=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="comment"># 找到他在二维上的临界点</span></span><br><span class="line">            loc=i*m+j</span><br><span class="line">            <span class="keyword">for</span> detX, detY <span class="keyword">in</span> <span class="built_in">dir</span>:</span><br><span class="line">                x = i + detX</span><br><span class="line">                y = j + detY</span><br><span class="line">                <span class="comment"># 转化为一维</span></span><br><span class="line">                <span class="comment"># 边界处理</span></span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; n <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; m:</span><br><span class="line">                    a[loc].append([x,y,val])</span><br><span class="line">                    a_weight+=val</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">moranIndex</span>(<span class="params">data,weight</span>):</span><br><span class="line">        <span class="comment"># 莫兰指数计算</span></span><br><span class="line">        <span class="comment"># s_0=np.sum(np.sum(weight))</span></span><br><span class="line">        s_0=a_weight</span><br><span class="line">        n,m=<span class="built_in">len</span>(data),<span class="built_in">len</span>(data[<span class="number">0</span>])</span><br><span class="line">        x_hat=np.mean(data)</span><br><span class="line">        up_sum=<span class="number">0</span></span><br><span class="line">        down_sum=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="comment"># 下一轮</span></span><br><span class="line">                loc=i*m+j</span><br><span class="line">                <span class="keyword">for</span> v <span class="keyword">in</span> weight[loc]:</span><br><span class="line">                    up_sum+=v[<span class="number">2</span>]*(data[i][j]-x_hat)*(data[v[<span class="number">0</span>]][v[<span class="number">1</span>]]-x_hat)</span><br><span class="line">                down_sum+=(data[i][j]-x_hat)**<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> (n*m/s_0)*(up_sum/down_sum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Geary_C</span>(<span class="params">data,weight</span>):</span><br><span class="line">        <span class="comment"># Geary&#x27;s C计算</span></span><br><span class="line">        s_0=a_weight*<span class="number">2</span></span><br><span class="line">        n, m = <span class="built_in">len</span>(data), <span class="built_in">len</span>(data[<span class="number">0</span>])</span><br><span class="line">        x_hat = np.mean(data)</span><br><span class="line">        up_sum = <span class="number">0</span></span><br><span class="line">        down_sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">                <span class="comment"># 下一轮</span></span><br><span class="line">                loc = i * m + j</span><br><span class="line">                <span class="keyword">for</span> v <span class="keyword">in</span> weight[loc]:</span><br><span class="line"></span><br><span class="line">                    up_sum += v[<span class="number">2</span>] * (data[i][j] - data[v[<span class="number">0</span>]][v[<span class="number">1</span>]])**<span class="number">2</span></span><br><span class="line">                down_sum += (data[i][j] - x_hat) ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> ((n*m-<span class="number">1</span>)/(s_0))*(up_sum/down_sum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (M:=method.upper())==<span class="string">&quot;MORAN&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> moranIndex(data,a)</span><br><span class="line">    <span class="keyword">elif</span> M==<span class="string">&quot;GEARY&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> Geary_C(data,a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHelp</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Method: &#123;&#x27;Moran&#x27;,&#x27;Geary&#x27;&#125;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;t: &#123;0:Rook,1:Queen,2:bishop&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getHelp()</span><br><span class="line">    path = <span class="string">r&quot;\data.xlsx&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;墨兰指数为: %s&quot;</span>%getMoranV(path,val=<span class="number">1</span>,t=<span class="number">0</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Geary&#x27;s C为: %s&quot;</span>%getMoranV(path,val=<span class="number">1</span>,t=<span class="number">0</span>,method=<span class="string">&quot;Geary&quot;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="栗子-海洋表面温度-SST-逐月计算空间自相关变化情况">栗子----海洋表面温度(SST)逐月计算空间自相关变化情况</h3><p><strong>数据</strong></p><img src="/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/image-20221017153246439.png" alt="image-20221017153246439" style="zoom:50%;"><p><code>dim0</code>表示时间维度，<code>dim1</code>表示维度，<code>dim2</code>表示经度</p><p>我们需要对数据进行处理，此时并不是excel数据，直接转为DataFrame,并在API中修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb1 = path.read_excel(path)</span><br></pre></td></tr></table></figure><p>为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb1=path</span><br></pre></td></tr></table></figure><p><strong>处理</strong></p><p>逐月遍历数据即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span>=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(data.shape[<span class="number">0</span>]): </span><br><span class="line">    <span class="type">List</span>.append(getMoranV(pd.DataFrame(data[i]),val=<span class="number">1</span>,t=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p><strong>结果可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">6</span>))</span><br><span class="line">plt.plot(<span class="built_in">range</span>((v:=data.shape[<span class="number">0</span>])),<span class="type">List</span>,<span class="string">&#x27;r-&#x27;</span>)</span><br><span class="line">Mean=<span class="built_in">sum</span>(<span class="type">List</span>)/(<span class="built_in">len</span>(<span class="type">List</span>))</span><br><span class="line">plt.plot(<span class="built_in">range</span>(v),[Mean]*v,<span class="string">&#x27;b&#x27;</span>,linestyle=<span class="string">&#x27;--&#x27;</span>,alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.title(<span class="string">&quot;基于Queen邻接的SST空间自相关月变化&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;时间&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;日期&quot;</span>)</span><br><span class="line">T=[]</span><br><span class="line">M,Y=<span class="number">1</span>,<span class="number">1990</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">360</span>):</span><br><span class="line">    T.append(<span class="string">&quot;%s年%s月&quot;</span>%(Y,M))</span><br><span class="line">    <span class="keyword">if</span> M%<span class="number">12</span>==<span class="number">0</span>:</span><br><span class="line">        M=<span class="number">1</span></span><br><span class="line">        Y+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        M+=<span class="number">1</span></span><br><span class="line">plt.xticks(<span class="built_in">range</span>(<span class="number">360</span>)[::<span class="number">20</span>],T[::<span class="number">20</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/%E4%B8%8B%E8%BD%BD.png" alt="下载"></p><hr><p><strong>绘制逐月动图</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span>=[[]]</span><br><span class="line">t=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> t&lt;data.shape[<span class="number">0</span>]:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="type">List</span>[-<span class="number">1</span>])==<span class="number">12</span>:</span><br><span class="line">        <span class="type">List</span>.append([])</span><br><span class="line">    <span class="type">List</span>[-<span class="number">1</span>].append(getMoranV(pd.DataFrame(data[t]),val=<span class="number">1</span>,t=<span class="number">1</span>))</span><br><span class="line">    t+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>我们通过二维列表的方式对年份加以区分，这也是常见的手段。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逐年绘制</span></span><br><span class="line">path=<span class="string">r&quot;\yourpath&quot;</span></span><br><span class="line">timeList=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="type">List</span>)):</span><br><span class="line">    lis=<span class="type">List</span>[i]</span><br><span class="line">    plt.figure(figsize=(<span class="number">20</span>,<span class="number">6</span>))</span><br><span class="line">    plt.plot(<span class="built_in">range</span>(<span class="number">12</span>),lis,<span class="string">&#x27;r-&#x27;</span>)</span><br><span class="line">    Mean=<span class="built_in">sum</span>(lis)/<span class="number">12</span></span><br><span class="line">    plt.plot(<span class="built_in">range</span>(<span class="number">12</span>),[Mean]*<span class="number">12</span>,<span class="string">&#x27;b&#x27;</span>,linestyle=<span class="string">&#x27;--&#x27;</span>,alpha=<span class="number">0.2</span>)</span><br><span class="line">    plt.title(<span class="string">&quot;%s年&quot;</span>%(i+<span class="number">1990</span>))</span><br><span class="line">    plt.xticks(<span class="built_in">range</span>(<span class="number">12</span>),[<span class="string">&quot;%s月&quot;</span>%(m+<span class="number">1</span>) <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>)])</span><br><span class="line">    plt.savefig((val:=path+<span class="string">&quot;\\&quot;</span>+<span class="string">&quot;%s.png&quot;</span>%i),dpi=<span class="number">200</span>)</span><br><span class="line">    timeList.append(val)</span><br></pre></td></tr></table></figure><p>接着就是正常的绘制，我们需要将图像存储下来，并记录存储位置。</p><p>通过<code>imageio</code>模块制作动图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">IMG=[]</span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line">path=<span class="string">r&quot;C:\Users\lenovo\Desktop\Ocean\Spatial&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> timeList:</span><br><span class="line">    IMG.append(imageio.imread(i))</span><br><span class="line">imageio.mimsave(path+<span class="string">&quot;\\&quot;</span>+<span class="string">&quot;GIF1.gif&quot;</span>,IMG,<span class="string">&quot;GIF&quot;</span>,duration=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%80%91%E7%A9%BA%E9%97%B4%E8%87%AA%E7%9B%B8%E5%85%B3/GIF1-1665995063358-1.gif" alt="GIF1"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;计算莫兰指数和Geary’s C 空间自相关程度&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;卷积核类型&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2022/10/06/%E3%80%90%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E3%</summary>
      
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="空间分析" scheme="http://example.com/tags/%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【算法与数据结构】并查集</title>
    <link href="http://example.com/2022/09/26/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    <id>http://example.com/2022/09/26/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E5%B9%B6%E6%9F%A5%E9%9B%86/</id>
    <published>2022-09-26T14:17:21.350Z</published>
    <updated>2022-10-05T17:25:49.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言-v4">前言</h2><p>这个总结拖了好久hhh，一个月前就想搞了，一直拖到现在。这个总结并不是从【并查集】的<code>Introduction</code>和<code>background</code>开始的，侧重点在于运用方面。</p><p>先放个<code>Python</code>的板子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UnionSet</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,n</span>):</span><br><span class="line">        <span class="comment"># 多少个帮派</span></span><br><span class="line">        self.parents=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="comment"># 每个帮派有多少实力</span></span><br><span class="line">        self.rank[<span class="number">0</span>]*n</span><br><span class="line">        <span class="comment"># 吞并之后的帮派数量</span></span><br><span class="line">        self.count=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="comment"># 摇人规则</span></span><br><span class="line">        <span class="keyword">if</span> self.parents[x]!=x:</span><br><span class="line">            <span class="comment"># 一直找到大老板为止</span></span><br><span class="line">            <span class="comment"># 把沿途遇到的小老板的联系方式替换成大老板</span></span><br><span class="line">            self.parents[x]=self.find(self.parents[x])</span><br><span class="line">        <span class="keyword">return</span> self.parents[x]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="comment"># 吞并规则</span></span><br><span class="line">        roota,rootb=self.find(a),self.find(b)</span><br><span class="line">        <span class="comment"># 不是一派</span></span><br><span class="line">        <span class="keyword">if</span> roota!=rootb:</span><br><span class="line">            <span class="comment"># 小帮派并入大帮派</span></span><br><span class="line">            <span class="keyword">if</span> self.rank[roota]&lt;self.rank[rootb]:</span><br><span class="line">                roota,rootb=rootb,roota</span><br><span class="line">            self.parents[rootb]=roota</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> self.rank[roota]==self.rank[rootb]:</span><br><span class="line">                <span class="comment"># 同级别的情况下，能够百尺竿头更进一步</span></span><br><span class="line">                self.rank[roota]+=<span class="number">1</span></span><br><span class="line">            self.count-=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCount</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.count</span><br></pre></td></tr></table></figure><p>当然这个板子略显复杂，我们也不需要额外开一个类去定义并查集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function</span>(<span class="params">self,data</span>):</span><br><span class="line">        n=<span class="built_in">len</span>(data)</span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">       </span><br><span class="line">        <span class="comment"># 看情况修改</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">if</span> i&lt;j: <span class="comment"># 是否连通</span></span><br><span class="line">                    ri,rj=find(i),find(j) <span class="comment"># 合并规则</span></span><br><span class="line">                    <span class="keyword">if</span> ri!=rj:</span><br><span class="line">                        pa[rj]=ri <span class="comment"># 合并</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>([<span class="number">1</span> <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(pa) <span class="keyword">if</span> pa[i]==j]) <span class="comment"># 看情况修改 这里是统计连通块数量</span></span><br></pre></td></tr></table></figure><p>再贴一个Python3的精简版本，<code>:=</code>赋值符号只能在<code>py3.8</code>及以上的版本用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UnionFind</span>:</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,n</span>):</span><br><span class="line">self.pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line"><span class="keyword">if</span> self.pa[x]!=x:</span><br><span class="line">            self.pa[x]=self.find(self.pa[x])</span><br><span class="line">         <span class="keyword">return</span> pa[x]</span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="keyword">if</span> (roota:=self.find(a))!=(rootb:=self.find(b)):</span><br><span class="line">            self.pa[rootb]=roota</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isConnect</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="keyword">return</span> self.find(a)==self.find(b)</span><br></pre></td></tr></table></figure><hr><h2 id="并查集">并查集</h2><h3 id="一、概念介绍">一、概念介绍</h3><blockquote><p>所谓并查集(Union-find Data Structure),是一种用于快速处理不交集合并及查询问题的树形结构</p></blockquote><hr><p><strong>为什么需要提出并查集呢？</strong>❓</p><p>在图结构中，除却节点、边本身的性质，我们注意到还有不少性质尤为重要，其中就包括了拓扑结构。而最简单的一种拓扑结构，就是<code>连通关系</code>。</p><p>如何处理这种连通关系呢？如果通过新开一个数组的方式存储，那么每次查询都需要遍历每个元素，时间复杂度会比较高，且空间开销也比较大。</p><p>我们注意到，许多连通的元素可以单独构成一个整体，能不能选择其中有<code>代表性的一个</code>，作为代言人呢？这样，我们检查连通性的时候，只需要找到这个代言人，看看<code>两个连通块之间的代言人是否相同</code>，就能处理连通关系啦。</p><p><strong>举个栗子</strong></p><p>现在有五个城市<code>A,B,C,D,E</code>，他们之间有的开通了高铁，有的并没有。比如<code>A,B,C</code>之间开通了高铁，那么假如<code>D</code>要跟其中之一也开通高铁，此时，<code>D</code>和其他三个都能连通，形成了连通块。我们就不需要一一去存储三个城市啦，只需要将<code>D</code>保存到<code>A,B,C</code>连通块中，将连通块变成<code>A,B,C,D</code>就阔以啦。</p><hr><p><strong>并查集的结构是怎么样的呢？🏛️</strong></p><p>通过前文的论述，我们发现，并查集本质上就是一个存储连通关系的结构！这个结构为每个元素维护了一个<code>代表数据</code>，这个<code>代表数据</code>也就是每个连通块的区分数据。在实际中，这个代表数据可以是节点，可以是最大值，可以是统计量等。为了找到这个<code>代表数据</code>,我们还需要一个<code>寻址方法</code>。进一步的，可以通过<code>路径压缩</code>对<code>寻址方法进行优化</code>。</p><p>除却上述两个最重要的元素，并查集还可以维护一个<code>rank</code>数组，用来评估块的信息量。</p><table><thead><tr><th style="text-align:center">元素</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">parents</td><td style="text-align:center">连通块的代表元素，或者说，节点的<code>boss</code></td></tr><tr><td style="text-align:center">rank</td><td style="text-align:center">连通块的信息量</td></tr><tr><td style="text-align:center">find(x)</td><td style="text-align:center">寻址方法</td></tr><tr><td style="text-align:center">merge(a,b)</td><td style="text-align:center">合并方法</td></tr></tbody></table><hr><p><strong>特殊变化–带权并查集</strong></p><p>我们说对于无权图的连通性，并查集能够很好的进行适配与处理，那么对于有权图呢？是否也可以通过并查集进行处理？</p><p>答案是肯定的，并查集可以起到统一度量衡的作用，但是必须在结构上做一定的修改。</p><p>我们假设带权边的权重数组为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">w[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>条边相对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">root</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">roo</span><span class="mord mathnormal">t</span></span></span></span>节点的权重。</p><p>在寻址(find)过程中，我们需要进行如下操作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mfrac><mi>i</mi><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mi>i</mi><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><msub><mi>t</mi><mi>i</mi></msub></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><msub><mi>t</mi><mi>i</mi></msub></mrow><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w[i]=\frac{i}{root}=\frac{i}{parent_i}\times\frac{parent_i}{root}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0225em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.217em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.9781em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2921em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这是一条权重链，确保并查集中每个子集都能以根节点为基准进行定标。</p><p>在加入(union)的过程中，我们需要对其进行如下更新：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>假设 </mtext><mi>y</mi><mtext> 加入 </mtext><mi>x</mi><mtext> </mtext><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>y</mi></msub><mo stretchy="false">]</mo><mo>=</mo><mfrac><mrow><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>y</mi></msub></mrow><mrow><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>x</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>x</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mi>y</mi><mi>x</mi></mfrac><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mfrac><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>令</mtext><mi>k</mi><mo>=</mo><mfrac><mi>y</mi><mi>x</mi></mfrac><mtext>，即</mtext><mo>:</mo><mi>w</mi><mo stretchy="false">[</mo><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>y</mi></msub><mo stretchy="false">]</mo><mo>=</mo><mi>k</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mfrac><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">假设 \ y\ 加入\ x\ \\w[root_y]=\frac{root_y}{root_x}=\frac{y\ \cdot\ w[x]}{w[y]\ \cdot\ x}\\=\frac{y}{x}\ \cdot\ \frac{w[x]}{w[y]}\\令k=\frac{y}{x}，即:w[root_y]=k\ \cdot\ \frac{w[x]}{w[y]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">假设</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord cjk_fallback">加入</span><span class="mspace"> </span><span class="mord mathnormal">x</span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1281em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2921em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">，即</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如此，便在查询和合并的过程中实现了权值的链式更新。所有树结构上的值都是以根节点作为基准进行变换得到的，因此，同分支上(同个连通块)实现了可比性。</p><hr><p><strong>板子怎么写？</strong></p><p>这边不图快，正二八经的贴一个并查集板子。</p><p><code>python</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UnionSet</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,n</span>):</span><br><span class="line">        <span class="comment"># 多少个帮派</span></span><br><span class="line">        self.parents=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="comment"># 每个帮派有多少实力</span></span><br><span class="line">        self.rank[<span class="number">0</span>]*n</span><br><span class="line">        <span class="comment"># 吞并之后的帮派数量</span></span><br><span class="line">        self.count=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="comment"># 摇人规则</span></span><br><span class="line">        <span class="keyword">if</span> self.parents[x]!=x:</span><br><span class="line">            <span class="comment"># 一直找到大老板为止</span></span><br><span class="line">            <span class="comment"># 把沿途遇到的小老板的联系方式替换成大老板</span></span><br><span class="line">            self.parents[x]=self.find(self.parents[x])</span><br><span class="line">        <span class="keyword">return</span> self.parents[x]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="comment"># 吞并规则</span></span><br><span class="line">        roota,rootb=self.find(a),self.find(b)</span><br><span class="line">        <span class="comment"># 不是一派</span></span><br><span class="line">        <span class="keyword">if</span> roota!=rootb:</span><br><span class="line">            <span class="comment"># 小帮派并入大帮派</span></span><br><span class="line">            <span class="keyword">if</span> self.rank[roota]&lt;self.rank[rootb]:</span><br><span class="line">                roota,rootb=rootb,roota</span><br><span class="line">            self.parents[rootb]=roota</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> self.rank[roota]==self.rank[rootb]:</span><br><span class="line">                <span class="comment"># 同级别的情况下，能够百尺竿头更进一步</span></span><br><span class="line">                self.rank[roota]+=<span class="number">1</span></span><br><span class="line">            self.count-=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCount</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.count</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isConnect</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="keyword">return</span> find(a)==find(b)</span><br></pre></td></tr></table></figure><p><code>Java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">UnionFind</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] parent;</span><br><span class="line">        <span class="type">int</span>[] rank;</span><br><span class="line">        <span class="type">int</span> count;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">UnionFind</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">            parent=<span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">            rank=<span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">            count=n;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                parent[i]=i;</span><br><span class="line">                rank[i]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (parent[i] != i) parent[i] = find(parent[i]);</span><br><span class="line">            <span class="keyword">return</span> parent[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">union</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">rootx</span> <span class="operator">=</span> find(x);</span><br><span class="line">            <span class="type">int</span> <span class="variable">rooty</span> <span class="operator">=</span> find(y);</span><br><span class="line">            <span class="keyword">if</span> (rootx != rooty) &#123;</span><br><span class="line">                <span class="keyword">if</span> (rank[rootx] &gt; rank[rooty]) &#123;</span><br><span class="line">                    parent[rooty] = rootx;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rank[rootx] &lt; rank[rooty]) &#123;</span><br><span class="line">                    parent[rootx] = rooty;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    parent[rooty] = rootx;</span><br><span class="line">                    rank[rootx] += <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                count--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="二、题目类型">二、题目类型</h3><p>每种类型的题大概会挑比较经典的两三题讲一讲，并提炼思路与套路。</p><h3 id="常见类型：连通块大小"><strong>常见类型：连通块大小</strong></h3><blockquote><p>此类问题是最常见的问题，例如经典的岛屿问题</p></blockquote><hr><h4 id="1️⃣-LC200-岛屿数量">1️⃣ LC200 岛屿数量</h4><p>来自：<a href="https://leetcode.cn/problems/number-of-islands">https://leetcode.cn/problems/number-of-islands</a></p><p>给你一个由 ‘1’（陆地）和 ‘0’（水）组成的的二维网格，请你计算网格中岛屿的数量。</p><p>岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。</p><p>此外，你可以假设该网格的四条边均被水包围。</p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>]</span><br><span class="line">]</span><br><span class="line">输出：<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">输入：grid = [</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>]</span><br><span class="line">]</span><br><span class="line">输出：<span class="number">3</span></span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>因为是UF的归纳，所以这边我们不用其他方法做了。</p><p>我们只需要将上下左右都是&quot;1&quot;的元素加入并查集即可。</p><p><strong>注意点</strong></p><ul><li>最开始初始化并查集的时候，需要用一个字段<code>c</code>记录元素的数量</li><li>当任意两个集合合并为一个集合时，令字段<code>c</code>减一</li><li>从右上往左下遍历，我们不需要找四个方向，只需要找左下两个方向即可(做个小剪枝)</li><li>即：<code>for x,y in [(i+1,j),(i,j+1)] </code>可以思考为什么能做剪枝、</li></ul><p><strong>实质</strong></p><p>连通块的大小</p><p><strong>实现</strong></p><p>由于这是第一题，我们贴一个低耦合的写法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numIslands</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m=<span class="built_in">len</span>(grid)</span><br><span class="line">        <span class="keyword">if</span> m==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        n=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        u=UnionSet(grid)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">                <span class="comment"># 避免重复计数</span></span><br><span class="line">                    <span class="comment"># 往左下找</span></span><br><span class="line">                    <span class="keyword">for</span> a,b <span class="keyword">in</span> [(i+<span class="number">1</span>,j),(i,j+<span class="number">1</span>)]:</span><br><span class="line">                        <span class="keyword">if</span> a&lt;m <span class="keyword">and</span> b&lt;n <span class="keyword">and</span> grid[a][b]==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">                            <span class="comment"># 找到小弟了，吸收进帮派</span></span><br><span class="line">                            u.union(i*n+j,a*n+b)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> u.getCount()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnionSet</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,grid</span>):</span><br><span class="line">        <span class="comment"># 多少个帮派</span></span><br><span class="line">        self.m,self.n=<span class="built_in">len</span>(grid),<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        self.parents=[-<span class="number">1</span>]*(self.m*self.n)</span><br><span class="line">        <span class="comment"># 每个帮派有多少实力</span></span><br><span class="line">        self.rank=[<span class="number">0</span>]*(self.m*self.n)</span><br><span class="line">        <span class="comment"># 吞并之后的帮派数量</span></span><br><span class="line">        self.count=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 生成江湖中</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.m):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(self.n):</span><br><span class="line">                <span class="comment"># 有能力自成一派</span></span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    self.parents[i*self.n+j]=i*self.n+j</span><br><span class="line">                    self.count+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="comment"># 摇人规则</span></span><br><span class="line">        <span class="keyword">if</span> self.parents[x]!=x:</span><br><span class="line">            self.parents[x]=self.find(self.parents[x])</span><br><span class="line">        <span class="keyword">return</span> self.parents[x]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="comment"># 吞并规则</span></span><br><span class="line">        roota,rootb=self.find(a),self.find(b)</span><br><span class="line">        <span class="comment"># 不是一派</span></span><br><span class="line">        <span class="keyword">if</span> roota!=rootb:</span><br><span class="line">            <span class="comment"># 小帮派并入大帮派</span></span><br><span class="line">            <span class="keyword">if</span> self.rank[roota]&lt;self.rank[rootb]:</span><br><span class="line">                roota,rootb=rootb,roota</span><br><span class="line">            self.parents[rootb]=roota</span><br><span class="line">            <span class="keyword">if</span> self.rank[roota]==self.rank[rootb]:</span><br><span class="line">                <span class="comment"># 同级别的情况下，能够百尺竿头更进一步</span></span><br><span class="line">                self.rank[roota]+=<span class="number">1</span></span><br><span class="line">            self.count-=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCount</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.count</span><br></pre></td></tr></table></figure><p>上述版本中我们单独维护了<code>UF</code>的结构，方便维护和重复使用。而为了快，也可以将<code>UF</code>直接写到代码块中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numIslands</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        m=<span class="built_in">len</span>(grid)</span><br><span class="line">        <span class="keyword">if</span> m&lt;=<span class="number">0</span>:<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        n=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        </span><br><span class="line">        cnt=m*n<span class="comment"># 计数</span></span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m*n)] <span class="comment"># 二维展平成一维的父节点</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):<span class="comment"># 寻址+路径压缩</span></span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="string">&quot;1&quot;</span>:<span class="comment"># &quot;1&quot;的时候合并</span></span><br><span class="line">                    <span class="keyword">for</span> x,y <span class="keyword">in</span> [(i+<span class="number">1</span>,j),(i,j+<span class="number">1</span>)]:</span><br><span class="line">                        <span class="keyword">if</span> x&lt;m <span class="keyword">and</span> y&lt;n <span class="keyword">and</span> grid[x][y]==<span class="string">&quot;1&quot;</span>:<span class="comment"># 合并     </span></span><br><span class="line">                            roota,rootb=find(i*n+j),find(x*n+y)</span><br><span class="line">                            <span class="keyword">if</span> roota!=rootb:</span><br><span class="line">                                pa[rootb]=roota</span><br><span class="line">                                cnt-=<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    cnt-=<span class="number">1</span> <span class="comment"># &quot;0&quot;的时候计数减一</span></span><br><span class="line">        <span class="keyword">return</span> cnt</span><br></pre></td></tr></table></figure><hr><h4 id="2️⃣-LC547省份数量">2️⃣ LC547省份数量</h4><p>来源:<a href="https://leetcode.cn/problems/number-of-provinces/">https://leetcode.cn/problems/number-of-provinces/</a></p><p>有 n 个城市，其中一些彼此相连，另一些没有相连。如果城市 a 与城市 b 直接相连，且城市 b 与城市 c 直接相连，那么城市 a 与城市 c 间接相连。</p><p>省份 是一组直接或间接相连的城市，组内不含其他没有相连的城市。</p><p>给你一个 n x n 的矩阵 isConnected ，其中 isConnected[i][j] = 1 表示第 i 个城市和第 j 个城市直接相连，而 isConnected[i][j] = 0 表示二者不直接相连。</p><p>返回矩阵中 省份 的数量。</p><p><strong>示例</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]]</span><br><span class="line">输出：<span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>这题跟200是换汤不换药啊，只不过变成数组了。</p><p>给的是邻接表，这也是图结构中比较重要的一环。通过邻接表，能够快速实现连通关系的构建。</p><p><strong>实质</strong></p><p>连通块的数量</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findCircleNum</span>(<span class="params">self, isConnected: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n=<span class="built_in">len</span>(isConnected)</span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        cnt=n</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>,n): <span class="comment"># 我们只要上三角矩阵就好了</span></span><br><span class="line">                <span class="keyword">if</span> isConnected[i][j]:</span><br><span class="line">                    ri,rj=find(i),find(j)</span><br><span class="line">                    <span class="keyword">if</span> ri!=rj:</span><br><span class="line">                        pa[ri]=rj</span><br><span class="line">                        cnt-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> cnt</span><br></pre></td></tr></table></figure><hr><h4 id="3️⃣-LC695-岛屿的最大面积">3️⃣ LC695 岛屿的最大面积</h4><p><strong>来源</strong>：<a href="https://leetcode.cn/problems/max-area-of-island/">https://leetcode.cn/problems/max-area-of-island/</a></p><p>给你一个大小为 m x n 的二进制矩阵 grid 。</p><p>岛屿 是由一些相邻的 1 (代表土地) 构成的组合，这里的「相邻」要求两个 1 必须在 水平或者竖直的四个方向上 相邻。你可以假设 grid 的四个边缘都被 0（代表水）包围着。</p><p>岛屿的面积是岛上值为 1 的单元格的数目。</p><p>计算并返回 grid 中最大的岛屿面积。如果没有岛屿，则返回面积为 0 。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">           [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br><span class="line">输出：<span class="number">6</span></span><br></pre></td></tr></table></figure><p><strong>思想</strong></p><p>遍历整个区域，构建连通块，维护一个最大连通块面积</p><p><strong>实质</strong></p><p>连通块的大小</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxAreaOfIsland</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        m,n=<span class="built_in">len</span>(grid),<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m*n)]</span><br><span class="line">        rank=[<span class="number">1</span>]*(m*n)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">for</span> x,y <span class="keyword">in</span> [(i+<span class="number">1</span>,j),(i,j+<span class="number">1</span>)]:</span><br><span class="line">                        <span class="keyword">if</span> x&lt;m <span class="keyword">and</span> y&lt;n <span class="keyword">and</span> grid[x][y]==<span class="number">1</span>:</span><br><span class="line">                            rx,ry=find(i*n+j),find(x*n+y)</span><br><span class="line">                            <span class="keyword">if</span> rx!=ry:</span><br><span class="line">                                <span class="keyword">if</span> rank[rx]&lt;rank[ry]:</span><br><span class="line">                                    rx,ry=ry,rx</span><br><span class="line">                                pa[ry]=rx</span><br><span class="line">                                rank[rx]+=rank[ry]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    rank[i*n+j]=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(rank)</span><br></pre></td></tr></table></figure><p><strong>技巧</strong></p><ul><li>我们将每一个像素点视为一个独立个体，因而整个树的叶子结点有<code>m*n</code>个，<code>pa</code>应该开到这样的空间</li><li>两个连通块合并的时候，可以得到一个新的连通块，这个连通块的大小等于两个连通块之和</li><li>从左上往右下遍历，每次只需要找到右下方向就可以了</li></ul><hr><h4 id="4️⃣-LC952-按公因数计算最大组件大小">4️⃣ LC952 按公因数计算最大组件大小</h4><p>链接：<a href="https://leetcode.cn/problems/largest-component-size-by-common-factor">https://leetcode.cn/problems/largest-component-size-by-common-factor</a></p><p>给定一个由不同正整数的组成的非空数组 nums ，考虑下面的图：</p><p>有 nums.length 个节点，按从 nums[0] 到 nums[nums.length - 1] 标记；<br>只有当 nums[i] 和 nums[j] 共用一个大于 1 的公因数时，nums[i] 和 nums[j]之间才有一条边。<br>返回 图中最大连通组件的大小 。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">35</span>]</span><br><span class="line">输出：<span class="number">4</span></span><br></pre></td></tr></table></figure><p><strong>思想</strong></p><p>判断公因数，存在公因数时，相当于存在边。因而公因数作为桥梁，可以构建某个点到另一个点的连通块。</p><p><strong>实质</strong></p><p>寻找质因数+并查集</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 欧拉筛</span></span><br><span class="line">n=<span class="built_in">int</span>(<span class="number">10e5</span>+<span class="number">1</span>)</span><br><span class="line">isPrime=[<span class="number">1</span>]*n</span><br><span class="line">prime=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line">    <span class="keyword">if</span> isPrime[i]:</span><br><span class="line">        prime.append(i)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> prime:</span><br><span class="line">        <span class="keyword">if</span> j*i&gt;=n:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        isPrime[j*i]=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> i%j==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">largestComponentSize</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 这题考察点有两个：</span></span><br><span class="line">        <span class="comment"># + 质因数分解</span></span><br><span class="line">        <span class="comment"># + 连通性</span></span><br><span class="line">        <span class="comment"># 质因数分解通过欧拉筛就可以解决</span></span><br><span class="line"></span><br><span class="line">        n=<span class="built_in">max</span>(nums)</span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">a,b</span>):</span><br><span class="line">            <span class="keyword">if</span> (ra:=find(a))!=(rb:=find(b)):</span><br><span class="line">                pa[rb]=ra</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> idx,i <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            tem=nums[idx]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> prime:</span><br><span class="line">                <span class="keyword">if</span> j**<span class="number">2</span>&gt;tem:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># 公因子连接</span></span><br><span class="line">                <span class="keyword">if</span> tem%j==<span class="number">0</span>:</span><br><span class="line">                    union(i,j)</span><br><span class="line">                <span class="comment"># 去除公因子</span></span><br><span class="line">                <span class="keyword">while</span> tem%j==<span class="number">0</span>:</span><br><span class="line">                    tem//=j</span><br><span class="line">            <span class="keyword">if</span> tem!=<span class="number">1</span>:</span><br><span class="line">                union(tem,i)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(Counter(find(num) <span class="keyword">for</span> num <span class="keyword">in</span> nums).values())</span><br></pre></td></tr></table></figure><hr><h3 id="常见问题：-加入连通块">常见问题： 加入连通块</h3><blockquote><p>此类问题在构建当前连通块后，往往通过加入新的连通块增加难度</p></blockquote><h4 id="1️⃣-LC778-水位上升游泳池">1️⃣ LC778 水位上升游泳池</h4><p><strong>来源:</strong> <a href="https://leetcode.cn/problems/swim-in-rising-water/">https://leetcode.cn/problems/swim-in-rising-water/</a></p><p>在一个 n x n 的整数矩阵 grid 中，每一个方格的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>r</mi><mi>i</mi><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">grid[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示位置 (i, j) 的平台高度。</p><p>当开始下雨时，在时间为 t 时，水池中的水位为 t 。你可以从一个平台游向四周相邻的任意一个平台，但是前提是此时水位必须同时淹没这两个平台。假定你可以瞬间移动无限距离，也就是默认在方格内部游动是不耗时的。当然，在你游泳的时候你必须待在坐标方格里面。</p><p>你从坐标方格的左上平台 (0，0) 出发。返回 你到达坐标方格的右下平台 (n-1, n-1) 所需的最少时间 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: grid = [[<span class="number">0</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">3</span>]]</span><br><span class="line">输出: <span class="number">3</span></span><br><span class="line">解释:</span><br><span class="line">时间为<span class="number">0</span>时，你位于坐标方格的位置为 (<span class="number">0</span>, <span class="number">0</span>)。</span><br><span class="line">此时你不能游向任意方向，因为四个相邻方向平台的高度都大于当前时间为 <span class="number">0</span> 时的水位。</span><br><span class="line">等时间到达 <span class="number">3</span> 时，你才可以游向平台 (<span class="number">1</span>, <span class="number">1</span>). 因为此时的水位是 <span class="number">3</span>，坐标方格中的平台没有比水位 <span class="number">3</span> 更高的，所以你可以游向坐标方格中的任意位置</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>因为时间区间给定了，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><mi>n</mi><mo>∗</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t=n*n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的时刻一定能够遍历，所以我们可以通过二分法的方式找到最小可以满足条件的时间。或者呢，我们通过并查集的方式，在每一时刻联通新的节点，判断起点和终点的连通性就可以。当然，为了方便加入联通节点，我们也可以先用<code>hash</code>表记录位置。</p><p><strong>核心</strong></p><p>加入连通块后判断连通性</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">swimInWater</span>(<span class="params">self, grid</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type grid: List[List[int]]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        n=<span class="built_in">len</span>(grid)</span><br><span class="line">        u=UnionFind(n**<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">dir</span>=[[<span class="number">1</span>,<span class="number">0</span>],[-<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">0</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 为了方便遍历</span></span><br><span class="line">        <span class="comment"># 我们可以用贪心思想：每次从最小满足阈值t的点出发，联通周围的点</span></span><br><span class="line">        <span class="comment"># 由于t是唯一的 所以我们只需要注重当下即可</span></span><br><span class="line">        <span class="comment"># 因为到t时刻，所有能够连通的都已经联通了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 我们可以用hash表记录位置</span></span><br><span class="line">        hashmap=collections.defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                hashmap[grid[i][j]]=[i,j]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># t次循环</span></span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(n**<span class="number">2</span>):</span><br><span class="line">            idx=hashmap[t]</span><br><span class="line">            <span class="keyword">for</span> dx,dy <span class="keyword">in</span> <span class="built_in">dir</span>:</span><br><span class="line">                x=idx[<span class="number">0</span>]+dx</span><br><span class="line">                y=idx[<span class="number">1</span>]+dy</span><br><span class="line">                <span class="keyword">if</span> x&gt;=<span class="number">0</span> <span class="keyword">and</span> x&lt;n <span class="keyword">and</span> y&gt;=<span class="number">0</span> <span class="keyword">and</span> y&lt;n <span class="keyword">and</span> grid[x][y]&lt;=t:</span><br><span class="line">                    u.union(idx[<span class="number">0</span>]*n+idx[<span class="number">1</span>],x*n+y)</span><br><span class="line">            <span class="comment"># 判断此时的连通性</span></span><br><span class="line">            <span class="keyword">if</span> u.isConnect(<span class="number">0</span>,n*n-<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">return</span> t</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnionFind</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,n</span>):</span><br><span class="line">        self.pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">if</span> self.pa[x]!=x:</span><br><span class="line">            self.pa[x]=self.find(self.pa[x])</span><br><span class="line">        <span class="keyword">return</span> self.pa[x]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        roota,rootb=self.find(a),self.find(b)</span><br><span class="line">        <span class="keyword">if</span> roota!=rootb:</span><br><span class="line">            self.pa[rootb]=roota</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isConnect</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="keyword">return</span> self.find(a)==self.find(b)</span><br></pre></td></tr></table></figure><hr><h4 id="2️⃣-LC827-最大人工岛">2️⃣ LC827 最大人工岛</h4><p><strong>来源</strong>: <a href="https://leetcode.cn/problems/making-a-large-island/">https://leetcode.cn/problems/making-a-large-island/</a></p><p>给你一个大小为 n x n 二进制矩阵 grid 。最多 只能将一格 0 变成 1 。</p><p>返回执行此操作后，grid 中最大的岛屿面积是多少？</p><p>岛屿 由一组上、下、左、右四个方向相连的 1 形成。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: grid = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">输出: <span class="number">3</span></span><br><span class="line">解释: 将一格<span class="number">0</span>变成<span class="number">1</span>，最终连通两个小岛得到面积为 <span class="number">3</span> 的岛屿。</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>827相当于695的进阶，在695的板子上，加上了可以diy位置的连通块，所以我们可以通过<code>回溯+并查集</code>的方式实现(穷举的本质罢了)</p><p><strong>核心</strong></p><p>连通块大小+可变连通块</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">largestIsland</span>(<span class="params">self, grid</span>):</span><br><span class="line">        <span class="comment"># 并查集+回溯</span></span><br><span class="line">        n=<span class="built_in">len</span>(grid)</span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n*n)]</span><br><span class="line">        rank=[<span class="number">1</span>]*(n*n)</span><br><span class="line">        maxVal=<span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化并查集</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="number">1</span>:</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">for</span> x,y <span class="keyword">in</span> [(i+<span class="number">1</span>,j),(i,j+<span class="number">1</span>)]:</span><br><span class="line">                        <span class="keyword">if</span> x&lt;n <span class="keyword">and</span> y&lt;n <span class="keyword">and</span> grid[x][y]==<span class="number">1</span>:</span><br><span class="line">                            ra,rb=find(i*n+j),find(x*n+y)</span><br><span class="line">                            <span class="keyword">if</span> ra!=rb:</span><br><span class="line">                                pa[rb]=ra</span><br><span class="line">                                rank[ra]+=rank[rb]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    rank[i*n+j]=<span class="number">0</span></span><br><span class="line">        maxVal=<span class="built_in">max</span>(rank) <span class="comment"># 记录啥也不加的最大值</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#--------------------------------------------------------------------#</span></span><br><span class="line">        <span class="comment">#                           到这里位置完全是695                       #</span></span><br><span class="line">        <span class="comment">#--------------------------------------------------------------------#</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 回溯</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="number">0</span>:</span><br><span class="line">                    <span class="comment"># 合并上下左右不同根节点的连通块</span></span><br><span class="line">                    tem_rank=<span class="number">0</span></span><br><span class="line">                    used=<span class="built_in">set</span>()</span><br><span class="line">                    <span class="keyword">for</span> x,y <span class="keyword">in</span> [(i-<span class="number">1</span>,j),(i+<span class="number">1</span>,j),(i,j-<span class="number">1</span>),(i,j+<span class="number">1</span>)]:</span><br><span class="line">                        <span class="keyword">if</span> x&gt;=<span class="number">0</span> <span class="keyword">and</span> x&lt;n <span class="keyword">and</span> y&gt;=<span class="number">0</span> <span class="keyword">and</span> y&lt;n <span class="keyword">and</span> grid[x][y]==<span class="number">1</span> <span class="keyword">and</span> (val:=find(x*n+y)) <span class="keyword">not</span> <span class="keyword">in</span> used:</span><br><span class="line">                            tem_rank+=rank[val]</span><br><span class="line">                            used.add(val)</span><br><span class="line">                    maxVal=<span class="built_in">max</span>(maxVal,tem_rank+<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(maxv,maxVal)</span><br><span class="line">     </span><br></pre></td></tr></table></figure><hr><h4 id="3️⃣-LC128-最长连续序列">3️⃣ LC128 最长连续序列</h4><p><strong>链接</strong>：<a href="https://leetcode.cn/problems/longest-consecutive-sequence">https://leetcode.cn/problems/longest-consecutive-sequence</a></p><p>给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。</p><p>请你设计并实现时间复杂度为 O(n) 的算法解决此问题。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [<span class="number">100</span>,<span class="number">4</span>,<span class="number">200</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">输出：<span class="number">4</span></span><br><span class="line">解释：最长数字连续序列是 [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]。它的长度为 <span class="number">4</span>。</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>通过<code>hash</code>表维护元素之间的位置，利用并查集保证多个连通块之间的比较。在加入上，不需要再去考虑位置问题，只需要着眼于当下。</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestConsecutive</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这题是个好题啊</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        hash表、并查集、DP等等都能做(UF会不会TLE？真的是O(n)吗)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 并查集</span></span><br><span class="line">        n=<span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        hashset=&#123;&#125;</span><br><span class="line">        u=UnionSet(n)</span><br><span class="line">        <span class="comment"># 讲道理，最后还是要用hash表辅助啊</span></span><br><span class="line">        <span class="comment"># 要不然之前的结构不太好找</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> j <span class="keyword">in</span> hashset.keys():</span><br><span class="line">                <span class="keyword">continue</span> <span class="comment"># 找过了</span></span><br><span class="line">            <span class="keyword">if</span> j-<span class="number">1</span> <span class="keyword">in</span> hashset.keys():</span><br><span class="line">                u.union(i,hashset[j-<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span> j+<span class="number">1</span> <span class="keyword">in</span> hashset.keys():</span><br><span class="line">                u.union(i,hashset[j+<span class="number">1</span>])</span><br><span class="line">            hashset[j]=i</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> u.getV()</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnionSet</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,x</span>):</span><br><span class="line">        self.pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x)]</span><br><span class="line">        self.rank=[<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x)]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">if</span> self.pa[x]!=x:</span><br><span class="line">            self.pa[x]=self.find(self.pa[x])</span><br><span class="line">        <span class="keyword">return</span> self.pa[x]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        roota,rootb=self.find(a),self.find(b)</span><br><span class="line">        <span class="keyword">if</span> roota!=rootb:</span><br><span class="line">            self.pa[rootb]=roota</span><br><span class="line">            self.rank[roota]+=self.rank[rootb]</span><br><span class="line">            <span class="comment"># self.rank[rootb]=0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getV</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(self.rank)</span><br></pre></td></tr></table></figure><p>我们来看看<code>hash</code>表的做法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestConsecutive</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        hashset=<span class="built_in">set</span>(nums)</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            val=i</span><br><span class="line">            <span class="keyword">if</span> val-<span class="number">1</span> <span class="keyword">not</span> <span class="keyword">in</span> hashset:</span><br><span class="line">                start=<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> val+<span class="number">1</span> <span class="keyword">in</span> hashset:</span><br><span class="line">                    start+=<span class="number">1</span></span><br><span class="line">                    val+=<span class="number">1</span></span><br><span class="line">                ans=<span class="built_in">max</span>(ans,start)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><hr><h3 id="常见问题：-判断重复连接">常见问题： 判断重复连接</h3><blockquote><p>此类问题一般跟环结构有关，判断是否产生了重复的连接</p></blockquote><h4 id="1️⃣-LC684-冗余连接">1️⃣ LC684 冗余连接</h4><p>**链接：**<a href="https://leetcode.cn/problems/redundant-connection">https://leetcode.cn/problems/redundant-connection</a></p><p>树可以看成是一个连通且 无环 的 无向 图。</p><p>给定往一棵 n 个节点 (节点值 1～n) 的树中添加一条边后的图。添加的边的两个顶点包含在 1 到 n 中间，且这条附加的边不属于树中已存在的边。图的信息记录于长度为 n 的二维数组 edges ，edges[i] = [ai, bi] 表示图中在 ai 和 bi 之间存在一条边。</p><p>请找出一条可以删去的边，删除后可使得剩余部分是一个有着 n 个节点的树。如果有多个答案，则返回数组 edges 中最后出现的边。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: edges = [[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">1</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">输出: [<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>这题的本质在于树不可以出现环，且不存在节点间的先后序，所以可以直接采用并查集构建联通节点。当某个节点加入时，若存在环，则合并的两个节点将具有相同的父节点。</p><p><strong>核心</strong></p><p>判断节点连通性</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findRedundantConnection</span>(<span class="params">self, edges: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        <span class="comment"># 这题我差点想用合并代替删除了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 实际上不需要</span></span><br><span class="line">        <span class="comment"># 这个只需要判断是否出现环就行了</span></span><br><span class="line">        <span class="comment"># 直接建图的话有点浪费时间</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 用并查集判断连通性就可以了</span></span><br><span class="line"></span><br><span class="line">        pa=&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">a,b</span>):</span><br><span class="line">            pa[find(b)]=find(a)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> edges:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> pa:</span><br><span class="line">                pa[i]=i</span><br><span class="line">            <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> pa:</span><br><span class="line">                pa[j]=j</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> find(i)!=find(j):</span><br><span class="line">                union(i,j)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> [i,j]</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><p><strong>技巧</strong></p><ul><li>动态开并查集节点</li></ul><hr><h3 id="常见问题：-堵塞"><strong>常见问题： 堵塞</strong></h3><blockquote><p>这类问题往往在树的构建上，通过增加限制条件，限制路径</p></blockquote><h4 id="1️⃣-LC2368-受限制条件下可达到的节点数目">1️⃣ LC2368 受限制条件下可达到的节点数目</h4><p><strong>链接</strong>：<a href="https://leetcode.cn/problems/reachable-nodes-with-restrictions">https://leetcode.cn/problems/reachable-nodes-with-restrictions</a></p><p>现有一棵由 n 个节点组成的无向树，节点编号从 0 到 n - 1 ，共有 n - 1 条边。</p><p>给你一个二维整数数组 edges ，长度为 n - 1 ，其中 edges[i] = [ai, bi] 表示树中节点 ai 和 bi 之间存在一条边。另给你一个整数数组 restricted 表示 受限 节点。</p><p>在不访问受限节点的前提下，返回你可以从节点 0 到达的 最多 节点数目。</p><p>注意，节点 0 不 会标记为受限节点。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：n = <span class="number">7</span>, edges = [[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">1</span>],[<span class="number">4</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">5</span>],[<span class="number">5</span>,<span class="number">6</span>]], restricted = [<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">输出：<span class="number">4</span></span><br><span class="line">解释：上图所示正是这棵树。</span><br><span class="line">在不访问受限节点的前提下，只有节点 [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] 可以从节点 <span class="number">0</span> 到达。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>存在阻碍节点视为不可通行，由于需要我们构建树，所以并不能直接通过遍历的方式找到。于是，当我们在构建树的时候，可以通过计算零节点的连通块实现求节点的目的。</p><p>在遇到受限节点的时候，不进行联通，那么如果没有其他支路，该路径后续的节点都不会被加入零节点的连通块，而是独立形成连通块。(一共有三种类型： 零节点连通块，独立连通块，受限制节点)</p><p><strong>实质</strong></p><p>受限制条件下的连通</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reachableNodes</span>(<span class="params">self, n: <span class="built_in">int</span>, edges: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], restricted: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 看到无向图 就该考虑并查集了</span></span><br><span class="line">        pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="comment"># set在查询的速度远超于list </span></span><br><span class="line">        <span class="comment"># 而且会有重复的</span></span><br><span class="line">        </span><br><span class="line">        restricted=<span class="built_in">set</span>(restricted)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">a,b</span>):</span><br><span class="line">            <span class="keyword">if</span> (va:=find(a))!=(vb:=find(b)):</span><br><span class="line">                pa[vb]=va</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> edges:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> restricted <span class="keyword">and</span> j <span class="keyword">not</span> <span class="keyword">in</span> restricted:</span><br><span class="line">                union(i,j)</span><br><span class="line">        <span class="comment"># print(pa)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>([<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n) <span class="keyword">if</span> find(i)==find(<span class="number">0</span>)])</span><br></pre></td></tr></table></figure><hr><h3 id="常见问题：带权并查集">常见问题：带权并查集</h3><h4 id="1️⃣-LC399-除法求值">1️⃣ LC399 除法求值</h4><p>链接：<a href="https://leetcode.cn/problems/evaluate-division">https://leetcode.cn/problems/evaluate-division</a></p><p>给你一个变量对数组 equations 和一个实数值数组 values 作为已知条件，其中 equations[i] = [Ai, Bi] 和 values[i] 共同表示等式 Ai / Bi = values[i] 。每个 Ai 或 Bi 是一个表示单个变量的字符串。</p><p>另有一些以数组 queries 表示的问题，其中 queries[j] = [Cj, Dj] 表示第 j 个问题，请你根据已知条件找出 Cj / Dj = ? 的结果作为答案。</p><p>返回 所有问题的答案 。如果存在某个无法确定的答案，则用 -1.0 替代这个答案。如果问题中出现了给定的已知条件中没有出现的字符串，也需要用 -1.0 替代这个答案。</p><p>注意：输入总是有效的。你可以假设除法运算中不会出现除数为 0 的情况，且不存在任何矛盾的结果。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：equations = [[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>],[<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>]], values = [<span class="number">2.0</span>,<span class="number">3.0</span>], queries = [[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;c&quot;</span>],[<span class="string">&quot;b&quot;</span>,<span class="string">&quot;a&quot;</span>],[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;e&quot;</span>],[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;a&quot;</span>],[<span class="string">&quot;x&quot;</span>,<span class="string">&quot;x&quot;</span>]]</span><br><span class="line">输出：[<span class="number">6.00000</span>,<span class="number">0.50000</span>,-<span class="number">1.00000</span>,<span class="number">1.00000</span>,-<span class="number">1.00000</span>]</span><br><span class="line">解释：</span><br><span class="line">条件：a / b = <span class="number">2.0</span>, b / c = <span class="number">3.0</span></span><br><span class="line">问题：a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?</span><br><span class="line">结果：[<span class="number">6.0</span>, <span class="number">0.5</span>, -<span class="number">1.0</span>, <span class="number">1.0</span>, -<span class="number">1.0</span> ]</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>首先明确，不同类型(可以看做不同量纲)之间是无法进行除法的，这一块跟连通性很类似，因此我们可以想到并查集。</p><p>在面对权值的时候，需要考虑用带权并查集。</p><p>我们假设带权边的权重数组为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">w[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>条边相对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">root</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">roo</span><span class="mord mathnormal">t</span></span></span></span>节点的权重。</p><p>在寻址(find)过程中，我们需要进行如下操作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mfrac><mi>i</mi><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mi>i</mi><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><msub><mi>t</mi><mi>i</mi></msub></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><msub><mi>t</mi><mi>i</mi></msub></mrow><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w[i]=\frac{i}{root}=\frac{i}{parent_i}\times\frac{parent_i}{root}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0225em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.217em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.9781em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2921em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这是一条权重链，确保并查集中每个子集都能以根节点为基准进行定标。</p><p>在加入(union)的过程中，我们需要对其进行如下更新：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>假设 </mtext><mi>y</mi><mtext> 加入 </mtext><mi>x</mi><mtext> </mtext><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>y</mi></msub><mo stretchy="false">]</mo><mo>=</mo><mfrac><mrow><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>y</mi></msub></mrow><mrow><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>x</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>x</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mi>y</mi><mi>x</mi></mfrac><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mfrac><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>令</mtext><mi>k</mi><mo>=</mo><mfrac><mi>y</mi><mi>x</mi></mfrac><mtext>，即</mtext><mo>:</mo><mi>w</mi><mo stretchy="false">[</mo><mi>r</mi><mi>o</mi><mi>o</mi><msub><mi>t</mi><mi>y</mi></msub><mo stretchy="false">]</mo><mo>=</mo><mi>k</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mfrac><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">假设 \ y\ 加入\ x\ \\w[root_y]=\frac{root_y}{root_x}=\frac{y\ \cdot\ w[x]}{w[y]\ \cdot\ x}\\=\frac{y}{x}\ \cdot\ \frac{w[x]}{w[y]}\\令k=\frac{y}{x}，即:w[root_y]=k\ \cdot\ \frac{w[x]}{w[y]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">假设</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord cjk_fallback">加入</span><span class="mspace"> </span><span class="mord mathnormal">x</span><span class="mspace"> </span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1281em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2921em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">，即</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">roo</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如此，便在查询和合并的过程中实现了权值的链式更新。所有树结构上的值都是以根节点作为基准进行变换得到的，因此，同分支上(同个连通块)实现了可比性。</p><p><strong>实质</strong></p><p>带权边上的变换</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcEquation</span>(<span class="params">self, equations: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]], values: <span class="type">List</span>[<span class="built_in">float</span>], queries: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]</span>) -&gt; <span class="type">List</span>[<span class="built_in">float</span>]:</span><br><span class="line">        u=UnionFind()</span><br><span class="line">        <span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(equations):</span><br><span class="line">            u.merge(v[<span class="number">0</span>],v[<span class="number">1</span>],values[i])</span><br><span class="line">        </span><br><span class="line">        ans=[]</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> queries:</span><br><span class="line">            ans.append(u.divide(i,j))</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnionFind</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.pa=&#123;&#125;</span><br><span class="line">        self.val=&#123;&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> self.pa:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> self.pa[x]!=x:</span><br><span class="line">            fa=self.find(self.pa[x])</span><br><span class="line">            self.val[x]=self.val[x]*self.val[self.pa[x]]  <span class="comment"># 更新权重</span></span><br><span class="line">            self.pa[x]=fa</span><br><span class="line">        <span class="keyword">return</span> self.pa[x]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">self,a,b,val</span>):</span><br><span class="line">        <span class="keyword">if</span> a <span class="keyword">not</span> <span class="keyword">in</span> self.pa:</span><br><span class="line">            self.pa[a]=a</span><br><span class="line">            self.val[a]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> b <span class="keyword">not</span> <span class="keyword">in</span> self.pa:</span><br><span class="line">            self.pa[b]=b</span><br><span class="line">            self.val[b]=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        roota,rootb=self.find(a),self.find(b)</span><br><span class="line">        <span class="keyword">if</span> roota==rootb <span class="keyword">or</span> (roota==<span class="literal">None</span> <span class="keyword">or</span> rootb==<span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        self.pa[roota]=rootb</span><br><span class="line">        <span class="comment"># w[b]=b/roob</span></span><br><span class="line">        <span class="comment"># roob/rooa = b/w[b] / a/w[a]</span></span><br><span class="line">        <span class="comment"># = b/a * w[a]/w[b]</span></span><br><span class="line">        self.val[roota]=val*(self.val[b]/self.val[a])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="keyword">if</span> (roota:=self.find(a))!=(rootb:=self.find(b)) <span class="keyword">or</span> (roota==<span class="literal">None</span> <span class="keyword">or</span> rootb==<span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.val[a]/self.val[b]</span><br></pre></td></tr></table></figure><hr><h3 id="常见问题：关系型连接">常见问题：关系型连接</h3><blockquote><p>这类题一般是某个小类下有着各种分量，通过分量间的关系进行处理</p></blockquote><h4 id="1️⃣-LC1202-交换字符串中的元素">1️⃣ LC1202 交换字符串中的元素</h4><p><strong>链接</strong>：<a href="https://leetcode.cn/problems/smallest-string-with-swaps">https://leetcode.cn/problems/smallest-string-with-swaps</a></p><p>给你一个字符串 s，以及该字符串中的一些「索引对」数组 pairs，其中 pairs[i] = [a, b] 表示字符串中的两个索引（编号从 0 开始）。</p><p>你可以 任意多次交换 在 pairs 中任意一对索引处的字符。</p><p>返回在经过若干次交换后，s 可以变成的按字典序最小的字符串。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：s = <span class="string">&quot;dcab&quot;</span>, pairs = [[<span class="number">0</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">2</span>]]</span><br><span class="line">输出：<span class="string">&quot;bacd&quot;</span></span><br><span class="line">解释： </span><br><span class="line">交换 s[<span class="number">0</span>] 和 s[<span class="number">3</span>], s = <span class="string">&quot;bcad&quot;</span></span><br><span class="line">交换 s[<span class="number">1</span>] 和 s[<span class="number">2</span>], s = <span class="string">&quot;bacd&quot;</span></span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>我们不难发现，索引对自身存在联通关系，且一旦其中的分量作为其他索引对的分量，那么这两个分量就是联通的。</p><p>于是，本题可转化为：</p><p>求解各个连通块所能实现的最小字典序。实现路径为：</p><ul><li>构建联通块，并获取连通块中的元素</li><li>对每个连通块元素进行排序</li><li>根据原始元素的位置，判断所属的连通块</li></ul><p><strong>实质</strong></p><p>抽象思想</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">smallestStringWithSwaps</span>(<span class="params">self, s: <span class="built_in">str</span>, pairs: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 这题找规律</span></span><br><span class="line">        <span class="comment"># 我们发现 任意索引对内部可以进行交换</span></span><br><span class="line">        <span class="comment"># 而且，任意两对索引中，如果出现了相同的值，那么这两对索引对应的元素可以两两互换</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 这也意味着 我们需要处理的也就是所有连通块 每个连通块都是最小，那么由局部推得全局最优解</span></span><br><span class="line">        <span class="comment"># 考虑连通量 自然而然想到并查集</span></span><br><span class="line"></span><br><span class="line">        u=uf(<span class="built_in">len</span>(s))</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> pairs:</span><br><span class="line">            u.union(i,j)</span><br><span class="line">        <span class="comment"># 对于每一个连通块，我们只需要对其进行排序就可以了</span></span><br><span class="line">        <span class="comment"># 当然，我们也要获取到连通块内的元素</span></span><br><span class="line">        mp=collections.defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            mp[u.find(i)].append(v) <span class="comment"># 构建连通块</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> vec <span class="keyword">in</span> mp.values():</span><br><span class="line">            vec.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">        ans=[]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">            <span class="comment"># 每一个占位都用连通块内最小的进行占位</span></span><br><span class="line">            x=u.find(i)</span><br><span class="line">            ans.append(mp[x][-<span class="number">1</span>])</span><br><span class="line">            mp[x].pop()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(ans)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">uf</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,n</span>):</span><br><span class="line">        self.pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">if</span> self.pa[x]!=x:</span><br><span class="line">            self.pa[x]=self.find(self.pa[x])</span><br><span class="line">        <span class="keyword">return</span> self.pa[x]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        <span class="keyword">if</span> (ra:=self.find(a))!=(rb:=self.find(b)):</span><br><span class="line">            self.pa[rb]=ra</span><br></pre></td></tr></table></figure><hr><h4 id="2️⃣-LC765-情侣牵手">2️⃣ LC765 情侣牵手</h4><p>链接：<a href="https://leetcode.cn/problems/couples-holding-hands">https://leetcode.cn/problems/couples-holding-hands</a></p><p>n 对情侣坐在连续排列的 2n 个座位上，想要牵到对方的手。</p><p>人和座位由一个整数数组 row 表示，其中 row[i] 是坐在第 i 个座位上的人的 ID。情侣们按顺序编号，第一对是 (0, 1)，第二对是 (2, 3)，以此类推，最后一对是 (2n-2, 2n-1)。</p><p>返回 最少交换座位的次数，以便每对情侣可以并肩坐在一起。 每次交换可选择任意两人，让他们站起来交换座位。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入: row = [<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>]</span><br><span class="line">输出: <span class="number">1</span></span><br><span class="line">解释: 只需要交换row[<span class="number">1</span>]和row[<span class="number">2</span>]的位置即可。</span><br><span class="line"></span><br><span class="line">输入: row = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">输出: <span class="number">0</span></span><br><span class="line">解释: 无需交换座位，所有的情侣都已经可以手牵手了。</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>情侣能够牵手的充要条件是：</p><p>位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>i</mi><mo>∈</mo><mtext>奇数</mtext></mrow><annotation encoding="application/x-tex">(i,i+1)i\in奇数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">奇数</span></span></span></span> 上的情侣同属于一个类，或者说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>o</mi><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>=</mo><mi>r</mi><mi>o</mi><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">row[i]//2=row[i+1]//2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">//2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">//2</span></span></span></span></p><p>而对于不能牵手的情侣而言，他们之间构成了一个<code>环</code>，即通过一对情侣中的两个节点关系，能够实现多对情侣的闭环。</p><p>不难发现，我们应该开<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">n//2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">//2</span></span></span></span>个空间，代表有这么多对情侣。接着，对于一个大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>(包含了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>对情侣)的闭环，我们最少只需要移动<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>次就行了。</p><p>至此，问题转变为：</p><p>求解<code>row</code>中闭环的数量。</p><p>有如下公式，设闭环数量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，则有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=(x_i-1)+(x_2-1)+\dots+(x_n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>为交换次数。</p><p>又：我们可以假设牵上手的情侣也是一个环，其交换次数为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=(1-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>于是，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><mi>n</mi><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">t=n-x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></p><p><strong>实质</strong></p><p>考察抽象思想，拓扑关系联通</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minSwapsCouples</span>(<span class="params">self, row</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type row: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 本题考察的是抽象能力</span></span><br><span class="line">        <span class="comment"># 什么情况情侣不能牵手？</span></span><br><span class="line">        <span class="comment"># 一对情侣 Aa 一定能牵手</span></span><br><span class="line">        <span class="comment"># 两队情侣 BA BA 不能牵手 而 AB BA 或者 BA AB是有一对可以牵手的</span></span><br><span class="line">        <span class="comment"># 三对情侣只有在情况 AB CB AC 或者 AC BC AB 之类的情况下才算不饿能牵手</span></span><br><span class="line">        <span class="comment"># 而此时我们认为，情侣间的顺序关系并不重要 AB CB AC 等价于 AC BC AB 等价于其他</span></span><br><span class="line">        <span class="comment"># 也就是说，这三对情侣满足一个环关系 Ab cB aC</span></span><br><span class="line">        <span class="comment"># 因为A要联通a 我们令Ab联通，能顺着b联通cB，顺着c联通aC</span></span><br><span class="line">        <span class="comment"># 他们三位之间形成了环(通过情侣关系)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 那么对于一个大小为n的错误环，只需要换位n-1次即可</span></span><br><span class="line">        <span class="comment"># 考虑连通关系，可以选用并查集</span></span><br><span class="line">        n=<span class="built_in">len</span>(row)</span><br><span class="line">        u=UnionFind(n//<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i&lt;=n-<span class="number">2</span>:</span><br><span class="line">            u.union(row[i]//<span class="number">2</span>,row[i+<span class="number">1</span>]//<span class="number">2</span>)</span><br><span class="line">            i+=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> n//<span class="number">2</span>-u.getCount()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnionFind</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,n</span>):</span><br><span class="line">        self.pa=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.count=n</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self,x</span>):</span><br><span class="line">        <span class="keyword">if</span> self.pa[x]!=x:</span><br><span class="line">            self.pa[x]=self.find(self.pa[x])</span><br><span class="line">        <span class="keyword">return</span> self.pa[x]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">union</span>(<span class="params">self,a,b</span>):</span><br><span class="line">        ra=self.find(a)</span><br><span class="line">        rb=self.find(b)</span><br><span class="line">        <span class="keyword">if</span> ra!=rb:</span><br><span class="line">        <span class="comment"># if (ra:=self.find(a))!=(rb:=self.find(b)):</span></span><br><span class="line">            self.pa[rb]=ra</span><br><span class="line">            self.count-=<span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCount</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.count</span><br></pre></td></tr></table></figure><hr><h3 id="进阶：倒序并查集🏷️">进阶：倒序并查集🏷️</h3><blockquote><p>此类问题通常用于优化删除问题，既然中间变量可以从删除操作中得到，那也能从构建操作中得到。组件的构成跟并查集的连通本质上是一致的。</p></blockquote><h4 id="1️⃣-LC2421-好路径的数量">1️⃣ LC2421 好路径的数量</h4><p><strong>链接</strong>：<a href="https://leetcode.cn/problems/number-of-good-paths">https://leetcode.cn/problems/number-of-good-paths</a></p><p>给你一棵 n 个节点的树（连通无向无环的图），节点编号从 0 到 n - 1 且恰好有 n - 1 条边。</p><p>给你一个长度为 n 下标从 0 开始的整数数组 vals ，分别表示每个节点的值。同时给你一个二维整数数组 edges ，其中 edges[i] = [ai, bi] 表示节点 ai 和 bi 之间有一条 无向 边。</p><p>一条 好路径 需要满足以下条件：</p><p>开始节点和结束节点的值 相同 。<br>开始节点和结束节点中间的所有节点值都 小于等于 开始节点的值（也就是说开始节点的值应该是路径上所有节点的最大值）。<br>请你返回不同好路径的数目。</p><p>注意，一条路径和它反向的路径算作 同一 路径。比方说， 0 -&gt; 1 与 1 -&gt; 0 视为同一条路径。单个节点也视为一条合法路径。</p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：vals = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>], edges = [[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">4</span>]]</span><br><span class="line">输出：<span class="number">6</span></span><br><span class="line">解释：总共有 <span class="number">5</span> 条单个节点的好路径。</span><br><span class="line">还有 <span class="number">1</span> 条好路径：<span class="number">1</span> -&gt; <span class="number">0</span> -&gt; <span class="number">2</span> -&gt; <span class="number">4</span> 。</span><br><span class="line">（反方向的路径 <span class="number">4</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">1</span> 视为跟 <span class="number">1</span> -&gt; <span class="number">0</span> -&gt; <span class="number">2</span> -&gt; <span class="number">4</span> 一样的路径）</span><br><span class="line">注意 <span class="number">0</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> 不是一条好路径，因为 vals[<span class="number">2</span>] &gt; vals[<span class="number">0</span>] 。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><p>这题暴力思路：先计算所有最大值节点的路径，然后删除他们，再进行递归往复。</p><p>但是，这样子的时间复杂度也太大了吧！最坏的情况下达到了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，不如反阿克曼常数的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span>有意思。</p><p><code>删除操作</code>可以转变思路为<code>添加</code>! 这也就是倒序并查集的由来！</p><p>一个结构，删除是添加的反过程，而我们追寻中间信息，那么删除和添加都将会达到这个中间状态！添加，就是一个一个小组件聚集形成一个物体，那就是并查集！</p><p>这题的话，我们考虑从最小值节点开始添加，当然，要先生成邻接图结构才行。</p><p>添加连通块时，如果当前节点遇到了相同的节点，那么将新增<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>x</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">C^2_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0611em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>条路径，所以，我们有必要记录连通块中的最大值，以及最大值的数量。</p><p>事实上，并查集本就是记录最大表征而生的，那数量如何去记录呢？</p><p>我们开辟一个空间<code>size</code>，<code>size[x]</code>表示连通块中大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">val[x]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span>的节点的数量。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">val[x]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span></span>也就是个映射。</p><p><strong>实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfGoodPaths</span>(<span class="params">self, vals: <span class="type">List</span>[<span class="built_in">int</span>], edges: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        </span><br><span class="line">        n=<span class="built_in">len</span>(vals)</span><br><span class="line">        <span class="comment"># 如何创建并查集？</span></span><br><span class="line">        <span class="comment"># 首先有n个节点</span></span><br><span class="line">        pa=<span class="built_in">list</span>(<span class="built_in">range</span>(n))</span><br><span class="line">        <span class="comment"># 然后构建图结构</span></span><br><span class="line">        <span class="comment"># 无向图需要记录两边</span></span><br><span class="line">        g=[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="keyword">for</span> x,y <span class="keyword">in</span> edges:</span><br><span class="line">            g[x].append(y)</span><br><span class="line">            g[y].append(x)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 我们利用生成代替删除</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># size[x] 表示 x 所处的连通块中 ，值等于 vals[x] 的节点个数</span></span><br><span class="line">        <span class="comment"># size用来处理同级别的加减</span></span><br><span class="line">        size=[<span class="number">1</span>]*n</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> pa[x]!=x:</span><br><span class="line">                pa[x]=find(pa[x])</span><br><span class="line">            <span class="keyword">return</span> pa[x]</span><br><span class="line">        ans=n <span class="comment"># 初始路径(自己)</span></span><br><span class="line">        <span class="comment"># 然后是等长路径C2x=(x*(x-1)/2)</span></span><br><span class="line">        <span class="keyword">for</span> vx,x <span class="keyword">in</span> <span class="built_in">sorted</span>(<span class="built_in">zip</span>(vals,<span class="built_in">range</span>(n))):</span><br><span class="line">            <span class="comment"># 从小到大生成</span></span><br><span class="line">            fx=find(x) <span class="comment"># 第几个节点的父节点</span></span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> g[x]:</span><br><span class="line">                <span class="comment"># 这节点所能到达的所有节点</span></span><br><span class="line">                y=find(y)</span><br><span class="line">                <span class="comment"># 开始遍历邻接边</span></span><br><span class="line">                <span class="keyword">if</span> y==fx <span class="keyword">or</span> vals[y]&gt;vx:<span class="comment"># 大的后面加进去c</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> vals[y]==vx:</span><br><span class="line">                    ans+=size[fx]*size[y]</span><br><span class="line">                    size[fx]+=size[y]</span><br><span class="line">                pa[y]=fx</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><hr><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">【算法与数据结构】并查集</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>基于Cartopy绘制海洋表面温度动态变化图</title>
    <link href="http://example.com/2022/09/25/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E7%BB%98%E5%88%B6%E6%B5%B7%E6%B4%8B%E8%A1%A8%E9%9D%A2%E6%B8%A9%E5%BA%A6%E5%8A%A8%E5%9B%BE/"/>
    <id>http://example.com/2022/09/25/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E7%BB%98%E5%88%B6%E6%B5%B7%E6%B4%8B%E8%A1%A8%E9%9D%A2%E6%B8%A9%E5%BA%A6%E5%8A%A8%E5%9B%BE/</id>
    <published>2022-09-25T14:43:44.471Z</published>
    <updated>2022-09-25T14:44:40.117Z</updated>
    
    <content type="html"><![CDATA[<h1>基于Cartopy绘制海洋表面温度动态变化图</h1><hr><h2 id="一、实验准备">一、实验准备</h2><p>啊我们这次需要用的库有：</p><ul><li>cartopoy</li><li>xarray</li><li>imageio</li><li>numpy</li><li>pandas</li></ul><p>如果发现cartopy安装不了，可以先在<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#cartopy">网站</a>下载依赖库。</p><p>分别是：</p><ul><li>pyproj</li><li>Pillow</li><li>Shapely</li><li>Cartopy</li></ul><p>我们下载好对应Python版本和OS类型的<code>.whl</code>文件后，在<code>anaconda prompt</code>中输入以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install path\your_file.whl</span><br></pre></td></tr></table></figure><p>即可。</p><hr><p>关于海洋遥感数据，我们可以在https://podaac.jpl.nasa.gov/上下载数据，当然，NASA的这个网站可能需要科学上网。</p><hr><h2 id="二、数据处理">二、数据处理</h2><p>我们下载下来的文件是<code>.nc</code>文件，这个类型的文件可以用<code>xarray</code>或者<code>netCDF4</code>这两个库进行读取哦。下面我们展示<code>xarray</code>的读取方式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入库</span></span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br></pre></td></tr></table></figure><p>值得一提的是，<code>xarray</code>有可能跟<code>pytorch</code>或者<code>tensoflow</code>产生冲突，尤其是<code>torchtext</code>库。这种情况下，可能需要对现有的依赖库进行更新。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line">data = xr.open_dataset(d)</span><br></pre></td></tr></table></figure><img src="/2022/09/25/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E7%BB%98%E5%88%B6%E6%B5%B7%E6%B4%8B%E8%A1%A8%E9%9D%A2%E6%B8%A9%E5%BA%A6%E5%8A%A8%E5%9B%BE/image-20220925212334604.png" alt="image-20220925212334604" style="zoom:50%;"><p>此时呢，数据就被我们读取进来啦。我们这次需要用到的值为SST(sea surface temperature)，因此，我们需要获取到这个维度的数据。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sst = data.variables[<span class="string">&quot;sea_surface_temperature&quot;</span>][:] <span class="comment"># 通过variables属性 选择对应维度的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取经纬度数据</span></span><br><span class="line">lon = data.variables[<span class="string">&#x27;lon&#x27;</span>][:]</span><br><span class="line">lat = data.variables[<span class="string">&#x27;lat&#x27;</span>][:]</span><br></pre></td></tr></table></figure><p>这些数据符不符合规范，是一个值得注意的问题。我们发现，该文件的SST数据缺失了不少值，需要做一个清洗。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取到DataFrame方便处理</span></span><br><span class="line">sst = np.array(sst)</span><br><span class="line">d = pd.DataFrame(sst[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(d.describe())</span><br><span class="line"><span class="comment"># 用平均值填充</span></span><br><span class="line">d.fillna(d.mean(), inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="三、绘制图像">三、绘制图像</h2><p>好啦我们现在要用到<code>cartopy</code>进行绘图啦~</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 之前拿到的数据是xarray类型的，我们需要转换到ndarry类型</span></span><br><span class="line">lon,lat=np.array(lon),np.array(lat)</span><br><span class="line">sst=d.values</span><br></pre></td></tr></table></figure><p>设置我们地图的投影</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">   ax = plt.axes(projection=ccrs.PlateCarree())  <span class="comment"># 设置投影方式</span></span><br><span class="line">   extend=[-<span class="number">30</span>,-<span class="number">16</span>, -<span class="number">60</span>, -<span class="number">46</span>] <span class="comment"># 设置显示范围</span></span><br><span class="line">   </span><br><span class="line">   ax.set_extent(extend)  <span class="comment"># 设置经纬度范围</span></span><br><span class="line">   ax.stock_img()<span class="comment">#添加地球背景</span></span><br><span class="line">   </span><br><span class="line">   ax.add_feature(cfe.OCEAN) <span class="comment"># 添加要素</span></span><br><span class="line">   ax.add_feature(cfe.LAND,edgecolor=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">   ax.add_feature(cfe.LAKES,edgecolor=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">   ax.add_feature(cfe.RIVERS)</span><br><span class="line">   rivers_10m = cfe.NaturalEarthFeature(<span class="string">&#x27;physical&#x27;</span>, <span class="string">&#x27;rivers_lake_centerlines&#x27;</span>, <span class="string">&#x27;10m&#x27;</span>)</span><br><span class="line">   ax.add_feature(rivers_10m,facecolor=<span class="string">&quot;None&quot;</span>,edgecolor=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">   </span><br><span class="line">    ax.gridlines(crs=ccrs.PlateCarree(), draw_labels=<span class="literal">True</span>, linewidth=<span class="number">0.2</span>, color=<span class="string">&#x27;k&#x27;</span>, alpha=<span class="number">0.5</span>, linestyle=<span class="string">&#x27;--&#x27;</span>) <span class="comment"># 添加经纬网</span></span><br><span class="line">    </span><br><span class="line">   ax.coastlines() <span class="comment"># 设置海岸线</span></span><br><span class="line">   ax.set_title(<span class="string">&quot;我也不知是啥数据&quot;</span>)</span><br><span class="line"></span><br><span class="line">levels = np.arange(sst.<span class="built_in">min</span>(), sst.<span class="built_in">max</span>()+ <span class="number">1</span>, <span class="number">1</span>) <span class="comment"># 设置颜色分辨度</span></span><br><span class="line">cp=ax.contourf(lon,lat,sst,cmap=<span class="string">&#x27;Spectral_r&#x27;</span>,levels=levels) <span class="comment"># 绘制二维格网</span></span><br><span class="line">   plt.colorbar(cp)<span class="comment"># 设置色带</span></span><br><span class="line">   plt.show()</span><br><span class="line">   </span><br></pre></td></tr></table></figure><img src="/2022/09/25/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E7%BB%98%E5%88%B6%E6%B5%B7%E6%B4%8B%E8%A1%A8%E9%9D%A2%E6%B8%A9%E5%BA%A6%E5%8A%A8%E5%9B%BE/image-20220925214125007.png" alt="image-20220925214125007" style="zoom:50%;"><hr><h2 id="四、动图制作">四、动图制作</h2><p>这里我们就需要使用到<code>imageio</code>模块了。</p><p>这里简单说一下如何通过<code>imageio</code>制作<code>gif</code>动图。</p><p>首先，我们需要通过<code>imageio.imread()</code>API读取图片数据，将其存放在容器列表中。再通过<code>imageio.mimsave()</code>进行制作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个创建gif的方法</span></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">create_gif</span>(<span class="params">filelist,name,dur=<span class="number">1.0</span></span>)-&gt;<span class="literal">None</span>:</span><br><span class="line">    IMG=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> filelist:</span><br><span class="line">        IMG.append(imageio.imread(i))</span><br><span class="line">    <span class="keyword">return</span> imageio.mimsave(name,IMG,<span class="string">&quot;GIF&quot;</span>,duration=dur)</span><br></pre></td></tr></table></figure><p>接着获取<code>plt</code>的图像资源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig((val:=path+<span class="string">&quot;%s.png&quot;</span>%time),dpi=<span class="number">200</span>)</span><br><span class="line">lis.append(val)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 释放资源</span></span><br><span class="line">plt.close()</span><br></pre></td></tr></table></figure><p>最终结果如下图啦，数据是随便拉的，所以对不太上</p><img src="/2022/09/25/%E3%80%90%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F%E3%80%91%E7%BB%98%E5%88%B6%E6%B5%B7%E6%B4%8B%E8%A1%A8%E9%9D%A2%E6%B8%A9%E5%BA%A6%E5%8A%A8%E5%9B%BE/New.gif" alt="New" style="zoom:50%;"><hr><h2 id="完整代码">完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> cartopy.feature <span class="keyword">as</span> cfe</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建gif图像</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_gif</span>(<span class="params">filelist,name,dur=<span class="number">1.0</span></span>)-&gt;<span class="literal">None</span>:</span><br><span class="line">    IMG=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> filelist:</span><br><span class="line">        IMG.append(imageio.imread(i))</span><br><span class="line">    <span class="keyword">return</span> imageio.mimsave(name,IMG,<span class="string">&quot;GIF&quot;</span>,duration=dur)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">working</span>(<span class="params">d,path,time,lis</span>)-&gt;<span class="literal">None</span>:</span><br><span class="line">    <span class="comment"># 数据清洗</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param data: 数据</span></span><br><span class="line"><span class="string">    :param path: 保存路径</span></span><br><span class="line"><span class="string">    :param time: 名字吧</span></span><br><span class="line"><span class="string">    :param lis: GIF文件夹</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    data = xr.open_dataset(d)</span><br><span class="line">    sst = data.variables[<span class="string">&quot;sea_surface_temperature&quot;</span>][:]</span><br><span class="line"></span><br><span class="line">    lon = data.variables[<span class="string">&#x27;lon&#x27;</span>][:]</span><br><span class="line">    lat = data.variables[<span class="string">&#x27;lat&#x27;</span>][:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    sst = np.array(sst)</span><br><span class="line">    d = pd.DataFrame(sst[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># print(d.describe())</span></span><br><span class="line">    d.fillna(d.mean(), inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    lon,lat=np.array(lon),np.array(lat)</span><br><span class="line">    sst=d.values</span><br><span class="line"></span><br><span class="line">    ax = plt.axes(projection=ccrs.PlateCarree())  <span class="comment"># 设置投影方式</span></span><br><span class="line">    extend=[-<span class="number">30</span>,-<span class="number">16</span>, -<span class="number">60</span>, -<span class="number">46</span>]</span><br><span class="line">    ax.set_extent(extend)  <span class="comment"># 设置经纬度范围</span></span><br><span class="line">    ax.stock_img()<span class="comment">#添加地球背景</span></span><br><span class="line">    ax.add_feature(cfe.OCEAN)</span><br><span class="line">    ax.add_feature(cfe.LAND,edgecolor=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">    ax.add_feature(cfe.LAKES,edgecolor=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">    ax.add_feature(cfe.RIVERS)</span><br><span class="line"></span><br><span class="line">    rivers_10m = cfe.NaturalEarthFeature(<span class="string">&#x27;physical&#x27;</span>, <span class="string">&#x27;rivers_lake_centerlines&#x27;</span>, <span class="string">&#x27;10m&#x27;</span>)</span><br><span class="line">    ax.add_feature(rivers_10m,facecolor=<span class="string">&quot;None&quot;</span>,edgecolor=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    ax.gridlines(crs=ccrs.PlateCarree(), draw_labels=<span class="literal">True</span>, linewidth=<span class="number">0.2</span>, color=<span class="string">&#x27;k&#x27;</span>, alpha=<span class="number">0.5</span>, linestyle=<span class="string">&#x27;--&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ax.coastlines()</span><br><span class="line">    ax.set_title(<span class="string">&quot;我也不知是啥数据&quot;</span>)</span><br><span class="line"></span><br><span class="line">    levels = np.arange(sst.<span class="built_in">min</span>(), sst.<span class="built_in">max</span>()+ <span class="number">1</span>, <span class="number">1</span>) <span class="comment"># 设置绘画精度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    cp=ax.contourf(lon,lat,sst,cmap=<span class="string">&#x27;Spectral_r&#x27;</span>,levels=levels)</span><br><span class="line">    plt.colorbar(cp)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ax.set_xticks(np.arange(extend[0],extend[1],5))</span></span><br><span class="line">    <span class="comment"># ax.set_yticks(np.arange(extend[2],extend[3],5))</span></span><br><span class="line"></span><br><span class="line">    plt.savefig((val:=path+<span class="string">&quot;%s.png&quot;</span>%time),dpi=<span class="number">200</span>)</span><br><span class="line">    lis.append(val)</span><br><span class="line">    <span class="comment"># 释放资源喽</span></span><br><span class="line"></span><br><span class="line">    plt.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;Microsoft YaHei&#x27;</span>]</span><br><span class="line">    <span class="comment"># plt.rcParams[&#x27;axes.unicode_minus&#x27;] = False  # Solve the minus sign problems   # 现在好像不设置也没有问题了？</span></span><br><span class="line"></span><br><span class="line">    path=<span class="string">r&quot;C:\&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    filelist=os.listdir(path)</span></span><br><span class="line"><span class="string">    Time=[]</span></span><br><span class="line"><span class="string">    filedata=[]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for i,j in enumerate(filelist):</span></span><br><span class="line"><span class="string">        if j.endswith(&quot;</span>.nc<span class="string">&quot;):</span></span><br><span class="line"><span class="string">            Time.append(i)</span></span><br><span class="line"><span class="string">            filedata.append(j)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    IMG=[]</span></span><br><span class="line"><span class="string">    savePath=path+&quot;</span>SavePath\\<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if not os.path.exists(savePath):</span></span><br><span class="line"><span class="string">        os.makedirs(savePath)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for i,j in enumerate(filedata):</span></span><br><span class="line"><span class="string">        working(path+j,savePath,Time[i],IMG)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    create_gif(IMG,savePath+&quot;</span>New.gi<span class="string">f&quot;,1.0)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">海洋遥感</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="海洋遥感" scheme="http://example.com/tags/%E6%B5%B7%E6%B4%8B%E9%81%A5%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>随想录</title>
    <link href="http://example.com/2022/09/25/%E3%80%90%E9%9A%8F%E6%83%B3%E5%BD%95%E3%80%91%E9%9A%8F%E6%83%B3%E5%BD%95/"/>
    <id>http://example.com/2022/09/25/%E3%80%90%E9%9A%8F%E6%83%B3%E5%BD%95%E3%80%91%E9%9A%8F%E6%83%B3%E5%BD%95/</id>
    <published>2022-09-24T18:13:10.489Z</published>
    <updated>2022-09-24T18:26:19.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记9月25日夜游">记9月25日夜游</h2><p>监狱的大门早已抹上了自由的痕迹，如锁孔里弥散跃出的幽光般令人神往。</p><p>夜半了，点灯人提着昏黄的烛火，驱赶着只敢在无人空处哀嚎宣泄的野狗。幽夜的舞台只余下此起彼伏的鸣虫。</p><p>我是谁，我为何在此，我又要前往何方？残垣断壁下，尘土随风散去，寄往何处？</p><p>星火点点，清明之梦，你我皆不语。</p><img src="/2022/09/25/%E3%80%90%E9%9A%8F%E6%83%B3%E5%BD%95%E3%80%91%E9%9A%8F%E6%83%B3%E5%BD%95/image-20220925022605938.png" alt="image-20220925022605938" style="zoom:100%;"><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">随想录</summary>
    
    
    
    <category term="梦时风月" scheme="http://example.com/categories/%E6%A2%A6%E6%97%B6%E9%A3%8E%E6%9C%88/"/>
    
    
    <category term="我" scheme="http://example.com/tags/%E6%88%91/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib教程</title>
    <link href="http://example.com/2022/09/15/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91matplotlib%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2022/09/15/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91matplotlib%E6%95%99%E7%A8%8B/</id>
    <published>2022-09-15T02:44:39.744Z</published>
    <updated>2022-10-15T18:54:37.509Z</updated>
    
    <content type="html"><![CDATA[<h1>Matplotlib教程</h1><hr><h2 id="一、结构介绍">一、结构介绍</h2><h3 id="1️⃣容器层">1️⃣容器层</h3><p>容器层主要由<code>Canvas, Figure, Axes</code>组成。</p><p><code>Canvas</code>主要是在最底层的系统层，可以放置画布的工具</p><p><code>Figure</code>是<code>Canvas</code>上的第一层，充当着画布的角色</p><p><code>Axes</code>是第二层，相当于绘图区的角色</p><ul><li>Figure 整个图形</li><li>Axes 绘图区域</li><li>Axis 坐标轴</li></ul><blockquote><p>一个图像可以包含多个绘图区(Axes)，但一个Axes只能属于一个figure.</p><p>一个绘图区(坐标系)可以包含多个坐标轴</p></blockquote><img src="/2022/09/15/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91matplotlib%E6%95%99%E7%A8%8B/image-20220915110310589.png" alt="image-20220915110310589" style="zoom:50%;"><h3 id="2️⃣-辅助显示层">2️⃣ 辅助显示层</h3><p>除却图像外的内容，例如外观、边框线、坐标轴、坐标轴名称等等</p><h3 id="3️⃣-图像层">3️⃣ 图像层</h3><p>图像层指<code>Axes</code>内通过<code>plot、scatter、bar、histogram、pie</code>等函数绘制出的图像</p><img src="/2022/09/15/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91matplotlib%E6%95%99%E7%A8%8B/image-20220915110623165.png" alt="image-20220915110623165" style="zoom:50%;"><hr><h2 id="二、折线图与基本绘图功能">二、折线图与基本绘图功能</h2><p>说起来，<code>matplotlib.pyplot</code>这玩意作用于当前图形(Figure)的当前坐标系(Axes)。</p><p><strong>基本功能</strong></p><p>1️⃣ 设置画布属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(),dpi=)</span><br></pre></td></tr></table></figure><p>2️⃣ 保存画布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig(path)</span><br></pre></td></tr></table></figure><p>3️⃣ 显示图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.show() <span class="comment"># 会释放资源，所以一定是在最后 </span></span><br></pre></td></tr></table></figure><p>4️⃣ 添加刻度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.xticks(val,<span class="built_in">map</span>)</span><br><span class="line">plt.yticks(val,<span class="built_in">map</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># like</span></span><br><span class="line">plt.xticks(x[::<span class="number">5</span>],x_ticks_label[::<span class="number">5</span>])</span><br><span class="line">plt.yticks(y_ticks[::<span class="number">5</span>])</span><br></pre></td></tr></table></figure><p>5️⃣ 设置字体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置中文字体</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]</span><br></pre></td></tr></table></figure><p>6️⃣ 添加网络</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.grid(<span class="literal">True</span>,linestyle=<span class="string">&quot;--&quot;</span>,alpha=<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure><p>7️⃣ 添加描述信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.xlabel(<span class="string">&quot;时间&quot;</span>) </span><br><span class="line">plt.ylabel(<span class="string">&quot;温度&quot;</span>) </span><br><span class="line">plt.title(<span class="string">&quot;中午11点0分到12点之间的温度变化图示&quot;</span>)</span><br></pre></td></tr></table></figure><p>8️⃣ 多次<code>plot</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制折线图 </span></span><br><span class="line">plt.plot(x, y_shanghai, label=<span class="string">&quot;上海&quot;</span>) </span><br><span class="line"><span class="comment"># 使⽤多次plot可以画多个折线 </span></span><br><span class="line">plt.plot(x, y_beijing, color=<span class="string">&#x27;r&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>, label=<span class="string">&quot;北京&quot;</span>) </span><br></pre></td></tr></table></figure><p>9️⃣ 添加图例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示图例 </span></span><br><span class="line">plt.legend(loc=<span class="string">&quot;best&quot;</span>)</span><br></pre></td></tr></table></figure><p>关于图例：</p><table><thead><tr><th style="text-align:center">Location String</th><th style="text-align:center">Location Code</th></tr></thead><tbody><tr><td style="text-align:center">‘best’</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">‘upper right’</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">‘upper left’</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">‘lower left’</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">‘lower right’</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">‘right’</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">‘center left’</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">‘center right’</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">‘lower center’</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">‘upper center’</td><td style="text-align:center">9</td></tr><tr><td style="text-align:center">‘center’</td><td style="text-align:center">10</td></tr></tbody></table><p>关于风格：</p><table><thead><tr><th style="text-align:center">颜色字符</th><th style="text-align:center">风格字符</th></tr></thead><tbody><tr><td style="text-align:center">r 红色</td><td style="text-align:center">- 实线</td></tr><tr><td style="text-align:center">g 绿色</td><td style="text-align:center">– 虚线</td></tr><tr><td style="text-align:center">b 蓝色</td><td style="text-align:center">-. 点划线</td></tr><tr><td style="text-align:center">w 白色</td><td style="text-align:center">：点虚线</td></tr><tr><td style="text-align:center">c 青色</td><td style="text-align:center">‘’ 留空、空格</td></tr><tr><td style="text-align:center">m 洋红</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">y 黄色</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">k 黑色</td><td style="text-align:center"></td></tr></tbody></table><hr><p><strong>来看个栗子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> matplotlib.pylab <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line">x=<span class="built_in">range</span>(<span class="number">60</span>)</span><br><span class="line">y_shanghai=[random.uniform(<span class="number">15</span>,<span class="number">18</span>) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">y_beijing=[random.uniform(-<span class="number">5</span>,<span class="number">5</span>) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建画布</span></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">8</span>),dpi=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.plot(x,y_shanghai,label=<span class="string">&quot;上海&quot;</span>,color=<span class="string">&quot;r&quot;</span>,linestyle=<span class="string">&quot;--&quot;</span>)</span><br><span class="line">plt.plot(x,y_beijing,label=<span class="string">&quot;北京&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加刻度</span></span><br><span class="line">x_lables_ticks=[<span class="string">&quot;11点&#123;&#125;分&quot;</span>.<span class="built_in">format</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">y_lables_ticks=<span class="built_in">range</span>(-<span class="number">10</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(x[::<span class="number">5</span>],x_lables_ticks[::<span class="number">5</span>])</span><br><span class="line">plt.yticks(y_lables_ticks[::<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加网格</span></span><br><span class="line">plt.grid(linestyle=<span class="string">&quot;--&quot;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加描述信息</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;时间&quot;</span>, fontsize=<span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;温度&quot;</span>, fontsize=<span class="number">16</span>)</span><br><span class="line">plt.title(<span class="string">&quot;某城市11点-12点温度变化&quot;</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加图例</span></span><br><span class="line">plt.legend(loc=<span class="string">&quot;best&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/09/15/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91matplotlib%E6%95%99%E7%A8%8B/image-20220915113759811.png" alt="image-20220915113759811" style="zoom:50%;"><p>🔟 在一个Figure上绘制多个Axes</p><p>当当当当，是我们的<code>subplots</code>函数哦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">matplotlib.pyplot.subplots(nrows=<span class="number">1</span>,ncols=<span class="number">1</span>,**fig_kw)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">return : fig,axes</span></span><br><span class="line"><span class="string"># axes是一个数组，存储了nrows*ncols个axes的内存地址</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> matplotlib.pylab <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line">x=<span class="built_in">range</span>(<span class="number">60</span>)</span><br><span class="line">y_shanghai=[random.uniform(<span class="number">15</span>,<span class="number">18</span>) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">y_beijing=[random.uniform(-<span class="number">5</span>,<span class="number">5</span>) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建画布</span></span><br><span class="line">fig,axes=plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">20</span>,<span class="number">8</span>),dpi=<span class="number">80</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制</span></span><br><span class="line">axes[<span class="number">0</span>].plot(x,y_shanghai,label=<span class="string">&quot;上海&quot;</span>)</span><br><span class="line">axes[<span class="number">1</span>].plot(x,y_beijing,label=<span class="string">&quot;北京&quot;</span>,linestyle=<span class="string">&quot;--&quot;</span>,color=<span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加x,y轴刻度</span></span><br><span class="line">x_ticks_label = [<span class="string">&quot;11点&#123;&#125;分&quot;</span>.<span class="built_in">format</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">y_ticks = <span class="built_in">range</span>(<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意这里用set方法啦</span></span><br><span class="line">axes[<span class="number">0</span>].set_xticks(x[::<span class="number">5</span>])</span><br><span class="line">axes[<span class="number">0</span>].set_yticks(y_ticks[::<span class="number">5</span>])</span><br><span class="line">axes[<span class="number">0</span>].set_xticklabels(x_ticks_label[::<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">axes[<span class="number">1</span>].set_xticks(x[::<span class="number">5</span>])</span><br><span class="line">axes[<span class="number">1</span>].set_yticks(y_ticks[::<span class="number">5</span>])</span><br><span class="line">axes[<span class="number">1</span>].set_xticklabels(x_ticks_label[::<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加网格</span></span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].grid(<span class="literal">True</span>, linestyle=<span class="string">&quot;--&quot;</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line">axes[<span class="number">1</span>].grid(<span class="literal">True</span>, linestyle=<span class="string">&quot;--&quot;</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加描述和标题</span></span><br><span class="line">axes[<span class="number">0</span>].set_xlabel(<span class="string">&quot;时间&quot;</span>)</span><br><span class="line">axes[<span class="number">0</span>].set_ylabel(<span class="string">&quot;温度&quot;</span>)</span><br><span class="line">axes[<span class="number">0</span>].set_title(<span class="string">&quot;上海中午11点--12点温度变化图&quot;</span>, fontsize=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">1</span>].set_xlabel(<span class="string">&quot;时间&quot;</span>)</span><br><span class="line">axes[<span class="number">1</span>].set_ylabel(<span class="string">&quot;温度&quot;</span>)</span><br><span class="line">axes[<span class="number">1</span>].set_title(<span class="string">&quot;北京中午11点--12点温度变化图&quot;</span>, fontsize=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">axes[<span class="number">0</span>].legend(loc=<span class="number">0</span>)</span><br><span class="line">axes[<span class="number">1</span>].legend(loc=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/09/15/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91matplotlib%E6%95%99%E7%A8%8B/image-20220915123329995.png" alt="image-20220915123329995" style="zoom:50%;"><hr><h2 id="三、常见图形">三、常见图形</h2><p>1️⃣ <strong>折线图</strong></p><p>特点：能够显示数据的变化趋势，反应事物的变化情况。</p><p><code>API</code>：<code>plt.plot()</code></p><p>2️⃣ <strong>散点图</strong></p><p>特点： 探寻事物间是否存在某种关联或者总结坐标点的分布模式，可以用于显示离群点(anomaly)</p><p><code>API</code>：<code>plt.scatter(x,y)</code></p><p>3️⃣ <strong>柱状图</strong></p><p>特点：探寻事物的分布模式，比较数据之间的差异，统计+对比</p><p><code>API</code>：<code>plt.bar(x,width)</code></p><p>4️⃣ <strong>直方图</strong></p><p>特点：绘制连续性的数据展示一组或多组数据的分布状况</p><p><code>API</code>：<code>plt.pyplot.hist(x,bins=None)</code></p><p>4️⃣ <strong>饼图</strong></p><p>特点：直观展现了不同数据的占比情况</p><p><code>API</code>：<code>plt.pie(x,labels=,autopct=,colors)</code></p><p>5️⃣<strong>绘制线条</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> idx,m <span class="keyword">in</span> <span class="built_in">enumerate</span>(x):</span><br><span class="line">    <span class="comment"># 绘制长条</span></span><br><span class="line">    <span class="comment"># 从(m,y[idx])到(m,pre[idx])</span></span><br><span class="line">    plt.plot([m,m],[y[idx],pre[idx]],<span class="string">&#x27;g-&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><p>注意，刻度一定要<strong>先画完图</strong>，<strong>再添加刻度</strong>！！</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">三件套之绘图库</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Pandas教程</title>
    <link href="http://example.com/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/</id>
    <published>2022-09-13T08:12:17.190Z</published>
    <updated>2022-09-15T02:43:23.194Z</updated>
    
    <content type="html"><![CDATA[<h1>Pandas 教程</h1><img src="https://www.runoob.com/wp-content/uploads/2021/04/pandas.png" alt="img" style="zoom:25%;"><p><strong>Pandas 是 Python 语言的一个扩展程序库，用于数据分析。</strong></p><p>Pandas 是一个开放源码、BSD 许可的库，提供高性能、易于使用的数据结构和数据分析工具。</p><p>Pandas 名字衍生自术语 “panel data”（面板数据）和 “Python data analysis”（Python 数据分析）。</p><p>Pandas 一个强大的分析结构化数据的工具集，基础是 <a href="https://www.runoob.com/numpy/numpy-tutorial.html">Numpy</a>（提供高性能的矩阵运算）。</p><p>Pandas 可以从各种文件格式比如 CSV、JSON、SQL、Microsoft Excel 导入数据。</p><p>Pandas 可以对各种数据进行运算操作，比如归并、再成形、选择，还有数据清洗和数据加工特征。</p><p>Pandas 广泛应用在学术、金融、统计学等各个数据分析领域。</p><h2 id="Pandas-应用">Pandas 应用</h2><p>Pandas 的主要数据结构是 Series （一维数据）与 DataFrame（二维数据），这两种数据结构足以处理金融、统计、社会科学、工程等领域里的大多数典型用例。</p><h2 id="数据结构">数据结构</h2><p><strong>Series</strong> 是一种类似于一维数组的对象，它由一组数据（各种Numpy数据类型）以及一组与之相关的数据标签（即索引）组成。</p><p><strong>DataFrame</strong> 是一个表格型的数据结构，它含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型值）。DataFrame 既有行索引也有列索引，它可以被看做由 Series 组成的字典（共同用一个索引）。</p><h2 id="🥀-Why-Pandas">🥀 Why Pandas</h2><ul><li>便捷的数据处理能力</li><li>牛逼的文件读取能力</li><li>高度封装的Matplotlib，Numpy的画图和计算</li></ul><hr><h2 id="一、Series-【一维索引数组】">一、Series 【一维索引数组】</h2><p>Pandas Series类似于表格中的一个列(colume)类似于一维数组，可以保存任何数据类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.Series(data,index,dtype,name,copy)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>data</strong>：一组数据(ndarray 类型)。</li><li><strong>index</strong>：数据索引标签，如果不指定，默认从 0 开始。</li><li><strong>dtype</strong>：数据类型，默认会自己判断。</li><li><strong>name</strong>：设置名称。</li><li><strong>copy</strong>：拷贝数据，默认为 False。</li></ul><p><strong>栗子</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">a = [<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Wiki&quot;</span>]</span><br><span class="line"></span><br><span class="line">myvar = pd.Series(a, index = [<span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;z&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(myvar)</span><br></pre></td></tr></table></figure><img src="https://www.runoob.com/wp-content/uploads/2021/04/32B49FA4-ED68-446A-9EBF-C52FCB6D0CD6.jpg" style="zoom:25%;"><p>然后，我们就能通过索引值访问元素啦！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(myvar[<span class="string">&quot;y&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Runoob</span></span><br></pre></td></tr></table></figure><p>除却通过数据列表和索引列表外，我们也可以通过<code>字典</code>传入数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">sites = &#123;<span class="number">1</span>: <span class="string">&quot;Google&quot;</span>, <span class="number">2</span>: <span class="string">&quot;Runoob&quot;</span>, <span class="number">3</span>: <span class="string">&quot;Wiki&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">myvar = pd.Series(sites)</span><br></pre></td></tr></table></figure><p>而当我们只需要字典中的一部分时，可以选择性地传入索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sites = &#123;<span class="number">1</span>: <span class="string">&quot;Google&quot;</span>, <span class="number">2</span>: <span class="string">&quot;Runoob&quot;</span>, <span class="number">3</span>: <span class="string">&quot;Wiki&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">myvar = pd.Series(sites,index=[i <span class="keyword">for</span> i <span class="keyword">in</span> sites.keys() <span class="keyword">if</span> i&amp;<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>甚至是为<code>Series</code>设置名称参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">sites = &#123;<span class="number">1</span>: <span class="string">&quot;Google&quot;</span>, <span class="number">2</span>: <span class="string">&quot;Runoob&quot;</span>, <span class="number">3</span>: <span class="string">&quot;Wiki&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">myvar = pd.Series(sites, index = [<span class="number">1</span>, <span class="number">2</span>], name=<span class="string">&quot;RUNOOB-Series-TEST&quot;</span> )</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(myvar)</span><br></pre></td></tr></table></figure><hr><h2 id="二、DataFrame-【二维索引矩阵-表-】">二、DataFrame 【二维索引矩阵(表)】</h2><p>DataFrame 是一个表格型的数据结构，它含有一组有序的列，每列可以是<code>不同的值类型</code>（数值、字符串、布尔型值）。DataFrame 既有<code>行索引也有列索引</code>，它可以被看做由 Series 组成的字典（共同用一个索引）。</p><img src="https://www.runoob.com/wp-content/uploads/2021/04/pandas-DataStructure.png" style="zoom:50%;"><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/df-dp.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.DataFrame( data, index, columns, dtype, copy</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>data</strong>：一组数据(ndarray、series, map, lists, dict 等类型)。</li><li><strong>index</strong>：索引值，或者可以称为行标签。</li><li><strong>columns</strong>：列标签，默认为 RangeIndex (0, 1, 2, …, n) 。</li><li><strong>dtype</strong>：数据类型。</li><li><strong>copy</strong>：拷贝数据，默认为 False。</li></ul><blockquote><p><strong>DF的属性</strong></p></blockquote><ul><li><strong>shape</strong></li><li><strong>index</strong></li><li><strong>columns</strong></li><li><strong>values</strong><ul><li>返回一个<code>ndarray</code>对象</li></ul></li><li><strong>T</strong><ul><li>转置</li></ul></li><li><strong>head()</strong></li><li><strong>tail()</strong></li></ul><blockquote><p><strong>索引修改</strong></p></blockquote><p><strong>1️⃣ 增加行索引值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stock_code = [<span class="string">&quot;股票_&quot;</span> + <span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(stock_day_rise.shape[<span class="number">0</span>])] <span class="comment"># 必须整体全部修改 data.index = stock_code</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意必须全体修改！！！</span></span><br></pre></td></tr></table></figure><p><strong>2️⃣ 增加列索引值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pd.date_range(start=<span class="literal">None</span>,end=<span class="literal">None</span>, periods=<span class="literal">None</span>, freq=<span class="string">&#x27;B&#x27;</span>) </span><br><span class="line"><span class="comment"># 生成时间序列</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">start:开始时间 </span></span><br><span class="line"><span class="string">end:结束时间 </span></span><br><span class="line"><span class="string">periods:时间天数 </span></span><br><span class="line"><span class="string">freq:递进单位，默认1天</span></span><br><span class="line"><span class="string">&#x27;B&#x27;默认略过周末</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ⽣成⼀个时间的序列，略过周末⾮交易⽇ </span></span><br><span class="line">date = pd.date_range(<span class="string">&#x27;2017-01-01&#x27;</span>, periods=stock_day_rise.shape[<span class="number">1</span>], freq=<span class="string">&#x27;B&#x27;</span>)</span><br></pre></td></tr></table></figure><p>3️⃣ <strong>重设索引</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.reset_index() <span class="comment"># drop=False 不会删除原先的索引</span></span><br><span class="line">data.reset_index(drop=<span class="literal">True</span>) <span class="comment"># 删除原先的索引</span></span><br></pre></td></tr></table></figure><p>4️⃣ <strong>设置新索引</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set_index(keys,drop=<span class="literal">True</span>) </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">keys : 列索引名成或者列索引名称的列表</span></span><br><span class="line"><span class="string">drop : boolean, default True.当做新的索引，删除原来的列</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>Case</strong></p><p><strong>1️⃣create</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">&#x27;month&#x27;</span>: [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>], </span><br><span class="line">                   <span class="string">&#x27;year&#x27;</span>: [<span class="number">2012</span>, <span class="number">2014</span>, <span class="number">2013</span>, <span class="number">2014</span>], </span><br><span class="line">                   <span class="string">&#x27;sale&#x27;</span>:[<span class="number">55</span>, <span class="number">40</span>, <span class="number">84</span>, <span class="number">31</span>]&#125;) </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   month  year  sale</span></span><br><span class="line"><span class="string">0      1  2012    55</span></span><br><span class="line"><span class="string">1      4  2014    40</span></span><br><span class="line"><span class="string">2      7  2013    84</span></span><br><span class="line"><span class="string">3     10  2014    31</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2️⃣ <strong>set</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df.set_index(<span class="string">&#x27;month&#x27;</span>) </span><br><span class="line"><span class="comment"># or </span></span><br><span class="line"><span class="comment"># 设置多索引</span></span><br><span class="line">df.set_index([<span class="string">&#x27;year&#x27;</span>,<span class="string">&#x27;month&#x27;</span>])</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>创建DF</strong></p></blockquote><p><strong>1️⃣ 通过列表</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = [[<span class="string">&#x27;Google&#x27;</span>,<span class="number">10</span>],[<span class="string">&#x27;Runoob&#x27;</span>,<span class="number">12</span>],[<span class="string">&#x27;Wiki&#x27;</span>,<span class="number">13</span>]]</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data,columns=[<span class="string">&#x27;Site&#x27;</span>,<span class="string">&#x27;Age&#x27;</span>],index=[<span class="string">&quot;F&quot;</span>,<span class="string">&quot;S&quot;</span>,<span class="string">&quot;T&quot;</span>],dtype=<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     Site   Age</span></span><br><span class="line"><span class="string">F  Google  10.0</span></span><br><span class="line"><span class="string">S  Runoob  12.0</span></span><br><span class="line"><span class="string">T    Wiki  13.0</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>2️⃣ 通过ndarray</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&#x27;Site&#x27;</span>:[<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Wiki&#x27;</span>], <span class="string">&#x27;Age&#x27;</span>:[<span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>]&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (df)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     Site  Age</span></span><br><span class="line"><span class="string">0  Google   10</span></span><br><span class="line"><span class="string">1  Runoob   12</span></span><br><span class="line"><span class="string">2    Wiki   13</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>3️⃣ 通过dict</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = [&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;,&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">20</span>&#125;]</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (df)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   a   b     c</span></span><br><span class="line"><span class="string">0  1   2   NaN</span></span><br><span class="line"><span class="string">1  5  10  20.0</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>如果有数据缺失，那么将返回<code>NaN</code></p><hr><blockquote><p><strong>数据访问</strong></p></blockquote><p>可以通过<code>loc</code>返回指定行的数据！如果没有设置索引，那么默认的索引是[0,1,…,n]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">  <span class="string">&quot;calories&quot;</span>: [<span class="number">420</span>, <span class="number">380</span>, <span class="number">390</span>],</span><br><span class="line">  <span class="string">&quot;duration&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">45</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据载入到 DataFrame 对象</span></span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回第一行</span></span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># 返回第二行</span></span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">calories    420</span></span><br><span class="line"><span class="string">duration     50</span></span><br><span class="line"><span class="string">Name: 0, dtype: int64</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">calories    380</span></span><br><span class="line"><span class="string">duration     40</span></span><br><span class="line"><span class="string">Name: 1, dtype: int64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>指定索引后：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">  <span class="string">&quot;calories&quot;</span>: [<span class="number">420</span>, <span class="number">380</span>, <span class="number">390</span>],</span><br><span class="line">  <span class="string">&quot;duration&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">45</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data, index = [<span class="string">&quot;day1&quot;</span>, <span class="string">&quot;day2&quot;</span>, <span class="string">&quot;day3&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定索引</span></span><br><span class="line"><span class="built_in">print</span>(df.loc[[<span class="string">&quot;day2&quot;</span>,<span class="string">&quot;day1&quot;</span>]])</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">      calories  duration</span></span><br><span class="line"><span class="string">day2       380        40</span></span><br><span class="line"><span class="string">day1       420        50</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>而<code>iloc</code>属性，则是返回相对位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">  <span class="string">&quot;calories&quot;</span>: [<span class="number">420</span>, <span class="number">380</span>, <span class="number">390</span>],</span><br><span class="line">  <span class="string">&quot;duration&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">45</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data, index = [<span class="string">&quot;day1&quot;</span>, <span class="string">&quot;day2&quot;</span>, <span class="string">&quot;day3&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定索引</span></span><br><span class="line"><span class="built_in">print</span>(df.iloc[<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">50</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定索引</span></span><br><span class="line"><span class="built_in">print</span>(df.iloc[[<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>]])</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">      duration  calories</span></span><br><span class="line"><span class="string">day1        50       420</span></span><br><span class="line"><span class="string">day3        45       390</span></span><br><span class="line"><span class="string">day2        40       380</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>当然，还有<code>ix</code>组合索引。</p><hr><blockquote><p>排序</p></blockquote><p><strong>df.sort_values(by=,ascending=)</strong></p><p>按照指定列的值进行排序。<code>ascending=True</code>升序</p><p>同样，也可以对给定索引重新排序</p><p><strong>data.sort_index(ascending)</strong></p><ul><li>ps. Series也可以用同样的API</li></ul><hr><blockquote><p>运算</p></blockquote><p>1️⃣ <strong>算术运算</strong></p><p>四则运算</p><p><strong>eg.</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">&#x27;open&#x27;</span>].add(<span class="number">1</span>) <span class="comment"># 加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 减</span></span><br><span class="line">close=data[<span class="string">&#x27;close&#x27;</span>]</span><br><span class="line"><span class="built_in">open</span>=data[<span class="string">&#x27;open&#x27;</span>]</span><br><span class="line">dat[<span class="string">&#x27;m_price_change&#x27;</span>]=close.sub(<span class="built_in">open</span>) <span class="comment"># 添加一列的话，直接加就是了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘</span></span><br><span class="line">close.multiply(<span class="built_in">open</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 除</span></span><br><span class="line">close.div(<span class="built_in">open</span>)</span><br></pre></td></tr></table></figure><p>2️⃣ <strong>逻辑运算</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &gt; &lt; | &amp;</span></span><br><span class="line"><span class="comment"># eg.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># data[() &amp; ()] # 逻辑与</span></span><br><span class="line"><span class="comment"># data[() | ()] # 逻辑或</span></span><br><span class="line"></span><br><span class="line">data[(data[<span class="string">&#x27;close&#x27;</span>]&gt;<span class="number">2</span>) &amp; (data[<span class="string">&#x27;open&#x27;</span>]&lt;<span class="number">5</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># query(exper)</span></span><br><span class="line"><span class="comment"># eg.</span></span><br><span class="line">data.query(<span class="string">&quot;close &gt; 2 &amp; open &lt; 5&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># isin(val)</span></span><br><span class="line"><span class="comment"># eg.</span></span><br><span class="line">data[data[<span class="string">&#x27;turnover&#x27;</span>].isin([<span class="number">4.19</span>,<span class="number">2.39</span>])]</span><br></pre></td></tr></table></figure><p><strong>3️⃣ 统计运算</strong></p><p>大哥<code>describe()</code></p><table><thead><tr><th style="text-align:center"><strong>count</strong></th><th style="text-align:center"><strong>Number of non-NA observations</strong></th></tr></thead><tbody><tr><td style="text-align:center">sum</td><td style="text-align:center">求和</td></tr><tr><td style="text-align:center">mean</td><td style="text-align:center">平均</td></tr><tr><td style="text-align:center">median</td><td style="text-align:center">中位数</td></tr><tr><td style="text-align:center">mode</td><td style="text-align:center">众数</td></tr><tr><td style="text-align:center">min</td><td style="text-align:center">最小值</td></tr><tr><td style="text-align:center">max</td><td style="text-align:center">最大值</td></tr><tr><td style="text-align:center">abs</td><td style="text-align:center">绝对值</td></tr><tr><td style="text-align:center">prod</td><td style="text-align:center">累乘</td></tr><tr><td style="text-align:center">std</td><td style="text-align:center">标准差</td></tr><tr><td style="text-align:center">var</td><td style="text-align:center">无偏方差</td></tr><tr><td style="text-align:center">idxmax</td><td style="text-align:center">最大索引</td></tr><tr><td style="text-align:center">idxmin</td><td style="text-align:center">最小索引</td></tr></tbody></table><p>注意，坐标值默认为<code>columns</code>，如果想对行进行，需要指定<code>axis=1</code></p><p>5️⃣ <strong>累计统计函数</strong></p><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">作⽤</th></tr></thead><tbody><tr><td style="text-align:center">cumsum</td><td style="text-align:center">计算前<strong>1/2/3/…/n</strong>个数的和</td></tr><tr><td style="text-align:center">cummax</td><td style="text-align:center">计算前1/2/3/…/n个数的最⼤值</td></tr><tr><td style="text-align:center">cummin</td><td style="text-align:center">计算前1/2/3/…/n个数的最⼩值</td></tr><tr><td style="text-align:center">cumprod</td><td style="text-align:center">计算前1/2/3/…/n个数的积</td></tr></tbody></table><p><strong>栗子</strong> 累计求和</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对时间序列进行累计求和</span></span><br><span class="line"></span><br><span class="line">data=data.sort_index()</span><br><span class="line">stock_rise=data[<span class="string">&#x27;p_change&#x27;</span>]</span><br><span class="line">stock_rise.cumsum().plot()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220913230312684.png" alt="image-20220913230312684" style="zoom:50%;"><p>6️⃣ <strong>自定义运算</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply(func,axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong> 求最大值-最小值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[[<span class="string">&quot;open&quot;</span>,<span class="string">&quot;close&quot;</span>]].apply(<span class="keyword">lambda</span> x:x.<span class="built_in">max</span>()-x.<span class="built_in">min</span>(),axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><hr><p><strong>实例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">stock=np.random.uniform(-<span class="number">9.0</span>,<span class="number">15.0</span>,(<span class="number">100</span>,<span class="number">8</span>))</span><br><span class="line">data=pd.DataFrame(stock,index=pd.date_range(<span class="string">&quot;20220912&quot;</span>,periods=<span class="number">100</span>,freq=<span class="string">&quot;B&quot;</span>),columns=[<span class="string">&quot;num_&quot;</span>+<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">9</span>)])</span><br><span class="line"></span><br><span class="line">data</span><br></pre></td></tr></table></figure><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220913231746812.png" alt="image-20220913231746812" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">data=data.sort_index()</span><br><span class="line">val=data[<span class="string">&#x27;num_1&#x27;</span>]</span><br><span class="line">stock=val.cumsum().plot()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220913231805917.png" alt="image-20220913231805917" style="zoom:50%;"><blockquote><p>数据离散化</p></blockquote><p><strong>🎴 Why Discretization</strong></p><p>简化数据结构，减少连续的属性值个数。</p><p>Eg. 人类的身高本身应该是一个连续的区间，但我们可以将其分为<code>高、中、矮</code>几个阶段。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pd.qcut(data,q)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照q的个数自动进行分组</span></span><br><span class="line"></span><br><span class="line">pd.cut(data,bins)</span><br><span class="line"><span class="comment"># 指定区间分组</span></span><br><span class="line"></span><br><span class="line">bins = [-<span class="number">100</span>, -<span class="number">7</span>, -<span class="number">5</span>, -<span class="number">3</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>] </span><br><span class="line">p_counts = pd.cut(p_change, bins)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ⾃⾏分组 </span></span><br><span class="line">qcut = pd.qcut(p_change, <span class="number">10</span>) </span><br><span class="line"><span class="comment"># 计算分到每个组数据个数 </span></span><br><span class="line">qcut.value_counts()</span><br></pre></td></tr></table></figure><p><strong>🔥 One hot 编码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pd.get_dummies(data,prefix=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># prefix是分组名字</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>合并</p></blockquote><p><strong>🍨 Why concat</strong></p><p>方便查询(存储时离散更优)，方便关联规则挖掘与数据探查</p><p><strong>1️⃣ pd.concat</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([data1,data2],axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># axis=0 列索引</span></span><br><span class="line"><span class="comment"># axis=1 航索引</span></span><br></pre></td></tr></table></figure><p><strong>2️⃣ pd.merge</strong></p><p>merge这个API 提供了更多更复杂的方法，偏向于数据库的合并了</p><p>但是一般就是左右两个表，多表合并还是<code>concat</code>吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left,right,how=<span class="string">&quot;inner&quot;</span>,on=<span class="literal">None</span>,left_on=<span class="literal">None</span>,right_on=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># on 合并的列名</span></span><br><span class="line"><span class="comment"># left_on，right_on 列名在左右两表中的称呼</span></span><br><span class="line"><span class="comment"># how 合并方式 | inner 内连接 | outer 外连接 也就是left+right | left 左连接 以左表为基准，对于左表有的而右表缺失，会填充NaN | right 右连接</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote><p>交叉表与透视表</p></blockquote><p><strong>🎏 Why Cross and Pivot?</strong></p><p>探究不同数据可能存在的关系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.crosstab(val1,val2)</span><br></pre></td></tr></table></figure><p>简单来说，这个API就是将val1的数据作为<code>源</code>，将val2的数据作为<code>规则</code>进行分组，从而探究其中的关系。</p><p><strong>栗子</strong> 探究星期数据和涨幅数据之间的关系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 寻找星期⼏跟股票张得的关系 </span></span><br><span class="line"><span class="comment"># 1、先把对应的⽇期找到星期⼏ </span></span><br><span class="line">date = pd.to_datetime(data.index).weekday </span><br><span class="line">data[<span class="string">&#x27;week&#x27;</span>] = date </span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、假如把p_change按照⼤⼩去分个类0为界限 </span></span><br><span class="line">data[<span class="string">&#x27;posi_neg&#x27;</span>] = np.where(data[<span class="string">&#x27;p_change&#x27;</span>] &gt; <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>) </span><br><span class="line"><span class="comment"># 通过交叉表找寻两列数据的关系 </span></span><br><span class="line">count = pd.crosstab(data[<span class="string">&#x27;week&#x27;</span>], data[<span class="string">&#x27;posi_neg&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 探究之间的比例关系</span></span><br><span class="line"><span class="built_in">sum</span> = count.<span class="built_in">sum</span>(axis=<span class="number">1</span>).astype(np.float32)</span><br><span class="line"><span class="comment"># 进⾏相除操作，得出⽐例 </span></span><br><span class="line">pro = count.div(<span class="built_in">sum</span>, axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">pro.plot(kind=<span class="string">&#x27;bar&#x27;</span>, stacked=<span class="literal">True</span>) plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 而透视表，可以让上面的过程更加简单</span></span><br><span class="line">data.pivot_table([<span class="string">&#x27;posi_neg&#x27;</span>], index=<span class="string">&#x27;week&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><blockquote><p>分组和聚合</p></blockquote><p><strong>⛵ Why Grouping and Merge</strong></p><p>在不同的组间，数据往往会表现出差异性，这就是我们想看到的。</p><p><strong>1️⃣ The API of Grouping</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.groupby(key,as_index=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># key是分组的列数组，可以多个</span></span><br></pre></td></tr></table></figure><p><strong>2️⃣ The API of Merge</strong></p><p>前面说的统计函数就是哦！</p><p><strong>栗子</strong> 不同颜色不同类型的笔的价格数据</p><p><strong>Data</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">col =pd.DataFrame(&#123;<span class="string">&#x27;color&#x27;</span>: [<span class="string">&#x27;white&#x27;</span>,<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>], \</span><br><span class="line">                   <span class="string">&#x27;object&#x27;</span>: [<span class="string">&#x27;pen&#x27;</span>,<span class="string">&#x27;pencil&#x27;</span>,<span class="string">&#x27;pencil&#x27;</span>,<span class="string">&#x27;ashtray&#x27;</span>, <span class="string">&#x27;pen&#x27;</span>],\</span><br><span class="line">                   <span class="string">&#x27;price1&#x27;</span>:[<span class="number">5.56</span>,<span class="number">4.20</span>,<span class="number">1.30</span>,<span class="number">0.56</span>,<span class="number">2.75</span>],\</span><br><span class="line">                   <span class="string">&#x27;price2&#x27;</span>:[<span class="number">4.75</span>,<span class="number">4.12</span>,<span class="number">1.60</span>,<span class="number">0.75</span>,<span class="number">3.15</span>]&#125;)</span><br><span class="line"><span class="built_in">print</span>(col)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   color   object  price1  price2</span></span><br><span class="line"><span class="string">0  white      pen    5.56    4.75</span></span><br><span class="line"><span class="string">1    red   pencil    4.20    4.12</span></span><br><span class="line"><span class="string">2  green   pencil    1.30    1.60</span></span><br><span class="line"><span class="string">3    red  ashtray    0.56    0.75</span></span><br><span class="line"><span class="string">4  green      pen    2.75    3.15</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>Process</strong></p><p>对颜色分组，然后对价格求平均</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">col.groupby([<span class="string">&#x27;color&#x27;</span>])[<span class="string">&#x27;price1&#x27;</span>].mean()</span><br><span class="line">col[<span class="string">&#x27;price1&#x27;</span>].groupby(col[<span class="string">&#x27;color&#x27;</span>]).mean()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">color</span></span><br><span class="line"><span class="string">green    2.025</span></span><br><span class="line"><span class="string">red      2.380</span></span><br><span class="line"><span class="string">white    5.560</span></span><br><span class="line"><span class="string">Name: price1, dtype: float64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>保证索引位置不变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">col.groupby([<span class="string">&#x27;color&#x27;</span>], as_index=<span class="literal">False</span>)[<span class="string">&#x27;price1&#x27;</span>].mean()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   color  price1</span></span><br><span class="line"><span class="string">0  green   2.025</span></span><br><span class="line"><span class="string">1    red   2.380</span></span><br><span class="line"><span class="string">2  white   5.560</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>注意了，<code>GroupBy</code>对象总是要和聚合函数一起使用的，二者是不可割裂的。</p><p><strong>案例</strong>  星巴克零售店铺数据</p><ul><li><strong>target</strong>  了解美国的星巴克和中国的哪个多，以及中国每个省的星巴克数量</li></ul><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915100248664.png" alt="image-20220915100248664" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915100305946.png" alt="image-20220915100305946" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915100319027.png" alt="image-20220915100319027" style="zoom:50%;"><hr><h2 id="三、读取CSV文件">三、读取CSV文件</h2><p>CSV（Comma-Separated Values，逗号分隔值，有时也称为字符分隔值，因为分隔字符也可以不是逗号），其文件以纯文本形式存储表格数据（数字和文本）。</p><p>CSV 是一种通用的、相对简单的文件格式，被用户、商业和科学广泛应用。</p><hr><p><strong>1️⃣ 读取</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;nba.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p>这个<code>to_string()</code>用于返回DataFrame类型的数据啦，如果不加的话，默认返回<code>head(5)</code>啦</p><p>2️⃣ <strong>存储</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.to_csv(<span class="string">&quot;site.csv&quot;</span>)</span><br></pre></td></tr></table></figure><p>3️⃣ <strong>数据处理</strong></p><p><code>head()</code></p><ul><li>读取前面<code>n</code>行，如果不填参数,返回默认<code>5</code>行</li></ul><p><code>tail()</code></p><ul><li>读取尾部<code>n</code>行，如果不填，默认返回<code>5</code>行</li></ul><p><code>info()</code></p><ul><li>返回基本信息</li></ul><hr><h2 id="四、读取JSON">四、读取JSON</h2><p>JSON（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation，JavaScript 对象表示法），是存储和交换文本信息的语法，类似 XML。</p><p>JSON 比 XML 更小、更快，更易解析。</p><p>例如我们的<code>JSON</code>数据:<code>sites.json</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A001&quot;</span>,</span><br><span class="line">   <span class="string">&quot;name&quot;</span>: <span class="string">&quot;菜鸟教程&quot;</span>,</span><br><span class="line">   <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.runoob.com&quot;</span>,</span><br><span class="line">   <span class="string">&quot;likes&quot;</span>: <span class="number">61</span></span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A002&quot;</span>,</span><br><span class="line">   <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Google&quot;</span>,</span><br><span class="line">   <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.google.com&quot;</span>,</span><br><span class="line">   <span class="string">&quot;likes&quot;</span>: <span class="number">124</span></span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A003&quot;</span>,</span><br><span class="line">   <span class="string">&quot;name&quot;</span>: <span class="string">&quot;淘宝&quot;</span>,</span><br><span class="line">   <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.taobao.com&quot;</span>,</span><br><span class="line">   <span class="string">&quot;likes&quot;</span>: <span class="number">45</span></span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件</span></span><br><span class="line">df = pd.read_json(<span class="string">&#x27;sites.json&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接读取</span></span><br><span class="line">data =[</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A001&quot;</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;菜鸟教程&quot;</span>,</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.runoob.com&quot;</span>,</span><br><span class="line">      <span class="string">&quot;likes&quot;</span>: <span class="number">61</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A002&quot;</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Google&quot;</span>,</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.google.com&quot;</span>,</span><br><span class="line">      <span class="string">&quot;likes&quot;</span>: <span class="number">124</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A003&quot;</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;淘宝&quot;</span>,</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.taobao.com&quot;</span>,</span><br><span class="line">      <span class="string">&quot;likes&quot;</span>: <span class="number">45</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从url中读取</span></span><br><span class="line">URL = <span class="string">&#x27;https://static.runoob.com/download/sites.json&#x27;</span></span><br><span class="line">df = pd.read_json(URL)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     id    name             url  likes</span></span><br><span class="line"><span class="string">0  A001    菜鸟教程  www.runoob.com     61</span></span><br><span class="line"><span class="string">1  A002  Google  www.google.com    124</span></span><br><span class="line"><span class="string">2  A003      淘宝  www.taobao.com     45</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>对于内嵌的<code>JSON</code>数据，例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;school_name&quot;</span>: <span class="string">&quot;ABC primary school&quot;</span>,</span><br><span class="line">    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;Year 1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;students&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A001&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>,</span><br><span class="line">        <span class="string">&quot;math&quot;</span>: <span class="number">60</span>,</span><br><span class="line">        <span class="string">&quot;physics&quot;</span>: <span class="number">66</span>,</span><br><span class="line">        <span class="string">&quot;chemistry&quot;</span>: <span class="number">61</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A002&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;James&quot;</span>,</span><br><span class="line">        <span class="string">&quot;math&quot;</span>: <span class="number">89</span>,</span><br><span class="line">        <span class="string">&quot;physics&quot;</span>: <span class="number">76</span>,</span><br><span class="line">        <span class="string">&quot;chemistry&quot;</span>: <span class="number">51</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;A003&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Jenny&quot;</span>,</span><br><span class="line">        <span class="string">&quot;math&quot;</span>: <span class="number">79</span>,</span><br><span class="line">        <span class="string">&quot;physics&quot;</span>: <span class="number">90</span>,</span><br><span class="line">        <span class="string">&quot;chemistry&quot;</span>: <span class="number">78</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要进行展平：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Python JSON 模块载入数据</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;nested_list.json&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.loads(f.read())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展平数据</span></span><br><span class="line"><span class="comment"># students作为展开项</span></span><br><span class="line"></span><br><span class="line">df_nested_list = pd.json_normalize(data, record_path =[<span class="string">&#x27;students&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df_nested_list)</span><br></pre></td></tr></table></figure><hr><h2 id="五、数据清洗">五、数据清洗</h2><p><strong>1️⃣ 删除空字段</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame.dropna(axis=<span class="number">0</span>, how=<span class="string">&#x27;any&#x27;</span>, thresh=<span class="literal">None</span>, subset=<span class="literal">None</span>, inplace=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><ul><li>axis：默认为 <strong>0</strong>，表示逢空值剔除整行，如果设置参数 <strong>axis＝1</strong> 表示逢空值去掉整列。</li><li>how：默认为 <strong>‘any’</strong> 如果一行（或一列）里任何一个数据有出现 NA 就去掉整行，如果设置 <strong>how=‘all’</strong> 一行（或列）都是 NA 才去掉这整行。</li><li>thresh：设置需要多少非空值的数据才可以保留下来的。</li><li>subset：设置想要检查的列。如果是多个列，可以使用列名的 list 作为参数。</li><li>inplace：如果设置 True，将计算得到的值直接覆盖之前的值并返回 None，修改的是源数据。</li></ul><p><strong>判断字段是否为空</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;property-data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (df[<span class="string">&#x27;NUM_BEDROOMS&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span> (df[<span class="string">&#x27;NUM_BEDROOMS&#x27;</span>].isnull())</span><br></pre></td></tr></table></figure><p>当然，有时候我们遇到的空数据可能是这样<code>n/a</code>，可能是这样<code>na</code>，也可能是酱紫<code>--</code>，或者是<code>None</code>酱~</p><p>我们在读取数据中，可以设置将哪些值认定为<code>NA</code>值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">missing_values = [<span class="string">&quot;n/a&quot;</span>, <span class="string">&quot;na&quot;</span>, <span class="string">&quot;--&quot;</span>]</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;property-data.csv&#x27;</span>, na_values = missing_values)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (df[<span class="string">&#x27;NUM_BEDROOMS&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span> (df[<span class="string">&#x27;NUM_BEDROOMS&#x27;</span>].isnull())</span><br><span class="line"><span class="built_in">print</span> (df[<span class="string">&#x27;NUM_BEDROOMS&#x27;</span>].notnull())</span><br></pre></td></tr></table></figure><p><strong>栗子</strong> 移除指定列中的<code>NA</code>行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;property-data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除&#x27;ST_NUM&#x27;列中的空值</span></span><br><span class="line">df.dropna(subset=[<span class="string">&#x27;ST_NUM&#x27;</span>], inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p><strong>2️⃣ 填充空字段</strong></p><p>我们可以用<code>fillna()</code>方法来替换一些空字段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;property-data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 整个表查询并替换</span></span><br><span class="line">df.fillna(<span class="number">12345</span>, inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找PID这行进行替换</span></span><br><span class="line">df[<span class="string">&#x27;PID&#x27;</span>].fillna(<span class="number">12345</span>, inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p>或者通过统计值的方法进行处理~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;property-data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">x = df[<span class="string">&quot;ST_NUM&quot;</span>].mean() <span class="comment"># 均值</span></span><br><span class="line">x = df[<span class="string">&quot;ST_NUM&quot;</span>].median() <span class="comment"># 中位数</span></span><br><span class="line">x = df[<span class="string">&quot;ST_NUM&quot;</span>].mode() <span class="comment"># 众数</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">&quot;ST_NUM&quot;</span>].fillna(x, inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p><strong>3️⃣ 格式错误</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三个日期格式错误</span></span><br><span class="line">data = &#123;</span><br><span class="line">  <span class="string">&quot;Date&quot;</span>: [<span class="string">&#x27;2020/12/01&#x27;</span>, <span class="string">&#x27;2020/12/02&#x27;</span> , <span class="string">&#x27;20201226&#x27;</span>],</span><br><span class="line">  <span class="string">&quot;duration&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">45</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data, index = [<span class="string">&quot;day1&quot;</span>, <span class="string">&quot;day2&quot;</span>, <span class="string">&quot;day3&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在处理时候，我们可以统一将其类型转化</span></span><br><span class="line">df[<span class="string">&#x27;Date&#x27;</span>] = pd.to_datetime(df[<span class="string">&#x27;Date&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p><strong>4️⃣ 数据错误</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">person = &#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span> , <span class="string">&#x27;Taobao&#x27;</span>],</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">12345</span>]    <span class="comment"># 12345 年龄数据是错误的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(person)</span><br><span class="line"></span><br><span class="line">df.loc[<span class="number">2</span>, <span class="string">&#x27;age&#x27;</span>] = <span class="number">30</span> <span class="comment"># 修改数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p>将<code>age</code>大于<code>120</code>的设置为<code>120</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">person = &#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span> , <span class="string">&#x27;Taobao&#x27;</span>],</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: [<span class="number">50</span>, <span class="number">200</span>, <span class="number">12345</span>]    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(person)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> df.index:</span><br><span class="line">  <span class="keyword">if</span> df.loc[x, <span class="string">&quot;age&quot;</span>] &gt; <span class="number">120</span>:</span><br><span class="line">    df.loc[x, <span class="string">&quot;age&quot;</span>] = <span class="number">120</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p>将<code>age</code>大于<code>120</code>的删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">person = &#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span> , <span class="string">&#x27;Taobao&#x27;</span>],</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">12345</span>]    <span class="comment"># 12345 年龄数据是错误的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(person)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> df.index:</span><br><span class="line">  <span class="keyword">if</span> df.loc[x, <span class="string">&quot;age&quot;</span>] &gt; <span class="number">120</span>:</span><br><span class="line">    df.drop(x, inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.to_string())</span><br></pre></td></tr></table></figure><p><strong>5️⃣ 重复数据</strong></p><p>如果要清洗重复数据，可以使用<code>duplicated()</code>和<code>drop_dulicates()</code>方法</p><p>如果数据是重复的，<code>duplicated()</code>会返回<code>True</code>否则会返回<code>False</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">person = &#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>],</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">23</span>]  </span><br><span class="line">&#125;</span><br><span class="line">df = pd.DataFrame(person)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.duplicated())</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">0    False</span></span><br><span class="line"><span class="string">1    False</span></span><br><span class="line"><span class="string">2     True</span></span><br><span class="line"><span class="string">3    False</span></span><br><span class="line"><span class="string">dtype: bool</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>删除重复数据，可以直接使用<strong>drop_duplicates()</strong> 方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">persons = &#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>],</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">23</span>]  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(persons)</span><br><span class="line"></span><br><span class="line">df.drop_duplicates(inplace = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    name  age</span></span><br><span class="line"><span class="string">0  Google   50</span></span><br><span class="line"><span class="string">1  Runoob   40</span></span><br><span class="line"><span class="string">3  Taobao   23</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><hr><h2 id="六、案例">六、案例</h2><p><strong>Case 1🐰</strong></p><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915103634915.png" alt="image-20220915103634915" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915103652035.png" alt="image-20220915103652035" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915103703523.png" alt="image-20220915103703523" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915103711154.png" alt="image-20220915103711154" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915103718599.png" alt="image-20220915103718599" style="zoom:50%;"><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915103725102.png" alt="image-20220915103725102" style="zoom:50%;"><p>当然了，问题三有更优的解决方案：</p><img src="/2022/09/13/%E3%80%90%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%91Pandas%E5%85%A5%E9%97%A8/image-20220915104256752.png" alt="image-20220915104256752" style="zoom:50%;"><p>在时间复杂度和空间复杂度上都能大量优化。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">None</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="数据分析" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【数据结构】差分数组</title>
    <link href="http://example.com/2022/09/12/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%9F%A5%E5%88%86%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2022/09/12/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%9F%A5%E5%88%86%E6%95%B0%E7%BB%84/</id>
    <published>2022-09-12T08:37:54.278Z</published>
    <updated>2022-09-26T15:03:09.622Z</updated>
    
    <content type="html"><![CDATA[<h1>差分数组</h1><hr><h2 id="一、数据结构♎">一、数据结构♎</h2><blockquote><p>在讲差分.数组前，我们可以先看一看【前缀和数组】哦</p></blockquote><table><thead><tr><th style="text-align:center">index</th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th></tr></thead><tbody><tr><td style="text-align:center"><strong>nums</strong></td><td style="text-align:center">8</td><td style="text-align:center">2</td><td style="text-align:center">6</td><td style="text-align:center">-2</td><td style="text-align:center">9</td></tr><tr><td style="text-align:center"><strong>diff</strong></td><td style="text-align:center">8</td><td style="text-align:center">-6</td><td style="text-align:center">4</td><td style="text-align:center">-8</td><td style="text-align:center">11</td></tr></tbody></table><p>我们可以将任意一个数组转化为带有元素之间关系的<strong>差分数组</strong>，其关系为：</p>diff[i]=\left\{ \begin{array}\nums[i]-nums[i-1],i\ne 0\\nums[i],i=0\end{array} \right.<h2 id="二、使用场景♐">二、使用场景♐</h2><p>我们想想这样一个场景：</p><p>有一个<code>一百万数据量</code>的数组，每次需要对其中连续的九十万个数据量进行<code>同步修改</code>，我们会发现，这样做的时间复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>T</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(Tn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，也就是线性级别，在操作次数过多、数组过大时，会耗费大量的时间。这样在某些业务里是不可接受的。</p><p>有没有一种数据结构能够实现对某个区间元素同步进行修改呢？诶，那必须是我们的差分数组啦！！</p><p>对于修改区间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[i,j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>的值，我们只需要令：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mo>=</mo><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">diff[i]+=val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">+</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>，也就是进入的时候，海水开始涨潮了，涨潮后，水平面相对不变(不用修改)，但实际高度增加了(进入的临界点)。当然，最后需要令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mo stretchy="false">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mo>=</mo><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">diff[j+1]-=val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>，也就是退潮啦。</p><p>我们来看两组差分队列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]]</span><br><span class="line"><span class="comment"># [0, 1, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">4</span>,<span class="number">5</span>]]</span><br><span class="line"><span class="comment"># [0, 1, 1, 0, 0, -1]</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">4</span>,<span class="number">5</span>],[<span class="number">3</span>,<span class="number">5</span>],[<span class="number">3</span>,<span class="number">6</span>],[<span class="number">1</span>,<span class="number">4</span>],[<span class="number">2</span>,<span class="number">7</span>]]</span><br><span class="line"><span class="comment"># [0, 2, 2, 2, 0, -2, -2, -1]</span></span><br></pre></td></tr></table></figure><h2 id="三、代码实现🕉️">三、代码实现🕉️</h2><p>我们通过一题来看看如何实现吧！</p><p><a href="https://leetcode.cn/problems/divide-intervals-into-minimum-number-of-groups/">LC6178. 将区间分为最少组数</a></p><img src="/2022/09/12/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%9F%A5%E5%88%86%E6%95%B0%E7%BB%84/image-20220912170357166.png" alt="image-20220912170357166" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minGroups</span>(<span class="params">self, intervals: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"><span class="comment"># 核心在于： 寻找同时重叠的波浪</span></span><br><span class="line">        <span class="comment"># 差分队列</span></span><br><span class="line">        maxVal=<span class="built_in">max</span>([i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> intervals])</span><br><span class="line">        diff=[<span class="number">0</span>]*(maxVal+<span class="number">1</span>) <span class="comment"># 0-&gt;maxVal</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算区间变化情况</span></span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> intervals:</span><br><span class="line">            diff[i]+=<span class="number">1</span> <span class="comment"># 涨潮</span></span><br><span class="line">            <span class="keyword">if</span> j+<span class="number">1</span>&lt;=maxVal:</span><br><span class="line">                diff[j+<span class="number">1</span>]-=<span class="number">1</span> <span class="comment"># 退潮</span></span><br><span class="line">        <span class="comment"># 查看有多少区间上重叠了</span></span><br><span class="line">        <span class="comment"># 最大值就是重叠的区间数目</span></span><br><span class="line">        res,t=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> diff:</span><br><span class="line">            t+=i</span><br><span class="line">            res=<span class="built_in">max</span>(res,t)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>当然并不是所有的区间问题都能用差分求解！差分只是为了简化赋值运算，那么该贪心的时候就贪心，该DP就DP，别老想着别的。</p><p>不过如果你说重叠部分，差分确实能够起到一定的效果~</p><p>下面看看一个经典差分</p><h4 id="LC-2381-字母移位-II"><a href="https://leetcode.cn/problems/shifting-letters-ii/">LC 2381. 字母移位 II</a></h4><img src="/2022/09/12/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%9F%A5%E5%88%86%E6%95%B0%E7%BB%84/image-20220912222755301.png" alt="image-20220912222755301" style="zoom:50%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全是赋值运算！</span></span><br><span class="line"><span class="comment"># 正常算的话，会超时</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">shiftingLetters</span>(<span class="params">self, s: <span class="built_in">str</span>, shifts</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        diff=[<span class="number">0</span>]*(<span class="built_in">len</span>(s)+<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 构建差分</span></span><br><span class="line">        <span class="keyword">for</span> st,e,shift <span class="keyword">in</span> shifts:</span><br><span class="line">            diff[st]+=shift*<span class="number">2</span>-<span class="number">1</span></span><br><span class="line">            diff[e+<span class="number">1</span>]-=shift*<span class="number">2</span>-<span class="number">1</span></span><br><span class="line">        <span class="comment"># 获取移动表</span></span><br><span class="line">        shift=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> diff:</span><br><span class="line">            <span class="keyword">if</span> shift==[]:</span><br><span class="line">                shift.append(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                shift.append(i+shift[-<span class="number">1</span>])</span><br><span class="line">        <span class="comment"># 输出</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&quot;a&quot;</span>)+(<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&quot;a&quot;</span>)+dif)%<span class="number">26</span>) <span class="keyword">for</span> i,dif <span class="keyword">in</span> <span class="built_in">zip</span>(s,shift)])</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">数据结构之【差分数组】</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Python 奇怪的知识</title>
    <link href="http://example.com/2022/09/07/%E3%80%90Python%E3%80%91Python%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2022/09/07/%E3%80%90Python%E3%80%91Python%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86/</id>
    <published>2022-09-07T13:43:14.992Z</published>
    <updated>2022-09-19T09:54:48.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python奇怪的知识">Python奇怪的知识</h2><h3 id="带余除法！"><strong>带余除法！</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C,D=<span class="built_in">divmod</span>(A,B)</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg.</span></span><br><span class="line"><span class="comment"># print(divmod(19,6))</span></span><br><span class="line"><span class="comment"># (3,1)</span></span><br></pre></td></tr></table></figure><h3 id="Join神器！">Join神器！</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&quot; &quot;</span>*A).join(B)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意啦！</span></span><br><span class="line"><span class="comment"># 以B[0]开头 B[n-1]结尾</span></span><br><span class="line"><span class="comment"># 中间穿插&quot; &quot;*A  </span></span><br></pre></td></tr></table></figure><p><strong>多规则排序!</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">要求对nums数组中的元素先按照数量升序，数量相同的时候按照字典序降序！</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先获取数量</span></span><br><span class="line">cnt=Counter(nums)</span><br><span class="line">nums.sort(key=<span class="keyword">lambda</span> x:(cnt[x],-x))</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">Python 奇怪的知识</summary>
    
    
    
    <category term="不想学辣" scheme="http://example.com/categories/%E4%B8%8D%E6%83%B3%E5%AD%A6%E8%BE%A3/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【知乎转载】鼻炎成因及疗法</title>
    <link href="http://example.com/2022/09/07/%E3%80%90%E7%9F%A5%E4%B9%8E%E8%BD%AC%E8%BD%BD%E3%80%91%E9%BC%BB%E7%82%8E/"/>
    <id>http://example.com/2022/09/07/%E3%80%90%E7%9F%A5%E4%B9%8E%E8%BD%AC%E8%BD%BD%E3%80%91%E9%BC%BB%E7%82%8E/</id>
    <published>2022-09-07T12:35:06.647Z</published>
    <updated>2022-09-07T12:37:44.113Z</updated>
    
    <content type="html"><![CDATA[<p>“通鼻喷剂”、“鼻甲切除术”的滥用，只追求迅速，不看长远。</p><p>通鼻喷剂，简直是鼻塞患者的“神药”一喷即灵，立竿见影的效果，殊不知这是在饮鸩止渴，一开始使用确实效果很好，但持续一段时间后，发现原来喷一下就通了，现在得喷两下、三下，并且药效越来越短，之前喷完两三个小时都不堵，现在不到半小时又堵了。于是剂量越用越大，使用次数越来越多，形成药物依赖。</p><p>我曾经有个鼻炎患者，买“通鼻喷剂”是以箱为单位，最后只要不用，鼻子就永远没畅通过。</p><p>这些“通鼻喷剂”从作用原理分类上属于减充血剂，也可以称为血管收缩剂。</p><p>药物性鼻炎就是长期过度使用这类药物而引发的。</p><p>鼻塞产生的原因是：血管通透性增加，使得大量血浆渗入黏膜组织，造成水肿堵塞了气道。</p><p>通过使用减充血剂，就像从源头上把供水的水管给关紧了，没有持续的体液供应，组织水肿就会消退，黏膜肿胀的问题缓解，气道重新恢复通畅。</p><p>但是，长期使用减充血剂后，血管的“阀门”会对药物变得越来越不敏感，更糟糕的是还会出现反跳性充血，因为经常使用减充血剂，血液流量减少了，不仅让黏膜组织得不到充足的营养供应，并且代谢的废物也会堆积在鼻腔，血管不得不代偿性扩张以平衡药物收缩血管的作用。</p><p>结果就是通鼻喷剂越用越多、效果越来越差、不用就不通，最后就成了“药物性鼻炎”</p><p>儿童用减充血剂的危害更大，因为儿童鼻黏膜娇嫩、血管丰富，药物吸收的更快，剂量更难以把控，效果和副作用更加明显，还有通过鼻咽后有被孩子吞食的风险，从胃部进入血液的药物会作用于全身，因此大部分减充血剂都禁止给儿童使用</p><p>除了通鼻喷剂，减充血剂还会藏在各种复方制剂中，最常见的是感冒药，在名称中带有“麻”字的感冒药通常含有减充血剂，所以需要家长们格外注意。</p><p>为了短暂的鼻子通畅，冒着承受严重副作用和药物依赖的风险，实在不值得。</p><p>空鼻综合征：每一次呼吸都是痛苦的折磨<br>“一进入空调车，我每吸一口气，就感觉冷空气直接进入到我的肺里。”</p><p>“鼻子不痛，人难受、头疼、整晚睡不着觉…”</p><p>“晚上睡觉就像‘烙大饼’，左边鼻子堵了翻右边，右边又堵了再翻左边，经常堵醒或嗓子干，半夜起来喝水，一个晚上可以翻100次身。”</p><p>“睡不好、注意力不集中，像我这种原来学习能力很强的人，影响用脑感觉很痛苦，好多事都没精力做…”</p><p>这些人在描述自己的状况时，几乎都用了“生不如死”，每时每刻都要呼吸，而每一次呼吸都是痛苦的折磨。</p><p>都是因为手术切除部分鼻甲黏膜后，鼻黏膜对空气加温、加湿以及过滤的功能作用被破坏，吸入鼻腔的干冷空气直接进入气管肺部，还刺激着鼻腔分布的神经末梢，造成反射性头痛；这些直接吸进去的空气缺乏有效的清洁过滤，携带细菌进入还可能造成呼吸道感染。</p><p>切除肿胀的鼻黏膜后鼻腔本来是变宽大了，通气顺畅才对，为什么还会出现鼻塞？</p><p>是因为鼻黏膜上丰富的的末梢神经能感知气流，一旦被破坏就会感觉不到空气流动，产生鼻塞的感觉，还伴有头痛、嗅觉减退等症状。</p><p>除了鼻甲切除术，还有黏膜外黏膜消除术（如表面烧灼、激光治疗）</p><p>黏膜下消融术（如黏膜内烧灼、射频消融、激光治疗）等破坏黏膜的疗法都有造成空鼻综合征的风险。</p><p>上面所说的两种方法都是为了解决鼻塞的问题<br>为什么会一直鼻塞，鼻塞的常见原因是什么？</p><p>1、过敏引起的鼻塞</p><p>吸入一些过敏原如花粉、尘螨、面粉等，引起过敏反应，鼻腔黏膜充血，影响空气吸入，造成鼻塞。这种需要查过敏原，从源头避免吸入过敏原。</p><p>2、慢性鼻炎</p><p>鼻腔纤毛摆动异常，无法运送垃圾出去，这些炎性物质不断堆积在鼻腔里，堆积的分泌物和炎性物质又不断刺激鼻黏膜，进一步加重纤毛摆动异常，如此形成恶性循环，鼻炎久而不愈。</p><p>这种慢性鼻炎需要抗炎排分泌物，从源头减少分泌物，然后修复鼻黏膜使纤毛恢复正常摆动，加快运送垃圾。</p><p>3、鼻中隔偏曲</p><p>大部分人的鼻中隔其实都会微微偏向鼻腔的某一侧，这并不会导致功能障碍，但如果鼻中隔“拗造型”太过放飞自我，扭成了“C”形或者“S”形时，问题就严重了，会造成经常流鼻血、鼻塞不通气等难受的病症。</p><p>4、外伤、发育不良</p><p>通鼻喷剂不是给孩子缓解鼻塞长期用的，手术切除鼻甲又会有“空鼻综合征”的风险，那么孩子鼻塞，家长该怎么办？试试这些方法<br>鼻塞是症状，是因为鼻腔有炎症才会造成鼻塞，因此对付鼻塞的根本是消除炎症，降低血管通透性。缓解鼻塞的思路绝对不是收缩血管，相反，应该加快局部血液循环，带走潴留在组织中的液体，像大禹治水一样，堵不如疏。</p><p>1、按摩这些穴位</p><p>揉迎香穴、山根穴、风池穴、摩擦鼻梁</p><p>2、中药雾化&amp;水蒸汽</p><p>和之前咳嗽的蒸汽排痰法一样，用水蒸气熏蒸15~20分钟，注意温度距离，避免烫伤。</p><p>配合中药配方雾化，促进分泌物排出的同时修复黏膜、消除炎症。</p><p>3、半导体弱激光照射鼻黏膜</p><p>采用红光或红外光照射鼻腔黏膜，可以促进鼻黏膜局部血液循环，改善黏膜水肿缓解鼻塞。</p><p>这种激光照射知识一种缓解鼻塞症状的辅助治疗手段，和盐水洗鼻的作用类似，真正解决鼻塞，还是需要修鼻腔黏膜、消除炎症。</p><p>4、盐水洗鼻</p><p>盐水洗鼻是需要用药店的生理盐水，不是在家用食盐和水兑成生理盐水。并且盐水冲洗鼻腔需要一定水压和水量，要格外注意，因为有可能把炎性物质冲进更深地方，引发其他部位感染发炎。</p><p>人体有自己的黏液纤毛清除运动，所以要解决鼻塞，还是需要修复黏膜，让纤毛恢复正常摆动，加快运送垃圾，消除炎症刺激。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">转载自https://www.zhihu.com/question/366308089/answer/1329668016</summary>
    
    
    
    <category term="拾枝杂谈" scheme="http://example.com/categories/%E6%8B%BE%E6%9E%9D%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="知乎转载" scheme="http://example.com/tags/%E7%9F%A5%E4%B9%8E%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
